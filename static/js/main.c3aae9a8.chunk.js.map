{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","API/index.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/reducer.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/Dashboard/MoviesList/MoviesList.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/reducer.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","components/Movies/Filters/Filters.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","navTabs","NavBar","t","useTranslation","history","useHistory","position","Tabs","aria-label","centered","variant","map","tab","label","onClick","push","String","Math","random","ButtonGroup","Object","values","changeLanguage","API_KEY","NOW_PLAYING_REQUEST_WORD","UPCOMING_REQUEST_WORD","POPULAR_REQUEST_WORD","dashBoardButtons","name","requestWord","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","status","error","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","type","payload","fetch","data","json","result","put","results","slice","takeEvery","listsStoreData","selector","lists","action","url","MoviesList","dispatch","useDispatch","list","useParams","useSelector","language","path","getListUrl","useEffect","length","List","title","ListItem","StyledSelect","Select","marginTop","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","getGenresSuccess","genres","initialMoviesState","genresList","filteredMovies","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","FilteredMoviesList","genre","getMoviesUrl","id","Filters","getGenresUrl","useState","setGenre","toApplyFilter","setToApplyFilter","FormControl","InputLabel","labelId","value","onChange","e","target","handleChange","MenuItem","TextField","InputLabelProps","shrink","textAlign","height","fontFamily","minWidth","App","maxWidth","component","exact","initialState","combineReducers","state","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.c3aae9a8.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '80%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n","import React from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory } from 'react-router-dom';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <StyledContainer>\n      <StyledAppBar position=\"static\">\n        <Tabs aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n});\n","export const API_KEY: string = 'bb2b538ec7dc87a9a9ecaa9065c3baff';\n\n//lists\nexport const getListUrl = (lng: string, list: string): string =>\n  `https://api.themoviedb.org/3/movie/${list}?api_key=${API_KEY}&language=${lng}&page=1`;\n\nexport const NOW_PLAYING_REQUEST_WORD = 'now_playing';\nexport const UPCOMING_REQUEST_WORD = 'upcoming';\nexport const POPULAR_REQUEST_WORD = 'popular';\n\n//genres\nexport const getGenresUrl = (lng: string) =>\n  `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=${lng}`;\n\n//movies\nexport const getMoviesUrl = (lng: string, genre: string) =>\n  `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=${lng}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&with_watch_monetization_types=flatrate`;\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { NOW_PLAYING_REQUEST_WORD, UPCOMING_REQUEST_WORD, POPULAR_REQUEST_WORD } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; requestWord: string }[] = [\n  { name: 'dashboard.nowPlaying', requestWord: NOW_PLAYING_REQUEST_WORD },\n  { name: 'dashboard.upcoming', requestWord: UPCOMING_REQUEST_WORD },\n  { name: 'dashboard.popular', requestWord: POPULAR_REQUEST_WORD },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, requestWord }) => (\n          <StyledButton key={String(Math.random())} onClick={() => history.push(requestWord)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'ADD_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'ADD_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'ADD_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: 'requested',\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: 'success',\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: 'error',\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, 5)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { getListUrl, NOW_PLAYING_REQUEST_WORD, UPCOMING_REQUEST_WORD, POPULAR_REQUEST_WORD } from '../../../API';\nimport i18n from 'i18next';\n\nconst listsStoreData = {\n  [NOW_PLAYING_REQUEST_WORD]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [UPCOMING_REQUEST_WORD]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [POPULAR_REQUEST_WORD]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: string }>();\n  const movies = useSelector(listsStoreData[list as keyof typeof listsStoreData].selector);\n  const lng = i18n.language;\n  const path = getListUrl(lng, list);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list as keyof typeof listsStoreData].action(path));\n    }\n  }, [list]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n    dispatch(listsStoreData[list as keyof typeof listsStoreData].action(path));\n  }, [lng]);\n\n  return (\n    <List>\n      {movies.map(({ title }: any) => (\n        <ListItem key={String(Math.random())}>{title}</ListItem>\n      ))}\n    </List>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '75%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'ADD_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'ADD_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'ADD_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'ADD_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'ADD_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'ADD_FILTERED_MOVIES_REQUESTED';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n} from './actions';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n  },\n};\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: 'requested',\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: 'success',\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: 'error',\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: 'requested',\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: 'success',\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: 'error',\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n} from './actions';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested, filteredMovies } from '../store';\nimport { getMoviesUrl } from '../../../API';\n\ntype Props = {\n  genre: string;\n};\n\nexport const FilteredMoviesList: React.FC<Props> = ({ genre }) => {\n  const dispatch = useDispatch();\n  const movies = useSelector(filteredMovies);\n  const lng = i18n.language;\n  const path = getMoviesUrl(lng, genre);\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [genre]);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: any) => (\n        <ListItem key={id}>{title}</ListItem>\n      ))}\n    </List>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl } from '../../../API';\nimport i18n from 'i18next';\nimport { getGenresRequested, genres } from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilteredMoviesList } from '../../Movies/FilteredMoviesList/FilteredMoviesList';\n\nexport const Filters: React.FC = () => {\n  const lng = i18n.language;\n  const path = getGenresUrl(lng);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n\n  const [genre, setGenre] = useState('');\n  const [toApplyFilter, setToApplyFilter] = useState(false);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n    setToApplyFilter(false);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(path));\n  }, [lng]);\n\n  return (\n    <div>\n      <StyledContainer>\n        <FormControl>\n          <InputLabel id=\"demo-simple-select-label\">{t('filters.genre')}</InputLabel>\n          <StyledSelect\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={genre}\n            onChange={(e) => handleChange(e as React.ChangeEvent<HTMLSelectElement>)}\n          >\n            {genresList.map(({ name, id }: any) => (\n              <MenuItem key={id} value={id}>\n                {name}\n              </MenuItem>\n            ))}\n          </StyledSelect>\n        </FormControl>\n        <TextField\n          id=\"date\"\n          label={t('filters.startDate')}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id=\"date\"\n          label={t('filters.endDate')}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <StyledButton onClick={() => setToApplyFilter(true)}>{t('filters.apply')}</StyledButton>\n      </StyledContainer>\n      {toApplyFilter && <FilteredMoviesList genre={genre} />}\n    </div>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(56, 50, 50, 0.6)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  height: '800px',\n  fontFamily: 'sans-serif',\n  minWidth: '1000px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { Filters } from './components/Movies';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <NavBar />\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movies\" component={Filters} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\n\nexport const initialState = {\n  initialListsState,\n  initialMoviesState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchGenresSaga, watchFilteredMoviesSaga } from '../components/Movies/store';\n\nexport default function* rootSaga() {\n  yield all([watchMoviesSaga(), watchGenresSaga(), watchFilteredMoviesSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(applyMiddleware(sagaMiddleware), (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}