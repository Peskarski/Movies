{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","store/types.ts","components/LogIn/store/actions.ts","components/LogIn/store/reducer.ts","components/LogIn/store/sagas.ts","components/LogIn/store/selectors.ts","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/reducer.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/MovieCard/styles.js","components/MovieCard/CardPopper/styles.js","components/CreatedLists/store/actions.ts","components/CreatedLists/store/reducer.ts","components/CreatedListDetails/store/actions.ts","components/CreatedListDetails/store/reducer.ts","components/CreatedListDetails/store/sagas.ts","components/CreatedListDetails/store/selectors.ts","components/CreatedLists/store/sagas.ts","components/CreatedLists/store/selectors.ts","components/MovieCard/CardPopper/CardPopper.tsx","components/MovieCard/MovieCard.tsx","components/Dashboard/MoviesList/MoviesList.tsx","components/MovieDetails/MovieInfo/styles.js","components/MovieDetails/MovieInfo/utils.ts","components/MovieDetails/MovieInfo/MovieInfo.tsx","components/MovieDetails/store/actions.ts","components/MovieDetails/store/reducer.ts","components/MovieDetails/store/sagas.ts","components/MovieDetails/store/selectors.ts","components/MovieDetails/RecomendationsList/styles.js","components/MovieDetails/RecomendationsList/RecomendationsList.tsx","components/MovieDetails/styles.js","components/MovieDetails/MovieDetails.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/reducer.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/Movies/Filters/Filters.tsx","components/Movies/FilteredMoviesList/styles.js","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","components/Movies/Pagination/styles.js","components/Movies/Pagination/MoviesPagination.tsx","components/Movies/Movies.tsx","components/RandomMovie/store/actions.ts","components/RandomMovie/store/reducer.ts","components/RandomMovie/utils.ts","components/RandomMovie/store/sagas.ts","components/RandomMovie/store/selectors.ts","components/RandomMovie/RandomMovie.tsx","components/CreatedLists/CreationForm/styles.js","components/CreatedLists/CreationForm/ListCreationForm.tsx","components/CreatedLists/Lists/styles.js","components/CreatedLists/Lists/Lists.tsx","components/CreatedLists/CreatedtLists.tsx","components/CreatedListDetails/styles.js","components/CreatedListDetails/CreatedListDetails.tsx","components/LogIn/styles.js","components/LogIn/LogIn.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","whiteSpace","StyledButton","Button","StyledContainer","Container","display","justifyContent","StyledLogInButton","StyledPersonIcon","PersonIcon","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","Status","GET_REQUEST_TOKEN_SUCCESS","GET_REQUEST_TOKEN_ERROR","GET_REQUEST_TOKEN_REQUESTED","GET_SESSION_ID_SUCCESS","GET_SESSION_ID_ERROR","GET_SESSION_ID_REQUESTED","initialLogInState","requestToken","tokenDetails","status","error","sessionID","session_id","localStorage","getItem","getRequestTokenSaga","watchRequestTokenSaga","getSessionIDSaga","watchSessionIDSaga","payload","fetch","data","json","result","put","type","takeEvery","url","method","body","ListNames","logIn","request_token","navTabs","NavBar","t","useTranslation","history","useHistory","location","useLocation","useState","value","setValue","isUserLoggedIn","useSelector","useEffect","window","scrollTo","onClick","push","position","Tabs","aria-label","centered","variant","onChange","e","newValue","TabIndicatorProps","style","map","tab","label","String","Math","random","ButtonGroup","Object","values","changeLanguage","flexWrap","StyledList","List","flexDirection","alignItems","BASE_URL","getMoviesUrl","language","genre","startDate","endDate","page","region","provider","process","join","getPosterUrl","path","getCreatedListsUrl","REACT_ACCOUNT_ID","getListDetailsUrl","listID","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","results","slice","StyledCard","Card","maxHeight","backgroundColor","StyledPopperContainer","height","borderRadius","StyledPopper","Popper","top","GET_CREATED_LISTS_SUCCESS","GET_CREATED_LISTS_ERROR","GET_CREATED_LISTS_REQUESTED","CREATE_LIST","GET_CREATED_LIST_STATUS","DELETE_LIST","GET_DELETED_LIST_STATUS","ADD_MOVIE_TO_LIST","GET_ADDED_MOVIE_STATUS","REMOVE_MOVIE_FROM_LIST","GET_REMOVED_MOVIE_STATUS","getCreatedListsRequested","getCreatedListStatus","createdList","getDeletedListStatus","deletedList","getAddedMovieStatus","addedMovie","initialCreatedListsState","lists","lastCreatedList","lastDeletedList","lastAddedMovie","lastRemovedMovie","GET_LIST_DETAILS_SUCCESS","GET_LIST_DETAILS_ERROR","GET_LIST_DETAILS_REQUESTED","getListDetailsRequested","initialListDetailsState","details","getListDetailsSaga","watchListDetailsSaga","moviesFromList","listDetails","items","listName","getCreatedListsSaga","watchCreatedListsSaga","createListSaga","watchCreateListSaga","deleteListSaga","watchDeleteListSaga","addMovieToListSaga","watchAddMovieToListSaga","createdLists","createListUrl","headers","JSON","stringify","listData","response","createdListsUrl","deleteListUrl","media_id","movieID","userLists","CardPopper","anchorEl","isRenderedInUserList","dispatch","useDispatch","list_id","useParams","isPopperOpened","Boolean","createdListsPath","React","menuAnchorEl","setMenuAnchorEl","isMenuOpened","closeLists","stopPropagation","handleAddMovieToListClick","getAddMovieToListUrl","addMovieData","addMovieToList","open","placement","IconButton","length","currentTarget","Menu","onClose","MenuItem","id","removeMoviePath","getRemoveMovieFromListUrl","listDetailsPath","removedMovieData","removeMovieFromList","removeMovieUrl","listDetailsUrl","MovieCard","title","posterPath","posterSrc","setAnchorEl","onMouseEnter","onMouseLeave","CardActionArea","CardMedia","component","alt","image","CardContent","listsStoreData","selector","action","MoviesList","list","getListUrl","poster_path","StyledBox","Box","textAlign","marginLeft","arrayToString","arr","item","numberToMoney","number","Number","toLocaleString","MovieInfo","budget","genres","production_countries","release_date","revenue","tagline","genresLine","countriesLine","renderData","className","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_ERROR","GET_MOVIE_DETAILS_REQUESTED","GET_RECOMENDATIONS_REQUESTED","GET_RECOMENDATIONS_SUCCESS","GET_RECOMENDATIONS_ERROR","getMovieDetailsSuccess","getRecomendationsSuccess","recomendations","initialMovieDetailsState","getMovieDetailsSaga","watchMovieDetailsSaga","getRecomendationsSaga","watchRecomendationsSaga","movieDetails","RecomendationsList","marginTop","MovieDetails","overview","detailsPath","getMovieDetailsUrl","recomendationsPath","getRecomendationsUrl","getRecomendationsRequested","src","StyledSelect","Select","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","GET_TOTAL_PAGES","GET_CURRENT_COUNTRY_SUCCESS","GET_CURRENT_COUNTRY_ERROR","GET_CURRENT_COUNTRY_REQUESTED","GET_PROVIDERS_SUCCESS","GET_PROVIDERS_ERROR","GET_PROVIDERS_REQUESTED","getCurrentCountrySuccess","countryCode","getProvidersSuccess","providers","initialMoviesState","genresList","filteredMovies","totalPages","currentCountry","code","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","getCurrentCountrySaga","watchCurrentCountrySaga","getProvidersSaga","watchProvidersSaga","total_pages","availableCountriesUrl","availableCountriesData","availableCountriesResult","availableCountries","iso_3166_1","currentCountryUrl","currentCountryData","currentCountryResult","country_code","includes","currentCountryCode","Filters","onAplied","genresPath","getGenresUrl","currentCountryPath","availableCountriesPath","providersList","providersPath","country","getProvidersUrl","setGenre","setProvider","setStartDate","setEndDate","FormControl","InputLabel","labelId","target","handleGenreChange","multiple","handleProviderChange","provider_name","provider_id","TextField","InputLabelProps","shrink","FilteredMoviesList","StyledPagination","Pagination","border","MoviesPagination","changePage","pages","count","size","shape","Movies","setPage","setRegion","GET_RANDOM_MOVIE_SUCCESS","GET_RANDOM_MOVIE_ERROR","GET_RANDOM_MOVIE_REQUESTED","getRandomMovieSuccess","movie","initialRandomMovieState","randomMovie","getRandomNumber","min","max","ceil","floor","getRandomMovieSaga","watchRandomMovieSaga","array","totalPagesForRandom","RandomMovie","getRandomPage","StyledInput","Input","ListCreationForm","useForm","register","handleSubmit","reset","createListPath","getCreateListUrl","onSubmit","description","placeholder","cursor","Lists","handleDeleteListClick","deleteListPath","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","CreatedLists","CreatedListDetails","LogIn","token","requestTokenPath","permissionPath","getPermissionUrl","sessionIDPath","getSessionIDUrl","setItem","Link","href","minWidth","minHeight","fontFamily","App","maxWidth","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"qHAKYA,E,uGCECC,EAAeC,YAAOC,IAAPD,CAAe,CACzCE,MAAO,MACPC,OAAQ,OACRC,WAAY,sBAGDC,EAAYL,YAAOM,IAAPN,CAAY,CACnCO,SAAU,OACVC,WAAY,OACZC,MAAO,QACPC,WAAY,WAGDC,EAAeX,YAAOY,IAAPZ,CAAe,CACzCE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDS,EAAkBb,YAAOc,IAAPd,CAAkB,CAC/Ce,QAAS,OACTC,eAAgB,kBAGLC,EAAoBjB,YAAOY,IAAPZ,CAAe,CAC9CE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,kBACZ,UAAW,CACTK,MAAO,QACPL,WAAY,wBAIHc,EAAmBlB,YAAOmB,IAAPnB,CAAmB,CACjDG,OAAQ,WACRM,MAAO,oB,6ED1CGX,K,QAAAA,E,SAAAA,M,KAKL,IAAMsB,GAAS,mBACnBtB,EAASuB,GAAK,CACbC,YAAaC,IAFK,cAInBzB,EAAS0B,GAAK,CACbF,YAAaG,IALK,GAStBC,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BC,IAAKhC,EAASuB,GACdD,c,IErBUW,E,gBCACC,EAA4B,4BAC5BC,EAA0B,0BAC1BC,EAA8B,8BAC9BC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAA2B,2B,iBDL5BN,K,sBAAAA,E,kBAAAA,E,eAAAA,M,KEUL,IAAMO,EAAoB,CAC/BC,aAAc,CACZC,aAAc,GACdC,OAAQ,KACRC,MAAO,MAETC,UAAW,CACTH,aAAc,CACZI,WAAYC,aAAaC,QAAQ,eAEnCL,OAAQ,KACRC,MAAO,O,mCCVMK,G,WAUAC,G,WAIAC,G,WAaAC,GA3BV,SAAUH,EAAV,8EAEU,OAFsBI,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YFPD,CACLC,KAAMzB,EACNmB,QEKiCI,IAJ9B,0DAMHC,aFHiCd,EEGR,EAAD,GFFnB,CACLe,KAAMxB,EACNkB,QAAST,KENN,kCFG6B,IAACA,IEH9B,iBAUA,SAAUM,IAAV,iEACL,OADK,SACCU,YAAUxB,EAA6Ba,GADxC,uCAIA,SAAUE,EAAV,8EAEU,OAFmBE,EAA7B,EAA6BA,QAA7B,kBAEgBC,MAAMD,EAAQQ,IAAK,CACpCC,OAAQ,OACRC,KAAMV,EAAQU,OAJb,OAMY,OAJTR,EAFH,gBAMkBA,EAAKC,OANvB,OAOH,OADMC,EANH,iBAOGC,YFHD,CACLC,KAAMtB,EACNgB,QEC8BI,IAP3B,0DASHC,aFC8Bd,EEDR,EAAD,GFEhB,CACLe,KAAMrB,EACNe,QAAST,KEbN,kCFU0B,IAACA,IEV3B,iBAaA,SAAUQ,IAAV,iEACL,OADK,SACCQ,YAAUrB,EAA0BY,GADrC,uCCtCA,ICMKa,GDNCvB,GAAe,SAAC,GAAD,SAAGwB,MAAuBxB,aAAaC,aAAawB,eACnErB,GAAY,SAAC,GAAD,SAAGoB,MAAuBpB,UAAUH,aAAaI,Y,QEUpEqB,GAAoB,CAAC,mBAAoB,gBAAiB,sBAEnDC,GAAmB,WAC9B,IAAQC,EAAMC,cAAND,EACFE,EAAUC,cACVC,EAAWC,cACjB,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAA0BC,YAAYlC,IAU5C,OAJAmC,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACT,IAGF,gBAAC1D,EAAD,YACI+D,GACA,eAAC3D,EAAD,CAAmBgE,QAAS,kBAAMZ,EAAQa,KAAR,WAAlC,SAA2Df,EAAE,kBAE/D,eAACpE,EAAD,CAAcoF,SAAS,SAAvB,SACE,gBAACC,EAAA,EAAD,CACEC,aAAW,sBACXC,UAAQ,EACRC,QAAQ,YACRb,MAAOA,EACPc,SAnBa,SAACC,EAA0BC,GAC9Cf,EAASe,IAmBHC,kBAAmB,CACjBC,MAAO,CAAExF,WAAY,UAPzB,UAUG6D,GAAQ4B,KAAI,SAACC,GAAD,OACX,eAACzF,EAAD,CACE0F,MAAO5B,EAAE2B,GAETb,QAAS,kBAAMZ,EAAQa,KAAR,WAAiBf,EAAE2B,EAAK,CAAEhE,IAAK,OAA/B,QADVkE,OAAOC,KAAKC,cAIpBtB,GAAkB,eAACvE,EAAD,CAAW0F,MAAO5B,EAAE,gBAAiBc,QAAS,kBAAMZ,EAAQa,KAAR,mBAG3E,eAACiB,EAAA,EAAD,CAAaZ,QAAQ,YAAYF,aAAW,iCAA5C,SACGe,OAAOC,OAAOvG,GAAU+F,KAAI,SAAC/D,GAAD,OAC3B,eAACnB,EAAD,CAA0CsE,QAAS,kBAAMvD,IAAK4E,eAAexE,IAA7E,SACGA,GADgBkE,OAAOC,KAAKC,gBAKlCtB,GAAkB,eAAC1D,EAAD,CAAkBX,SAAS,c,UCxDvCI,GAAeX,YAAOY,IAAPZ,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPL,WAAY,oBACZD,OAAQ,MACR,UAAW,CACTC,WAAY,WAIHS,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACPa,QAAS,OACTwF,SAAU,WAGCC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WF3BRC,GAAW,iC,SAML9C,K,uCAAAA,E,iCAAAA,E,gCAAAA,Q,KAOL,I,GAIM+C,GAAe,SAC1BC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAP0B,gBASvBR,GATuB,kCAUxBS,mCAVwB,qBAWbP,EAXa,wFAW2EC,EAX3E,qCAW6GC,EAX7G,qCAWmJC,EAXnJ,iBAWmKC,EAXnK,iCAWgME,EAASE,KACjO,KAZwB,yBAaRH,EAbQ,4CAoBfI,GAAe,SAACC,GAAD,gDAA6DA,IA+B5EC,GAAqB,SAACX,EAAkBnE,GAAnB,gBAC7BiE,GAD6B,mBACVS,oPAAYK,iBADF,0BACoCL,mCADpC,qBAC8EP,EAD9E,uBACqGnE,EADrG,YAgBrBgF,GAAoB,SAACC,EAAgBd,GAAjB,gBAC5BF,GAD4B,gBACZgB,EADY,oBACMP,mCADN,qBACgDP,IG/E3Ee,GAA6D,CACjE,CAAEC,KAAM,uBAAwBC,aAAcjE,GAAUkE,0BACxD,CAAEF,KAAM,qBAAsBC,aAAcjE,GAAUmE,uBACtD,CAAEH,KAAM,oBAAqBC,aAAcjE,GAAUoE,uBAG1CC,GAAsB,WACjC,IAAM9D,EAAUC,cACRH,EAAMC,cAAND,EAER,OACE,qCACE,eAAC,GAAD,UACG0D,GAAiBhC,KAAI,gBAAGiC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACpB,eAAC,GAAD,CAAyB9C,QAAS,kBAAMZ,EAAQa,KAAK6C,IAArD,SACG5D,EAAE2D,IADcA,WCpBhBM,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA2B,2BAE3BC,GAAc,aACdC,GAAW,WACXC,GAAU,UCJjBC,GAAa,CACjBC,OAAQ,GACRnG,OAAQ,KACRC,MAAO,MAGImG,GAAoB,CAC/BC,WAAYH,GACZI,SAAUJ,GACVK,QAASL,I,YCqBMM,I,YAUAC,IA3BXC,IAAc,qBACjBX,GAAc,CACbY,QFTgC,SAACR,GACnC,MAAO,CACLnF,KAAM2E,GACNN,KAAMU,GACNrF,QAASyF,IEMTlG,MFF8B,SAACA,GACjC,MAAO,CACLe,KAAM4E,GACNP,KAAMU,GACNrF,QAAST,MELO,eAKjBgG,GAAU,CACTU,QFmC6B,SAACR,GAChC,MAAO,CACLnF,KAAM2E,GACNN,KAAMY,GACNvF,QAASyF,IEtCTlG,MF0C2B,SAACA,GAC9B,MAAO,CACLe,KAAM4E,GACNP,KAAMY,GACNvF,QAAST,MErDO,eASjB+F,GAAW,CACVW,QFO8B,SAACR,GACjC,MAAO,CACLnF,KAAM2E,GACNN,KAAMW,GACNtF,QAASyF,IEVTlG,MFc4B,SAACA,GAC/B,MAAO,CACLe,KAAM4E,GACNP,KAAMW,GACNtF,QAAST,ME7BO,IAiBb,SAAUuG,GAAV,gFAEU,OAFgB9F,EAA1B,EAA0BA,QAAS2E,EAAnC,EAAmCA,KAAnC,kBAEgB1E,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAI2F,GAAerB,GAAqCsB,QAAQ7F,EAAO8F,QAAQC,MAAM,EANzE,KAEf,0DAMH9F,YAAI2F,GAAerB,GAAqCpF,MAApD,OAND,uDAUA,SAAUwG,KAAV,iEACL,OADK,SACCxF,YAAU4E,GAAsBW,IADjC,wCC3CA,I,wCCGMM,GAAavJ,YAAOwJ,KAAPxJ,CAAa,CACrCE,MAAO,QACPuJ,UAAW,QACXtJ,OAAQ,aACR,WAAY,CACVuJ,gBAAiB,qBACjBjJ,MAAO,SAET,QAAS,CACPgJ,UAAW,W,wCCTFE,GAAwB3J,YAAOc,IAAPd,CAAkB,CACrDE,MAAO,QACP0J,OAAQ,OACR7I,QAAS,OACTC,eAAgB,eAChBZ,WAAY,wBACZyJ,aAAc,QAGHC,GAAe9J,YAAO+J,KAAP/J,CAAe,CACzCmF,SAAU,WACV6E,IAAK,oB,0CCdMC,GAA4B,4BAC5BC,GAA0B,0BAC1BC,GAA8B,8BAC9BC,GAAc,cACdC,GAA0B,0BAC1BC,GAAc,cACdC,GAA0B,0BAC1BC,GAAoB,oBACpBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAA2B,2BAgB3BC,GAA2B,SAACjH,GACvC,MAAO,CACLF,KAAM0G,GACNhH,QAASQ,IAWAkH,GAAuB,SAACC,GACnC,MAAO,CACLrH,KAAM4G,GACNlH,QAAS2H,IAWAC,GAAuB,SAACC,GACnC,MAAO,CACLvH,KAAM8G,GACNpH,QAAS6H,IAWAC,GAAsB,SAACC,GAClC,MAAO,CACLzH,KAAMgH,GACNtH,QAAS+H,IC5DAC,GAA2B,CACtCC,MAAO,GACP3I,OAAQ,KACRC,MAAO,KACP2I,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,iBAAkB,IChBPC,GAA2B,2BAM3BC,GAAyB,yBAMzBC,GAA6B,6BAsB7BC,GAA0B,SAACjI,GACtC,MAAO,CACLF,KAAMkI,GACNxI,QAASQ,ICnCAkI,GAA0B,CACrCC,QAAS,GACTrJ,OAAQ,KACRC,MAAO,M,YCFQqJ,I,YAgBAC,IAhBV,SAAUD,GAAV,8EAQU,OAPf5I,EADK,EACLA,QADK,kBAQgBC,MAAMD,GARtB,OASY,OADTE,EARH,gBASkBA,EAAKC,OATvB,OAUH,OADMC,EATH,iBAUGC,YFQD,CACLC,KAAMgI,GACNtI,QEVgCI,IAV7B,0DAYHC,aFYgCd,EEZR,EAAD,GFalB,CACLe,KAAMiI,GACNvI,QAAST,KE3BN,kCFwB4B,IAACA,IExB7B,kBAgBA,SAAUsJ,KAAV,iEACL,OADK,SACCtI,YAAUiI,GAA4BI,IADvC,wCCnBA,IAAME,GAAiB,SAAC,GAAD,SAAGC,YAAmDJ,QAAQK,OAC/EC,GAAW,SAAC,GAAD,SAAGF,YAAmDJ,QAAQhE,M,YCerEuE,I,YAUAC,I,YAIAC,I,YAiBAC,I,YAIAC,I,YAaAC,I,YAIAC,I,YAgBAC,IApEV,SAAUP,GAAV,8EAEU,OAFsBlJ,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aNV6BqJ,EMUFtJ,EAAO8F,QNTnC,CACL5F,KAAMwG,GACN9G,QAAS0J,KMGN,0DAMHrJ,aNLiCd,EMKR,EAAD,GNJnB,CACLe,KAAMyG,GACN/G,QAAST,KMJN,kCNC6B,IAACA,EAPEmK,IMMhC,kBAUA,SAAUP,KAAV,iEACL,OADK,SACC5I,YAAUyG,GAA6BkC,IADxC,wCAIA,SAAUE,GAAV,8EAEU,OAFiBpJ,EAA3B,EAA2BA,QAA3B,kBAEgBC,MAAMD,EAAQ2J,cAAe,CAC9ClJ,OAAQ,OACRmJ,QAAS,CACP,eAAgB,kCAElBlJ,KAAMmJ,KAAKC,UAAU9J,EAAQ+J,YAP5B,OASc,OAPX7J,EAFH,gBASoBA,EAAKC,OATzB,OAUH,OADM6J,EATH,iBAUG3J,YAAIqH,GAAqBsC,IAV5B,QAWH,OAXG,UAWG3J,YAAIoH,GAAyBzH,EAAQiK,kBAXxC,gCAaH,OAbG,oCAaG5J,YAAIqH,GAAqB,EAAD,KAb3B,uDAiBA,SAAU2B,KAAV,iEACL,OADK,SACC9I,YAAU0G,GAAamC,IADxB,wCAIA,SAAUE,GAAV,8EAEU,OAFiBtJ,EAA3B,EAA2BA,QAA3B,kBAEgBC,MAAMD,EAAQkK,cAAe,CAC9CzJ,OAAQ,WAHP,OAKc,OAHXP,EAFH,gBAKoBA,EAAKC,OALzB,OAMH,OADM6J,EALH,iBAMG3J,YAAIuH,GAAqBoC,IAN5B,QAOH,OAPG,UAOG3J,YAAIoH,GAAyBzH,EAAQiK,kBAPxC,gCASH,OATG,oCASG5J,YAAIuH,GAAqB,EAAD,KAT3B,uDAaA,SAAU2B,KAAV,iEACL,OADK,SACChJ,YAAU4G,GAAamC,IADxB,wCAIA,SAAUE,GAAV,8EAEU,OAFqBxJ,EAA/B,EAA+BA,QAA/B,kBAEgBC,MAAMD,EAAQQ,IAAK,CACpCC,OAAQ,OACRmJ,QAAS,CACP,eAAgB,kCAElBlJ,KAAMmJ,KAAKC,UAAU,CAAEK,SAAUnK,EAAQoK,YAPxC,OASc,OAPXlK,EAFH,gBASoBA,EAAKC,OATzB,OAUH,OADM6J,EATH,iBAUG3J,YAAIyH,GAAoBkC,IAV3B,gCAYH,OAZG,oCAYG3J,YAAIyH,GAAoB,EAAD,KAZ1B,uDAgBA,SAAU2B,KAAV,iEACL,OADK,SACClJ,YAAU8G,GAAmBmC,IAD9B,wCCpFA,I,GAAMa,GAAY,SAAC,GAAD,SAAGX,aAAqDzB,OCYpEqC,GAA+B,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,SAAUH,EAAoC,EAApCA,QAASI,EAA2B,EAA3BA,qBAC1DC,EAAWC,cACX/G,EAAWpF,IAAKoF,SAChBzC,EAAUC,cACRH,EAAMC,cAAND,EACFvB,EAAaiC,YAAYlC,IACvBmL,EAAYC,cAAZD,QACFE,EAAiBC,QAAQP,GACzBtC,EAAQvG,YAAY2I,IACpBU,EAAmBzG,GAAmBX,EAAUlE,GAEtD,EAAwCuL,IAAM1J,SAA6B,MAA3E,mBAAO2J,EAAP,KAAqBC,EAArB,KACMC,EAAeL,QAAQG,GASvBG,EAAa,SAAC9I,GAClBA,EAAE+I,kBACFH,EAAgB,OAGZI,EAA4B,SAAC7G,GACjC,IAAMJ,ElBuC0B,SAAC7E,EAAmBiF,GAApB,gBAC/BhB,GAD+B,gBACfgB,EADe,6BACYP,mCADZ,uBACwD1E,GkBxC3E+L,CAAqB9L,EAAYgF,GAK9CgG,ERe0B,SAACe,GAC7B,MAAO,CACLlL,KAAM+G,GACNrH,QAASwL,GQlBAC,CAJY,CACnBjL,IAAK6D,EACL+F,cAgBJ,OACE,qCACG3K,GACC,eAACkH,GAAD,CAAc+E,KAAMb,EAAgBN,SAAUA,EAAUoB,UAAU,MAAlE,SACE,gBAACnF,GAAD,CACE1E,QAAS,SAACQ,GACRA,EAAE+I,mBAFN,UAKE,gBAACO,GAAA,EAAD,CAAYtO,MAAM,YAAYwE,QAzCtB,SAACQ,GACZ2F,EAAM4D,QACTpB,EAAShD,GAAyBsD,IAEpCG,EAAgB5I,EAAEwJ,gBAqCV,UACE,eAAC,KAAD,IACA,gBAACC,GAAA,EAAD,CAAML,KAAMP,EAAcZ,SAAUU,EAAce,QAASZ,EAA3D,UACE,eAACa,GAAA,EAAD,CACEnK,QAAS,WACPZ,EAAQa,KAAR,YAFJ,SAKGf,EAAE,sBAEJiH,EAAMvF,KAAI,gBAAGiC,EAAH,EAAGA,KAAMuH,EAAT,EAASA,GAAT,OACT,eAACD,GAAA,EAAD,CAEEnK,QAAS,SAACQ,GACRgJ,EAA0BY,GAC1Bd,EAAW9I,IAJf,SAOGqC,GANIuH,YAWZ1B,GACC,eAACoB,GAAA,EAAD,CAAYtO,MAAM,YAAYwE,QA5CH,WACrC,IAAMqK,ElBuC+B,SAAC3M,EAAmBiF,GAApB,gBACpChB,GADoC,gBACpBgB,EADoB,gCACUP,mCADV,uBACsD1E,GkBxCnE4M,CAA0B3M,EAAYkL,GACxD0B,EAAkB7H,GAAkBmG,EAAShH,GAMnD8G,ERkB+B,SAAC6B,GAClC,MAAO,CACLhM,KAAMiH,GACNvH,QAASsM,GQrBAC,CALgB,CACvBC,eAAgBL,EAChBM,eAAgBJ,EAChBjC,cAsCQ,SACE,eAAC,KAAD,cCtFHsC,GAAqC,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAOvC,EAAgD,EAAhDA,QAASwC,EAAuC,EAAvCA,WAAYpC,EAA2B,EAA3BA,qBACzEqC,EAAYzI,GAAawI,GACzB1L,EAAUC,cAEhB,EAAgC6J,IAAM1J,SAA6B,MAAnE,mBAAOiJ,EAAP,KAAiBuC,EAAjB,KAUA,OACE,qCACE,eAAC1G,GAAD,CAAY2G,aAVG,SAACzK,GAClBwK,EAAYxK,EAAEwJ,gBAS0BkB,aANtB,WAClBF,EAAY,OAKV,SACE,gBAACG,GAAA,EAAD,CACEnL,QAAS,SAACQ,GACRpB,EAAQa,KAAR,yBAA+BqI,KAFnC,UAKE,eAAC,GAAD,CAAYG,SAAUA,EAAUH,QAASA,EAASI,qBAAsBA,IACxE,eAAC0C,GAAA,EAAD,CAAWC,UAAU,MAAMC,IAAI,SAASC,MAAOR,IAC/C,eAACS,GAAA,EAAD,UACE,8BAAKX,cCfXY,IAAc,qBACjB5M,GAAUkE,yBAA2B,CACpC2I,SbpBsB,SAAC,GAAD,SAAGvF,MAAuBtC,WAAWF,QaqB3DgI,OhBIkC,SAACjN,GACrC,MAAO,CACLF,KAAM6E,GACNR,KAAMU,GACNrF,QAASQ,MgBXO,eAKjBG,GAAUmE,sBAAwB,CACjC0I,SbvBoB,SAAC,GAAD,SAAGvF,MAAuBrC,SAASH,QawBvDgI,OhBwBgC,SAACjN,GACnC,MAAO,CACLF,KAAM6E,GACNR,KAAMW,GACNtF,QAASQ,MgBnCO,eASjBG,GAAUoE,qBAAuB,CAChCyI,Sb1BmB,SAAC,GAAD,SAAGvF,MAAuBpC,QAAQJ,Qa2BrDgI,OhB4C+B,SAACjN,GAClC,MAAO,CACLF,KAAM6E,GACNR,KAAMY,GACNvF,QAASQ,MgB3DO,IAePkN,GAAuB,WAClC,IAAMjD,EAAWC,cACTiD,EAAS/C,cAAT+C,KACFlI,EAAS/D,YAAY6L,GAAeI,GAAMH,UAC1C7J,EAAWpF,IAAKoF,SAChBU,EpBnCkB,SAACV,EAAkBgK,GAAnB,gBACrBlK,GADqB,iBACJkK,EADI,oBACYzJ,mCADZ,qBACsDP,EADtD,WoBmCXiK,CAAWjK,EAAUgK,GAYlC,OAVAhM,qBAAU,WACc,IAAlB8D,EAAOoG,QACTpB,EAAS8C,GAAeI,GAAMF,OAAOpJ,MAEtC,CAACsJ,EAAMlD,EAAUhF,EAAOoG,OAAQxH,IAEnC1C,qBAAU,WACR8I,EhBmCK,CACLnK,KAAM8E,OgBnCL,CAACzB,EAAU8G,IAGZ,eAACpH,GAAD,UACGoC,EAAO/C,KAAI,gBAAGiK,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAI2B,EAAd,EAAcA,YAAd,OACV,eAAC,GAAD,CAAWlB,MAAOA,EAAOvC,QAAS8B,EAAIU,WAAYiB,GAAkB3B,S,UClD/D4B,GAAYjR,YAAOkR,KAAPlR,CAAY,CACnCE,MAAO,QACPK,SAAU,OACVQ,QAAS,OACTC,eAAgB,gBAChB,UAAW,CACTP,MAAO,OACPP,MAAO,QACPiR,UAAW,OACXC,WAAY,QAEd,WAAY,CACVlR,MAAO,QACPiR,UAAW,UChBFE,GAAgB,SAACC,GAAD,OAAgBA,EAAIzL,KAAI,SAAC0L,GAAD,OAAUA,EAAKzJ,QAAMR,KAAK,OAClEkK,GAAgB,SAACC,GAAD,OAAqBA,EAAM,UAAMC,OAAOD,GAAQE,iBAArB,MAA4C,GCKvFC,GAAsC,SAAC,GAO7C,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,OACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEQ/N,EAAMC,cAAND,EACFgO,EAAad,GAAcS,GAC3BM,EAAgBf,GAAcU,GAC9BM,EAAa,CACjB,CACEvK,KAAM3D,EAAE,uBACRO,MAAOsN,GAET,CACElK,KAAM3D,EAAE,mBACRO,MAAOwN,GAET,CACEpK,KAAM3D,EAAE,iBACRO,MAAOyN,GAET,CACErK,KAAM3D,EAAE,mBACRO,MAAO0N,GAET,CACEtK,KAAM3D,EAAE,kBACRO,MAAO8M,GAAcK,IAEvB,CACE/J,KAAM3D,EAAE,mBACRO,MAAO8M,GAAcS,KAIzB,OACE,+BACGI,EAAWxM,KAAI,gBAAGiC,EAAH,EAAGA,KAAMpD,EAAT,EAASA,MAAT,OACdA,EACE,gBAACuM,GAAD,WACE,oBAAGqB,UAAU,OAAb,SAAqBxK,IACrB,oBAAGwK,UAAU,QAAb,SAAsB5N,MAFRoD,GAId,WCpDCyK,GAA4B,4BAC5BC,GAA0B,0BAC1BC,GAA8B,8BAC9BC,GAA+B,+BAC/BC,GAA6B,6BAC7BC,GAA2B,2BAE3BC,GAAyB,SAAC/G,GACrC,MAAO,CACLrI,KAAM8O,GACNpP,QAAS2I,IAkBAgH,GAA2B,SAACC,GACvC,MAAO,CACLtP,KAAMkP,GACNxP,QAAS4P,ICrBAC,GAA2B,CACtClH,QAAS,GACTrJ,OAAQ,KACRC,MAAO,KACPqQ,eAAgB,CACdnK,OAAQ,GACRnG,OAAQ,KACRC,MAAO,O,YCLMuQ,I,YAUAC,I,YAMAC,I,YAUAC,IA1BV,SAAUH,GAAV,8EAEU,OAFsB9P,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIqP,GAAuBtP,IAJ9B,0DAMHC,aFJiCd,EEIR,EAAD,GFHnB,CACLe,KAAM+O,GACNrP,QAAST,KELN,kCFE6B,IAACA,IEF9B,kBAUA,SAAUwQ,KAAV,iEACL,OADK,SACCxP,YAAU+O,GAA6BQ,IADxC,wCAMA,SAAUE,GAAV,8EAEU,OAFwBhQ,EAAlC,EAAkCA,QAAlC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIsP,GAAyBvP,EAAO8F,QAAQC,MAAM,EAN3B,KAE1B,0DAMH9F,aFCmCd,EEDR,EAAD,GFErB,CACLe,KAAMmP,GACNzP,QAAST,KEVN,kCFO+B,IAACA,IEPhC,kBAUA,SAAU0Q,KAAV,iEACL,OADK,SACC1P,YAAUgP,GAA8BS,IADzC,wCCtCA,IAAMrH,GAAU,SAAC,GAAD,SAAGuH,aAAqCvH,SAClDiH,GAAiB,SAAC,GAAD,SAAGM,aAAqCN,eAAenK,QCExEpC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WCDD2M,GAA+B,WAC1C,IAAMxC,EAAOjM,YAAYkO,IACzB,OACE,eAAC,GAAD,UACGjC,EAAKjL,KAAI,gBAAGiK,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAI2B,EAAd,EAAcA,YAAd,OACR,eAAC,GAAD,CAAWlB,MAAOA,EAAOvC,QAAS8B,EAAIU,WAAYiB,GAAkB3B,SCT/DxO,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACP,QAAS,CACPA,MAAO,QACP0J,OAAQ,SAEV,cAAe,CACbuH,UAAW,UACX3Q,WAAY,WAEd,oBAAqB,CACnB+S,UAAW,UCHFC,GAAyB,WACpC,IAAM5F,EAAWC,cACjB,EACEhJ,YAAYiH,IADNgE,EAAR,EAAQA,MAAOkB,EAAf,EAAeA,YAAaa,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OAAQ2B,EAA5C,EAA4CA,SAAU1B,EAAtD,EAAsDA,qBAAsBC,EAA5E,EAA4EA,aAAcC,EAA1F,EAA0FA,QAASC,EAAnG,EAAmGA,QAG7FpL,EAAWpF,IAAKoF,SACd3C,EAAMC,cAAND,EACAkL,EAAOtB,cAAPsB,GACFqE,E/Bc0B,SAAC5M,EAAkBuI,GAAnB,gBAC7BzI,GAD6B,iBACZyI,EADY,oBACEhI,mCADF,qBAC4CP,G+BfxD6M,CAAmB7M,EAAU4K,OAAOrC,IAClDW,EAAYzI,GAAayJ,GACzB4C,E/BmB4B,SAAC9M,EAAkBuI,GAAnB,gBAC/BzI,GAD+B,kBACbyI,EADa,oCACiBhI,mCADjB,qBAC2DP,EAD3D,W+BnBP+M,CAAqB/M,EAAU4K,OAAOrC,IAOjE,OALAvK,qBAAU,WACR8I,EPFK,CACLnK,KAAMgP,GACNtP,QOAkCuQ,IAClC9F,EPiBsC,SAACjK,GACzC,MAAO,CACLF,KAAMiP,GACNvP,QAASQ,GOpBAmQ,CAA2BF,MACnC,CAAChG,EAAU8F,EAAaE,IAGzB,gBAAC,GAAD,WACE,8BAAK9D,IACL,gBAACoB,GAAA,EAAD,CAAKnQ,QAAQ,OAAOC,eAAe,eAAnC,UACE,sBAAK+S,IAAK/D,EAAWO,IAAI,aACxBkD,GACC,eAAC,GAAD,CACE5B,OAAQA,EACRC,OAAQA,EACRC,qBAAsBA,EACtBC,aAAcA,EACdC,QAASA,EACTC,QAASA,OAIf,iCACE,8BAAK/N,EAAE,sBACP,oBAAGmO,UAAU,WAAb,SAAyBmB,OAE3B,uBAAKnB,UAAU,iBAAf,UACE,8BAAKnO,EAAE,4BACP,eAAC,GAAD,W,wCC/CK6P,GAAehU,YAAOiU,KAAPjU,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPN,OAAQ,QAGGU,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACPa,QAAS,OACTC,eAAgB,eAChBuS,UAAW,QCdAW,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA8B,8BAC9BC,GAA4B,4BAC5BC,GAAgC,gCAChCC,GAAkB,kBAClBC,GAA8B,8BAC9BC,GAA4B,4BAC5BC,GAAgC,gCAChCC,GAAwB,wBACxBC,GAAsB,sBACtBC,GAA0B,0BAmD1BC,GAA2B,SAACC,GACvC,MAAO,CACLvR,KAAMgR,GACNtR,QAAS6R,IAkBAC,GAAsB,SAACC,GAClC,MAAO,CACLzR,KAAMmR,GACNzR,QAAS+R,ICtEAC,GAAqB,CAChCrD,OAAQ,CACNsD,WAAY,GACZ3S,OAAQ,KACRC,MAAO,MAET2S,eAAgB,CACdzM,OAAQ,GACRnG,OAAQ,KACRC,MAAO,KACP4S,WAAY,GAEdA,WAAY,EACZC,eAAgB,CACdC,KAAM,KACN/S,OAAQ,KACRC,MAAO,MAETwS,UAAW,CACTA,UAAW,GACXzS,OAAQ,KACRC,MAAO,O,YCjBM+S,I,YAUAC,I,YAIAC,I,YAWAC,I,YAIAC,I,YAkBAC,I,YAIAC,I,YAUAC,IA7DV,SAAUP,GAAV,8EAEU,OAFgBtS,EAA1B,EAA0BA,QAA1B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aFXuBsO,EEWFvO,EAAOuO,OFV7B,CACLrO,KAAMyQ,GACN/Q,QAAS2O,KEIN,0DAMHtO,aFN2Bd,EEMR,EAAD,GFLb,CACLe,KAAM0Q,GACNhR,QAAST,KEHN,kCFAuB,IAACA,EAPEoP,IEO1B,kBAUA,SAAU4D,KAAV,iEACL,OADK,SACChS,YAAU0Q,GAAsBqB,IADjC,wCAIA,SAAUE,GAAV,8EAEU,OAFwBxS,EAAlC,EAAkCA,QAAlC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aFJ+BoF,EEIFrF,EAAO8F,QFHrC,CACL5F,KAAM4Q,GACNlR,QAASyF,KEHN,QAKH,OALG,UAKGpF,aFgBoB8R,EEhBF/R,EAAO0S,YFiB1B,CACLxS,KAAM+Q,GACNrR,QAASmS,KExBN,0DAOH9R,aFAmCd,EEAR,EAAD,GFCrB,CACLe,KAAM6Q,GACNnR,QAAST,KEVN,kCFO+B,IAACA,EAcT4S,EArBW1M,IEAlC,kBAWA,SAAUgN,KAAV,iEACL,OADK,SACClS,YAAU6Q,GAA+BoB,IAD1C,wCAIA,SAAUE,GAAV,sFAE4B,OAFM1S,EAAlC,EAAkCA,QAAlC,kBAEkCC,MAAMD,EAAQ+S,uBAFhD,OAG8B,OAD3BC,EAFH,gBAGoCA,EAAuB7S,OAH3D,OAMwB,OAHrB8S,EAHH,OAIGC,EAAqBD,EAAyB/M,QAAQxD,KAAI,qBAAGyQ,cAJhE,UAM8BlT,MAAMD,EAAQoT,mBAN5C,QAO0B,OADvBC,EANH,iBAOgCA,EAAmBlT,OAPnD,WAOGmT,EAPH,OAQKC,EAAiBD,EAAjBC,cAERL,EAAmBM,SAASD,GAVzB,iBAWC,OAXD,UAWOlT,YAAIuR,GAAyB2B,IAXpC,gCAYC,OAZD,UAYOlT,YAAIuR,GA3CW,OA+BtB,0DAcHvR,aFMmCd,EENR,EAAD,GFOrB,CACLe,KAAMiR,GACNvR,QAAST,KEvBN,kCFoB+B,IAACA,IEpBhC,kBAkBA,SAAUoT,KAAV,iEACL,OADK,SACCpS,YAAUiR,GAA+BkB,IAD1C,wCAIA,SAAUE,GAAV,8EAEU,OAFmB5S,EAA7B,EAA6BA,QAA7B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIyR,GAAoB1R,EAAO8F,UAJlC,0DAMH7F,aFa8Bd,EEbR,EAAD,GFchB,CACLe,KAAMoR,GACN1R,QAAST,KEtBN,kCFmB0B,IAACA,IEnB3B,kBAUA,SAAUsT,KAAV,iEACL,OADK,SACCtS,YAAUoR,GAAyBiB,IADpC,wCClFA,IAAMjE,GAAS,SAAC,GAAD,SAAGlJ,OAAyBkJ,OAAOsD,YAC5CC,GAAiB,SAAC,GAAD,SAAGzM,OAAyByM,eAAezM,QAC5D0M,GAAa,SAAC,GAAD,SAAG1M,OAAyB0M,YACzCsB,GAAqB,SAAC,GAAD,SAAGhO,OAAyB2M,eAAeC,MAChEN,GAAY,SAAC,GAAD,SAAGtM,OAAyBsM,UAAUA,WCiBlD2B,GAAkC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1ChQ,EAAWpF,IAAKoF,SAChBiQ,ErCVoB,SAACjQ,GAAD,gBACvBF,GADuB,oCACaS,mCADb,qBACuDP,GqCS9DkQ,CAAalQ,GAC1BmQ,ErCoB4B,4DACmB5P,oCqCpB/C6P,ErCuBgC,uEAC0B7P,mCAD1B,mBqCtBhCuG,EAAWC,cACT1J,EAAMC,cAAND,EACFiR,EAAavQ,YAAYiN,IACzBqF,EAAgBtS,YAAYqQ,IAC5BF,EAAcnQ,YAAY+R,IAC1BQ,ErCqBuB,SAACtQ,EAAkBuQ,GAAnB,gBAC1BzQ,GAD0B,yCACeS,mCADf,qBACyDP,EADzD,yBACkFuQ,GqCtBzFC,CAAgBxQ,EAAUkO,GAEhD,EAA0BvQ,mBAdE,IAc5B,mBAAOsC,EAAP,KAAcwQ,EAAd,KACA,EAAgC9S,mBAAmB,IAAnD,mBAAO2C,EAAP,KAAiBoQ,EAAjB,KACA,EAAkC/S,mBAhBN,IAgB5B,mBAAOuC,EAAP,KAAkByQ,EAAlB,KACA,EAA8BhT,mBAjBF,IAiB5B,mBAAOwC,EAAP,KAAgByQ,EAAhB,KAoCA,OAjBA5S,qBAAU,WACR8I,EJ3BK,CACLnK,KAAM2Q,GACNjR,QIyB4B4T,MAC3B,CAACnJ,EAAUmJ,IAEdjS,qBAAU,WACR8I,EJkBK,CACLnK,KAAMkR,GACNxR,QInB6B,CACzBoT,kBAAmBU,EACnBf,sBAAuBgB,OAG1B,CAACtJ,EAAUqJ,EAAoBC,IAElCpS,qBAAU,WACR8I,EJ8BK,CACLnK,KAAMqR,GACN3R,QIhC+BiU,MAC9B,CAACxJ,EAAUwJ,IAGZ,gBAAC,GAAD,WACE,gBAACO,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAYvI,GAAG,qBAAf,SAAqClL,EAAE,mBACvC,eAAC6P,GAAD,CACE6D,QAAQ,qBACRnT,MAAOqC,EACPvB,SAAU,SAACC,GAAD,OAzCQ,SAACA,GACzB,IAAMqS,EAASrS,EAAEqS,OACjBP,EAASO,EAAOpT,OAuCOqT,CAAkBtS,IAHrC,SAKG2P,EAAWvP,KAAI,gBAAGiC,EAAH,EAAGA,KAAMuH,EAAT,EAASA,GAAT,OACd,eAACD,GAAA,EAAD,CAAmB1K,MAAO2K,EAA1B,SACGvH,GADYuH,WAMrB,gBAACsI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAYvI,GAAG,yBAAf,SAAyClL,EAAE,uBAC3C,eAAC6P,GAAD,CACE6D,QAAQ,yBACRnT,MAAO0C,EACP4Q,UAAQ,EACRxS,SAAU,SAACC,GAAD,OAnDW,SAACA,GAC5B+R,EAAY/R,EAAEqS,OAAOpT,OAkDEuT,CAAqBxS,IAJxC,SAMG0R,EAActR,KAAI,gBAAGqS,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAlB,OACjB,eAAC/I,GAAA,EAAD,CAA4B1K,MAAOyT,EAAnC,SACGD,GADYC,WAMrB,eAACC,GAAA,EAAD,CACErS,MAAO5B,EAAE,qBACTV,KAAK,OACL4U,gBAAiB,CACfC,QAAQ,GAEV9S,SA9DwB,SAACC,GAC7BgS,EAAahS,EAAEqS,OAAOpT,QA8DlBA,MAAOsC,IAET,eAACoR,GAAA,EAAD,CACErS,MAAO5B,EAAE,mBACTV,KAAK,OACL4U,gBAAiB,CACfC,QAAQ,GAEV9S,SAnEsB,SAACC,GAC3BiS,EAAWjS,EAAEqS,OAAOpT,QAmEhBA,MAAOuC,IAET,eAAC,GAAD,CAAchC,QAAS,kBAAM6R,EAAS/P,EAAOC,EAAWC,EAASG,EAAU4N,IAA3E,SACG7Q,EAAE,uBCvHEqC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WCDD4R,GAA+B,WAC1C,IAAM3P,EAAS/D,YAAYwQ,IAE3B,OACE,eAAC,GAAD,UACGzM,EAAO/C,KAAI,gBAAGiK,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAI2B,EAAd,EAAcA,YAAd,OACV,eAAC,GAAD,CAAWlB,MAAOA,EAAOvC,QAAS8B,EAAIU,WAAYiB,GAAkB3B,S,UCT/DmJ,GAAmBxY,YAAOyY,KAAPzY,CAAmB,CACjD,WAAY,CACVI,WAAY,oBACZ,UAAW,CACTA,WAAY,UAGhB,kBAAmB,CACjBsY,OAAQ,kBACRlY,WAAY,OACZJ,WAAY,uBAIHS,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/Ce,QAAS,OACTC,eAAgB,eAChBuS,UAAW,QCXAoF,GAAyC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,WAAY1R,EAAW,EAAXA,KAC7D2R,EAAQhU,YAAYyQ,IAC1B,OACE,eAAC,GAAD,UACE,eAACkD,GAAD,CACEM,MAAOD,EACPE,KAAK,QACLC,MAAM,UACNxT,SAAU,SAACC,EAAGyB,GAAJ,OAAa0R,EAAW1R,IAClCA,KAAMA,OCTD+R,GAAmB,WAC9B,IAAMnS,EAAWpF,IAAKoF,SACtB,EAAwBrC,mBALL,GAKnB,mBAAOyC,EAAP,KAAagS,EAAb,KACMtL,EAAWC,cAEjB,EAA0BpJ,mBAPE,IAO5B,mBAAOsC,EAAP,KAAcwQ,EAAd,KACA,EAAgC9S,mBAAmB,IAAnD,mBAAO2C,EAAP,KAAiBoQ,EAAjB,KACA,EAA4B/S,mBATA,IAS5B,mBAAO0C,EAAP,KAAegS,EAAf,KACA,EAAkC1U,mBAVN,IAU5B,mBAAOuC,EAAP,KAAkByQ,EAAlB,KACA,EAA8BhT,mBAXF,IAW5B,mBAAOwC,EAAP,KAAgByQ,EAAhB,KAEMlQ,EAAOX,GAAaC,EAAUC,EAAOC,EAAWC,EAASC,EAAMC,EAAQC,GAe7E,OAJAtC,qBAAU,WACR8I,ETiBK,CACLnK,KAAM8Q,GACNpR,QSnBoCqE,MACnC,CAACoG,EAAUpG,IAGZ,iCACE,eAAC,GAAD,CAASsP,SAfa,SAAC/P,EAAeC,EAAmBC,EAAiBG,EAAoBD,GAChGoQ,EAASxQ,GACT0Q,EAAazQ,GACb0Q,EAAWzQ,GACXiS,EApBiB,GAqBjB1B,EAAYpQ,GACZ+R,EAAUhS,MAUR,eAAC,GAAD,CAAkByR,WAAY,SAAC1R,GAAD,OAAUgS,EAAQhS,IAAOA,KAAMA,IAC7D,eAAC,GAAD,QCxCOkS,GAA2B,2BAC3BC,GAAyB,yBACzBC,GAA6B,6BAC7B9E,GAAkB,kBAElB+E,GAAwB,SAACC,GACpC,MAAO,CACL/V,KAAM2V,GACNjW,QAASqW,ICAAC,GAA0B,CACrCC,YAAa,CACXF,MAAO,GACP/W,OAAQ,KACRC,MAAO,MAET4S,WAAY,GCdDqE,GAAkB,SAACC,EAAaC,GAG3C,OAFAD,EAAM3T,KAAK6T,KAAKF,GAChBC,EAAM5T,KAAK8T,MAAMF,GACV5T,KAAK8T,MAAM9T,KAAKC,UAAY2T,EAAMD,EAAM,IAAMA,G,YCEtCI,I,YAYAC,IAZV,SAAUD,GAAV,gFAEU,OAFqB7W,EAA/B,EAA+BA,QAA/B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIW,OADRC,EAHH,kBDKwB2W,ECDQ3W,EAAO8F,SDE/B2F,OAASkL,EAAMP,GAAgB,EAAGO,EAAMlL,OAAS,IAAMkL,ECN/D,QAKH,OADMV,EAJH,iBAKGhW,YAAI+V,GAAsBC,IAL7B,QAMH,OANG,UAMGhW,aHeoB8R,EGfF/R,EAAO0S,YHgB1B,CACLxS,KAAM+Q,GACNrR,QAASmS,KGxBN,0DAQH9R,aHDgCd,EGCR,EAAD,GHAlB,CACLe,KAAM4V,GACNlW,QAAST,KGVN,kCHO4B,IAACA,EAcN4S,EEhBC4E,ICLxB,kBAYA,SAAUD,KAAV,iEACL,OADK,SACCvW,YAAU4V,GAA4BU,IADvC,wCCjBA,IAAMN,GAAc,SAAC,GAAD,SAAGxT,OAAyBwT,YAAYF,OACtDW,GAAsB,SAAC,GAAD,SAAGjU,OAAyBoP,YCWlD8E,GAAwB,WACnC,IAAMtT,EAAWpF,IAAKoF,SACtB,EAAwBrC,mBALL,GAKnB,mBAAOyC,EAAP,KAAagS,EAAb,KACMtL,EAAWC,cACXyH,EAAazQ,YAAYsV,IAC/B,EAAmCtV,YAAY6U,IAAvC5J,EAAR,EAAQA,MAAOT,EAAf,EAAeA,GAAI2B,EAAnB,EAAmBA,YAEnB,EAA0BvM,mBATE,IAS5B,mBAAOsC,EAAP,KAAcwQ,EAAd,KACA,EAAgC9S,mBAAmB,IAAnD,mBAAO2C,EAAP,KAAiBoQ,EAAjB,KACA,EAA4B/S,mBAXA,IAW5B,mBAAO0C,EAAP,KAAegS,EAAf,KACA,EAAkC1U,mBAZN,IAY5B,mBAAOuC,EAAP,KAAkByQ,EAAlB,KACA,EAA8BhT,mBAbF,IAa5B,mBAAOwC,EAAP,KAAgByQ,EAAhB,KAEMlQ,EAAOX,GAAaC,EAAUC,EAAOC,EAAWC,EAASC,EAAMC,EAAQC,GAe7E,OAJAtC,qBAAU,WACR8I,ELjBK,CACLnK,KAAM6V,GACNnW,QKeiCqE,MAChC,CAACoG,EAAUpG,IAGZ,iCACE,eAAC,GAAD,CAASsP,SAfa,SAAC/P,EAAeC,EAAmBC,EAAiBG,EAAoBD,GAChGoQ,EAASxQ,GACT0Q,EAAazQ,GACb0Q,EAAWzQ,GACXiS,EHzByB,SAAC5D,GAC5B,OAAOqE,GAAgB,EAAGrE,GGwBhB+E,CAAc/E,IACtBkC,EAAYpQ,GACZ+R,EAAUhS,MAUR,eAAC,GAAD,CAAW2I,MAAOA,EAAOvC,QAAS8B,EAAIU,WAAYiB,Q,oBCxC3CnQ,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACPC,OAAQ,YACRY,QAAS,OACTC,eAAgB,iBAGLL,GAAeX,YAAOY,IAAPZ,CAAe,CACzCO,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDka,GAActa,YAAOua,KAAPva,CAAc,CACvCE,MAAO,QCPIsa,GAA6B,WACxC,MAA0CC,eAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MACxBzW,EAAMC,cAAND,EACF2C,EAAWpF,IAAKoF,SAChB8G,EAAWC,cACXwB,EAAKxK,YAAYlC,IAEjBkY,ElDsDwB,SAAClY,GAAD,gBAC3BiE,GAD2B,wBACHS,mCADG,uBACyC1E,GkDvDhDmY,CAAiBzL,GAClCnB,EAAmBzG,GAAmBX,EAAUuI,GAYtD,OACE,uBAAM0L,SAAUJ,GAXD,SAAC,GAAqC,IAAnC7S,EAAkC,EAAlCA,KAAMkT,EAA4B,EAA5BA,YAMxBpN,ExCOK,CACLnK,KAAM2G,GACNjH,QwCToB,CAAE2J,cAAe+N,EAAgBzN,gBAAiBc,EAAkBhB,SALvE,CACfpF,OACAkT,cACAlU,eAGF8T,OAIA,SACE,gBAAC,GAAD,WACE,eAACN,GAAD,aAAaW,YAAa9W,EAAE,eAAmBuW,EAAS,UACxD,eAACJ,GAAD,aAAaW,YAAa9W,EAAE,sBAA0BuW,EAAS,iBAC/D,eAAC,GAAD,CAAcjX,KAAK,SAAnB,SAA6BU,EAAE,4B,8BCjC1BqC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCE,MAAO,MACPC,OAAQ,SAGGU,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/C4J,OAAQ,OACR1J,MAAO,MACPqT,UAAW,MACX1J,aAAc,MACd,SAAU,CACRtJ,SAAU,QAEZ,UAAW,CACTH,WAAY,qBACZ8a,OAAQ,UACR,SAAU,CACR1a,WAAY,W,qBCRL2a,GAAkB,WAC7B,IAAMrU,EAAWpF,IAAKoF,SAChBsE,EAAQvG,YAAY2I,IACpBI,EAAWC,cACXwB,EAAKxK,YAAYlC,IACjB0B,EAAUC,cAEV8W,EAAwB,SAACxT,GAC7B,IAAMyT,EpDwDmB,SAAC1Y,EAAmBiF,GAApB,gBACxBhB,GADwB,gBACRgB,EADQ,oBACUP,mCADV,uBACsD1E,GoDzDxD0K,CAAcgC,EAAIzH,GACnCsG,EAAmBzG,GAAmBX,EAAUuI,GACtDzB,E1C0BK,CACLnK,KAAM6G,GACNnH,Q0C5BoB,CAAEkK,cAAegO,EAAgBjO,gBAAiBc,MAGxE,OACE,eAAC,GAAD,UACG9C,EAAMvF,KAAI,gBAAGiC,EAAH,EAAGA,KAAMkT,EAAT,EAASA,YAAa3L,EAAtB,EAAsBA,GAAtB,OACT,eAAC,GAAD,CAA0BpK,QAAS,kBAAMZ,EAAQa,KAAR,UAAgBmK,KAAzD,SACE,gBAACiM,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAcC,QAAS1T,EAAM2T,UAAWT,IACxC,eAACU,GAAA,EAAD,UACE,eAAC3M,GAAA,EAAD,CACE9J,QAAS,SAACQ,GACRA,EAAE+I,kBACF4M,EAAsB/L,IAH1B,SAME,eAAC,KAAD,YAVcA,SCnBjBsM,GAAyB,WACpC,IAAM/N,EAAWC,cACX/G,EAAWpF,IAAKoF,SAChBuI,EAAKxK,YAAYlC,IACjB6E,EAAOC,GAAmBX,EAAUuI,GAM1C,OAJAvK,qBAAU,WACR8I,EAAShD,GAAyBpD,MACjC,CAACoG,EAAUpG,IAGZ,iCACE,eAAC,GAAD,IACA,eAAC,GAAD,QCnBOhB,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WCEDiV,GAA+B,WAC1C,IAAMhO,EAAWC,cACX/G,EAAWpF,IAAKoF,SAChBc,EAASmG,cAAiCD,QAE1CtG,EAAOG,GAAkBC,EAAQd,GACjC8B,EAAS/D,YAAYoH,IACrBnE,EAAOjD,YAAYuH,IAMzB,OAJAtH,qBAAU,WACR8I,EAAShC,GAAwBpE,MAChC,CAACoG,EAAUpG,IAGZ,iCACE,8BAAKM,IACJc,GACC,eAAC,GAAD,UACGA,EAAO/C,KAAI,gBAAGiK,EAAH,EAAGA,MAAOT,EAAV,EAAUA,GAAI2B,EAAd,EAAcA,YAAd,OACV,eAAC,GAAD,CAAWlB,MAAOA,EAAOvC,QAAS8B,EAAIU,WAAYiB,EAAsBrD,sBAAoB,GAAxB0B,Y,UC1BnExO,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CG,OAAQ,cCKG0b,GAAkB,WAC7B,IAAQ1X,EAAMC,cAAND,EACFyJ,EAAWC,cACXiO,EAAQjX,YAAYtC,IACpBwZ,EzD2C0B,UAC7BnV,GAD6B,6CACgBS,oCyD3C1C2U,EzD8CwB,SAACzZ,GAAD,wDACaA,EADb,oDACqEA,GyD/C5E0Z,CAAiBH,GAChC9X,EAAkB+J,cAAlB/J,cACFkY,EzDgDuB,SAAClY,GAAD,gBAC1B4C,GAD0B,8CACoBS,mCADpB,0BACmErD,GyDjD1EmY,CAAgBnY,GAChCpB,EAAaiC,YAAYlC,IAe/B,OAbAmC,qBAAU,WAER,OADA8I,E7DEK,CACLnK,KAAMvB,EACNiB,Q6DJkC4Y,IAC3B,WACLlZ,aAAauZ,QAAQ,aAAcxZ,MAEpC,CAACgL,EAAUhL,EAAYmZ,IAE1BjX,qBAAU,W7DgByB,IAACnB,EAAaE,E6Df3CG,GACF4J,G7DcgCjK,E6DdDuY,E7DccrY,E6DdCmJ,KAAKC,UAAU,CAAEjJ,kB7De5D,CACLP,KAAMpB,EACNc,QAAS,CAAEQ,MAAKE,a6Dff,CAAC+J,EAAU5J,EAAekY,IAG3B,eAAC,GAAD,UACGtZ,EAAa,6BAAIuB,EAAE,oBAAyB,eAACkY,GAAA,EAAD,CAAMC,KAAMN,EAAZ,SAA6B7X,EAAE,wBC/BrEtD,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CI,WAAY,sBACZK,MAAO,QACPD,WAAY,OACZ2Q,UAAW,SACXjR,MAAO,MACPqc,SAAU,SACVC,UAAW,QACXC,WAAY,WACZlJ,UAAW,U,SC6BEmJ,GA5BH,WACV,IAAQvY,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,UACE,gBAAC,GAAD,CAAiBwY,UAAU,EAA3B,UACE,8BAAKxY,EAAE,WACP,eAAC,IAAD,UACE,eAAC,IAAD,CAAOqD,KAAK,IAAI8I,UAAWpM,OAE7B,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOsD,KAAK,SAASoV,OAAK,EAACtM,UAAWuL,KACtC,eAAC,IAAD,CAAOrU,KAAK,wBAAwBoV,OAAK,EAACtM,UAAWuL,KACrD,eAAC,IAAD,CAAOrU,KAAK,aAAa8I,UAAWnI,KACpC,eAAC,IAAD,CAAOX,KAAK,qBAAqB8I,UAAWkD,KAC5C,eAAC,IAAD,CAAOhM,KAAK,UAAU8I,UAAW2I,KACjC,eAAC,IAAD,CAAOzR,KAAK,iBAAiB8I,UAAW8J,KACxC,eAAC,IAAD,CAAO5S,KAAK,SAASoV,OAAK,EAACtM,UAAWqL,KACtC,eAAC,IAAD,CAAOnU,KAAK,kBAAkB8I,UAAWsL,QAE3C,eAAC,IAAD,UACE,eAAC,IAAD,CAAOpU,KAAK,mBAAmBoV,OAAK,EAACtM,UAAWO,a,mBC1B7CgM,GAAe,CAC1BzR,MAAOvC,GACPD,OAAQuM,GACR9B,aAAcL,GACd9M,OAAQuT,GACR1V,MAAOzB,EACPuK,aAAc1B,GACde,YAAaL,ICNAiR,gBAAgB,CAC7B1R,MxDKmB,WAA6C,IAA5C2R,EAA2C,uDAAnClU,GAAmB+H,EAAgB,uCAC/D,OAAQA,EAAOnN,MACb,KAAK6E,GACH,OAAO,2BACFyU,GADL,kBAEGnM,EAAO9I,KAAO,CACbc,OAAQ,GACRnG,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAK0F,GACH,OAAO,2BACF2U,GADL,kBAEGnM,EAAO9I,KAAO,CACbc,OAAQgI,EAAOzN,QACfV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAK2F,GACH,OAAO,2BACF0U,GADL,kBAEGnM,EAAO9I,KAAO,CACbc,OAAQ,GACRnG,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,KAAKoF,GACH,OAAO,eACFM,IAGP,QACE,OAAO,eACFkU,KwD3CTnU,O3B+BoB,WAA8C,IAA7CmU,EAA4C,uDAApC5H,GAAoBvE,EAAgB,uCACjE,OAAQA,EAAOnN,MACb,KAAK2Q,GACH,OAAO,2BACF2I,GADL,IAEEjL,OAAQ,CACNsD,WAAY,GACZ3S,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAKwR,GACH,OAAO,2BACF6I,GADL,IAEEjL,OAAQ,CACNsD,WAAYxE,EAAOzN,QACnBV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAKyR,GACH,OAAO,2BACF4I,GADL,IAEEjL,OAAQ,CACNsD,WAAY,GACZ3S,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,KAAKoR,GACH,OAAO,2BACFwI,GADL,IAEE1H,eAAgB,CACdzM,OAAQ,GACRnG,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAK2R,GACH,OAAO,2BACF0I,GADL,IAEE1H,eAAgB,CACdzM,OAAQgI,EAAOzN,QACfV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAK4R,GACH,OAAO,2BACFyI,GADL,IAEE1H,eAAgB,CACdzM,OAAQ,GACRnG,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,KAAKqR,GACH,OAAO,2BACFuI,GADL,IAEEzH,WAAY1E,EAAOzN,UAGvB,KAAKwR,GACH,OAAO,2BACFoI,GADL,IAEExH,eAAgB,CACdC,KAAM,KACN/S,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAK+R,GACH,OAAO,2BACFsI,GADL,IAEExH,eAAgB,CACdC,KAAM5E,EAAOzN,QACbV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAKgS,GACH,OAAO,2BACFqI,GADL,IAEExH,eAAgB,CACdC,KAAM,KACN/S,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,KAAK2R,GACH,OAAO,2BACFiI,GADL,IAEE7H,UAAW,CACTA,UAAW,GACXzS,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAKkS,GACH,OAAO,2BACFmI,GADL,IAEE7H,UAAW,CACTA,UAAWtE,EAAOzN,QAClBV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAKmS,GACH,OAAO,2BACFkI,GADL,IAEE7H,UAAW,CACTA,UAAW,KACXzS,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,QACE,OAAO,eACF4Z,K2BhKT1J,apCS0B,WAAoD,IAAnD0J,EAAkD,uDAA1C/J,GAA0BpC,EAAgB,uCAC7E,OAAQA,EAAOnN,MACb,KAAKgP,GACH,OAAO,2BACFsK,GADL,IAEEta,OAAQV,EAAOib,YAGnB,KAAKzK,GACH,OAAO,2BACFwK,GADL,IAEEjR,QAAS8E,EAAOzN,QAChBV,OAAQV,EAAOkb,UAGnB,KAAKzK,GACH,OAAO,2BACFuK,GADL,IAEEta,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,UAGlB,KAAKuP,GACH,OAAO,2BACFqK,GADL,IAEEhK,eAAgB,CACdnK,OAAQ,GACRnG,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAKiQ,GACH,OAAO,2BACFoK,GADL,IAEEhK,eAAgB,CACdnK,OAAQgI,EAAOzN,QACfV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAKkQ,GACH,OAAO,2BACFmK,GADL,IAEEhK,eAAgB,CACdnK,OAAQ,GACRnG,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,QACE,OAAO,eACF4Z,KoC9DT7W,OjBIoB,WAAmD,IAAlD6W,EAAiD,uDAAzCtD,GAAyB7I,EAAgB,uCACtE,OAAQA,EAAOnN,MACb,KAAK6V,GACH,OAAO,2BACFyD,GADL,IAEErD,YAAa,CACXF,MAAO,GACP/W,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAK0W,GACH,OAAO,2BACF2D,GADL,IAEErD,YAAa,CACXF,MAAO5I,EAAOzN,QACdV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAK2W,GACH,OAAO,2BACF0D,GADL,IAEErD,YAAa,CACXF,MAAO,GACP/W,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,KAAKqR,GACH,OAAO,2BACFuI,GADL,IAEEzH,WAAY1E,EAAOzN,UAGvB,QACE,OAAO,eACF4Z,KiB3CThZ,MhEWmB,WAA6C,IAA5CgZ,EAA2C,uDAAnCza,EAAmBsO,EAAgB,uCAC/D,OAAQA,EAAOnN,MACb,KAAKvB,EACH,OAAO,2BACF6a,GADL,IAEExa,aAAc,CACZC,aAAc,GACdC,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAKV,EACH,OAAO,2BACF+a,GADL,IAEExa,aAAc,CACZC,aAAcoO,EAAOzN,QACrBV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAKT,EACH,OAAO,2BACF8a,GADL,IAEExa,aAAc,CACZC,aAAc,GACdC,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,KAAKd,EACH,OAAO,2BACF0a,GADL,IAEEpa,UAAW,CACTH,aAAc,GACdC,OAAQV,EAAOib,UACfta,MAAO,QAIb,KAAKP,EACH,OAAO,2BACF4a,GADL,IAEEpa,UAAW,CACTH,aAAcoO,EAAOzN,QACrBV,OAAQV,EAAOkb,QACfva,MAAO,QAIb,KAAKN,EACH,OAAO,2BACF2a,GADL,IAEEpa,UAAW,CACTH,aAAc,GACdC,OAAQV,EAAOmb,MACfxa,MAAOkO,EAAOzN,WAIpB,QACE,OAAO,eACF4Z,KgE1ETlQ,alDM0B,WAAoD,IAAnDkQ,EAAkD,uDAA1C5R,GAA0ByF,EAAgB,uCAC7E,OAAQA,EAAOnN,MACb,KAAK0G,GACH,OAAO,2BACF4S,GADL,IAEEta,OAAQV,EAAOib,YAGnB,KAAK/S,GACH,OAAO,2BACF8S,GADL,IAEE3R,MAAOwF,EAAOzN,QACdV,OAAQV,EAAOkb,UAGnB,KAAK/S,GACH,OAAO,2BACF6S,GADL,IAEEra,MAAOkO,EAAOzN,UAGlB,KAAKkH,GACH,OAAO,2BACF0S,GADL,IAEE1R,gBAAiBuF,EAAOzN,UAG5B,KAAKoH,GACH,OAAO,2BACFwS,GADL,IAEEzR,gBAAiBsF,EAAOzN,UAG5B,KAAKsH,GACH,OAAO,2BACFsS,GADL,IAEExR,eAAgBqF,EAAOzN,UAG3B,KAAKwH,GACH,OAAO,2BACFoS,GADL,IAEEvR,iBAAkBoF,EAAOzN,UAG7B,QACE,OAAO,eACF4Z,KkDpDT7Q,YhDNyB,WAA0D,IAAzD6Q,EAAwD,uDAAhDlR,GAAyB+E,EAAuB,uCAClF,OAAQA,EAAOnN,MACb,KAAKkI,GACH,OAAO,2BACFoR,GADL,IAEEta,OAAQV,EAAOib,YAGnB,KAAKvR,GACH,OAAO,2BACFsR,GADL,IAEEjR,QAAS8E,EAAOzN,QAChBV,OAAQV,EAAOkb,UAGnB,KAAKvR,GACH,OAAO,2BACFqR,GADL,IAEEra,MAAOkO,EAAOzN,UAGlB,QACE,OAAO,eACF4Z,O,YiDbcI,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CACRlU,KACAwM,KACAE,KACA1C,KACAE,KACA6G,KACAnE,KACAE,KACAhT,IACAE,IACAoJ,KACAE,KACAE,KACAE,KACAZ,OAhBW,wCCdf,IAAMqR,GAAiBC,eAEjBC,GAAmBC,aACvBC,aAAgBJ,IACkFG,MAGrFE,gBAAYC,GAAad,GAAcU,IAEtDF,GAAeO,IAAIT,ICVnBU,IAASC,OACP,eAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9f86211d.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '75%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n  whiteSpace: 'nowrap',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\nexport const StyledLogInButton = styled(Button)({\n  width: '80px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'white',\n  background: 'rgb(20, 19, 19)',\n  '&:hover': {\n    color: 'black',\n    background: 'rgb(227, 218, 218)',\n  },\n});\n\nexport const StyledPersonIcon = styled(PersonIcon)({\n  margin: 'auto 8px',\n  color: 'rgb(20, 19, 19)',\n});\n","export enum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n","export const GET_REQUEST_TOKEN_SUCCESS = 'GET_REQUEST_TOKEN_SUCCESS';\nexport const GET_REQUEST_TOKEN_ERROR = 'GET_REQUEST_TOKEN_ERROR';\nexport const GET_REQUEST_TOKEN_REQUESTED = 'GET_REQUEST_TOKEN_REQUESTED';\nexport const GET_SESSION_ID_SUCCESS = 'GET_SESSION_ID_SUCCESS';\nexport const GET_SESSION_ID_ERROR = 'GET_SESSION_ID_ERROR';\nexport const GET_SESSION_ID_REQUESTED = 'GET_SESSION_ID_REQUESTED';\n\nexport const getRequestTokenSuccess = (tokenDetails: {}) => {\n  return {\n    type: GET_REQUEST_TOKEN_SUCCESS,\n    payload: tokenDetails,\n  };\n};\n\nexport const getRequestTokenError = (error: Error) => {\n  return {\n    type: GET_REQUEST_TOKEN_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRequestTokenRequested = (url: string) => {\n  return {\n    type: GET_REQUEST_TOKEN_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getSessionIDSuccess = (tokenDetails: {}) => {\n  return {\n    type: GET_SESSION_ID_SUCCESS,\n    payload: tokenDetails,\n  };\n};\n\nexport const getSessionIDError = (error: Error) => {\n  return {\n    type: GET_SESSION_ID_ERROR,\n    payload: error,\n  };\n};\n\nexport const getSessionIDRequested = (url: string, body: {}) => {\n  return {\n    type: GET_SESSION_ID_REQUESTED,\n    payload: { url, body },\n  };\n};\n","import {\n  GET_REQUEST_TOKEN_ERROR,\n  GET_REQUEST_TOKEN_REQUESTED,\n  GET_REQUEST_TOKEN_SUCCESS,\n  GET_SESSION_ID_ERROR,\n  GET_SESSION_ID_REQUESTED,\n  GET_SESSION_ID_SUCCESS,\n} from './actions';\nimport { Status } from '../../../store/types';\n\nexport const initialLogInState = {\n  requestToken: {\n    tokenDetails: {},\n    status: null,\n    error: null,\n  },\n  sessionID: {\n    tokenDetails: {\n      session_id: localStorage.getItem('session_id'),\n    },\n    status: null,\n    error: null,\n  },\n};\n\nexport const logIn = (state = initialLogInState, action: any) => {\n  switch (action.type) {\n    case GET_REQUEST_TOKEN_REQUESTED:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_REQUEST_TOKEN_SUCCESS:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_REQUEST_TOKEN_ERROR:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_SESSION_ID_REQUESTED:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_SESSION_ID_SUCCESS:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_SESSION_ID_ERROR:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getRequestTokenError,\n  getRequestTokenSuccess,\n  GET_REQUEST_TOKEN_REQUESTED,\n  getSessionIDError,\n  getSessionIDSuccess,\n  GET_SESSION_ID_REQUESTED,\n} from './actions';\n\nexport function* getRequestTokenSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRequestTokenSuccess(result));\n  } catch (error) {\n    put(getRequestTokenError(error));\n  }\n}\n\nexport function* watchRequestTokenSaga() {\n  yield takeEvery(GET_REQUEST_TOKEN_REQUESTED, getRequestTokenSaga);\n}\n\nexport function* getSessionIDSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      body: payload.body,\n    });\n    const result = yield data.json();\n    yield put(getSessionIDSuccess(result));\n  } catch (error) {\n    put(getSessionIDError(error));\n  }\n}\n\nexport function* watchSessionIDSaga() {\n  yield takeEvery(GET_SESSION_ID_REQUESTED, getSessionIDSaga);\n}\n","export const requestToken = ({ logIn }: any) => logIn.requestToken.tokenDetails.request_token;\nexport const sessionID = ({ logIn }: any) => logIn.sessionID.tokenDetails.session_id;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\n//lists\nexport const getListUrl = (language: string, list: ListNames): string =>\n  `${BASE_URL}movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//genres\nexport const getGenresUrl = (language: string): string =>\n  `${BASE_URL}genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//movies\nexport const getMoviesUrl = (\n  language: string,\n  genre: string,\n  startDate: string,\n  endDate: string,\n  page: number,\n  region: string,\n  provider: string[]\n): string =>\n  `${BASE_URL}discover/movie?api_key=${\n    process.env.REACT_APP_API_KEY\n  }&language=${language}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}&page=${page}&with_watch_providers=${provider.join(\n    '|'\n  )}&watch_region=${region}&with_watch_monetization_types=flatrate`;\n\n//details\nexport const getMovieDetailsUrl = (language: string, id: number): string =>\n  `${BASE_URL}movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//poster\nexport const getPosterUrl = (path: string): string => `https://image.tmdb.org/t/p/w500/${path}`;\n\n//recomendations\nexport const getRecomendationsUrl = (language: string, id: number): string =>\n  `${BASE_URL}/movie/${id}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\n//current country\nexport const getCurrentCountryUrl = (): string =>\n  `https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.REACT_APP_GEO_KEY}`;\n\n//available countries\nexport const getAvailableCountriesUrl = (): string =>\n  `https://api.themoviedb.org/3/watch/providers/regions?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`;\n\n//providers\nexport const getProvidersUrl = (language: string, country: string) =>\n  `${BASE_URL}watch/providers/movie?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&watch_region=${country}`;\n\n//request token\nexport const getRequestTokenUrl = (): string =>\n  `${BASE_URL}/authentication/token/new?api_key=${process.env.REACT_APP_API_KEY}`;\n\n//permission\nexport const getPermissionUrl = (requestToken: string): string =>\n  `https://www.themoviedb.org/authenticate/${requestToken}?redirect_to=http://localhost:3000/login/${requestToken}`;\n\n//session token\nexport const getSessionIDUrl = (request_token: string): string =>\n  `${BASE_URL}authentication/session/new?api_key=${process.env.REACT_APP_API_KEY}&request_token=${request_token}`;\n\n//account lists\nexport const getCreatedListsUrl = (language: string, sessionID: string): string =>\n  `${BASE_URL}account/${process.env.REACT_ACCOUNT_ID}/lists?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&session_id=${sessionID}&page=1`;\n\n//create list\nexport const getCreateListUrl = (sessionID: string): string =>\n  `${BASE_URL}list?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n\n//delete list\nexport const deleteListUrl = (sessionID: string, listID: string): string =>\n  `${BASE_URL}list/${listID}?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n\n//add movie to the list\nexport const getAddMovieToListUrl = (sessionID: string, listID: string): string =>\n  `${BASE_URL}list/${listID}/add_item?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n\n// list details\nexport const getListDetailsUrl = (listID: string, language: string): string =>\n  `${BASE_URL}list/${listID}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//remove movie from the list\n\nexport const getRemoveMovieFromListUrl = (sessionID: string, listID: string): string =>\n  `${BASE_URL}list/${listID}/remove_item?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n","import React, { useState, useEffect } from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer, StyledLogInButton, StyledPersonIcon } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { sessionID } from '../LogIn/store';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [value, setValue] = useState(0);\n  const isUserLoggedIn: boolean = useSelector(sessionID);\n\n  const handleChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <StyledContainer>\n      {!isUserLoggedIn && (\n        <StyledLogInButton onClick={() => history.push(`/login`)}>{t('navBar.logIn')}</StyledLogInButton>\n      )}\n      <StyledAppBar position=\"static\">\n        <Tabs\n          aria-label=\"simple tabs example\"\n          centered\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: { background: 'black' },\n          }}\n        >\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n          {isUserLoggedIn && <StyledTab label={t('navBar.lists')} onClick={() => history.push(`/lists/`)} />}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n      {isUserLoggedIn && <StyledPersonIcon fontSize=\"large\" />}\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n  display: 'flex',\n  flexWrap: 'nowrap',\n});\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\nimport { Status } from '../../../store/types';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import { Card } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledCard = styled(Card)({\n  width: '200px',\n  maxHeight: '380px',\n  margin: ' 20px 40px',\n  '& :hover': {\n    backgroundColor: 'rgb(107, 100, 100)',\n    color: 'white',\n  },\n  '& img': {\n    maxHeight: '300px',\n  },\n});\n","import { Container, Popper } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledPopperContainer = styled(Container)({\n  width: '200px',\n  height: '30px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  background: 'rgba(10, 10, 10, 0.2)',\n  borderRadius: '4px',\n});\n\nexport const StyledPopper = styled(Popper)({\n  position: 'relative',\n  top: '30px !important',\n});\n","export const GET_CREATED_LISTS_SUCCESS = 'GET_CREATED_LISTS_SUCCESS';\nexport const GET_CREATED_LISTS_ERROR = 'GET_CREATED_LISTS_ERROR';\nexport const GET_CREATED_LISTS_REQUESTED = 'GET_CREATED_LISTS_REQUESTED';\nexport const CREATE_LIST = 'CREATE_LIST';\nexport const GET_CREATED_LIST_STATUS = 'GET_CREATED_LIST_STATUS';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const GET_DELETED_LIST_STATUS = 'GET_DELETED_LIST_STATUS';\nexport const ADD_MOVIE_TO_LIST = 'ADD_MOVIE_TO_LIST';\nexport const GET_ADDED_MOVIE_STATUS = 'GET_ADDED_MOVIE_STATUS';\nexport const REMOVE_MOVIE_FROM_LIST = 'REMOVE_MOVIE_FROM_LIST';\nexport const GET_REMOVED_MOVIE_STATUS = 'GET_REMOVED_MOVIE_STATUS';\n\nexport const getCreatedListsSuccess = (createdLists: []) => {\n  return {\n    type: GET_CREATED_LISTS_SUCCESS,\n    payload: createdLists,\n  };\n};\n\nexport const getCreatedListsError = (error: Error) => {\n  return {\n    type: GET_CREATED_LISTS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getCreatedListsRequested = (url: string) => {\n  return {\n    type: GET_CREATED_LISTS_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const createList = (postData: {}) => {\n  return {\n    type: CREATE_LIST,\n    payload: postData,\n  };\n};\n\nexport const getCreatedListStatus = (createdList: {}) => {\n  return {\n    type: GET_CREATED_LIST_STATUS,\n    payload: createdList,\n  };\n};\n\nexport const deleteList = (deleteData: {}) => {\n  return {\n    type: DELETE_LIST,\n    payload: deleteData,\n  };\n};\n\nexport const getDeletedListStatus = (deletedList: {}) => {\n  return {\n    type: GET_DELETED_LIST_STATUS,\n    payload: deletedList,\n  };\n};\n\nexport const addMovieToList = (addMovieData: {}) => {\n  return {\n    type: ADD_MOVIE_TO_LIST,\n    payload: addMovieData,\n  };\n};\n\nexport const getAddedMovieStatus = (addedMovie: {}) => {\n  return {\n    type: GET_ADDED_MOVIE_STATUS,\n    payload: addedMovie,\n  };\n};\n\nexport const removeMovieFromList = (removedMovieData: {}) => {\n  return {\n    type: REMOVE_MOVIE_FROM_LIST,\n    payload: removedMovieData,\n  };\n};\n\nexport const getRemovedMovieStatus = (removedMovie: {}) => {\n  return {\n    type: GET_REMOVED_MOVIE_STATUS,\n    payload: removedMovie,\n  };\n};\n","import {\n  GET_CREATED_LISTS_ERROR,\n  GET_CREATED_LISTS_SUCCESS,\n  GET_CREATED_LISTS_REQUESTED,\n  GET_CREATED_LIST_STATUS,\n  GET_DELETED_LIST_STATUS,\n  GET_ADDED_MOVIE_STATUS,\n  GET_REMOVED_MOVIE_STATUS,\n} from './actions';\nimport { Status } from '../../../store/types';\n\nexport const initialCreatedListsState = {\n  lists: [],\n  status: null,\n  error: null,\n  lastCreatedList: {},\n  lastDeletedList: {},\n  lastAddedMovie: {},\n  lastRemovedMovie: {},\n};\n\nexport const createdLists = (state = initialCreatedListsState, action: any) => {\n  switch (action.type) {\n    case GET_CREATED_LISTS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_CREATED_LISTS_SUCCESS:\n      return {\n        ...state,\n        lists: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_CREATED_LISTS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case GET_CREATED_LIST_STATUS:\n      return {\n        ...state,\n        lastCreatedList: action.payload,\n      };\n\n    case GET_DELETED_LIST_STATUS:\n      return {\n        ...state,\n        lastDeletedList: action.payload,\n      };\n\n    case GET_ADDED_MOVIE_STATUS:\n      return {\n        ...state,\n        lastAddedMovie: action.payload,\n      };\n\n    case GET_REMOVED_MOVIE_STATUS:\n      return {\n        ...state,\n        lastRemovedMovie: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { ListDetails } from './types';\n\nexport const GET_LIST_DETAILS_SUCCESS = 'GET_LIST_DETAILS_SUCCESS';\nexport interface GetListDetailsSuccess {\n  type: typeof GET_LIST_DETAILS_SUCCESS;\n  payload: ListDetails;\n}\n\nexport const GET_LIST_DETAILS_ERROR = 'GET_LIST_DETAILS_ERROR';\nexport interface GetListDetailsError {\n  type: typeof GET_LIST_DETAILS_ERROR;\n  payload: Error;\n}\n\nexport const GET_LIST_DETAILS_REQUESTED = 'GET_LIST_DETAILS_REQUESTED';\nexport interface GetListDetailsRequested {\n  type: typeof GET_LIST_DETAILS_REQUESTED;\n  payload: string;\n}\n\nexport type ListAction = GetListDetailsError | GetListDetailsRequested | GetListDetailsSuccess;\n\nexport const getListDetailsSuccess = (listDetails: ListDetails): GetListDetailsSuccess => {\n  return {\n    type: GET_LIST_DETAILS_SUCCESS,\n    payload: listDetails,\n  };\n};\n\nexport const getListDetailsError = (error: Error): GetListDetailsError => {\n  return {\n    type: GET_LIST_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getListDetailsRequested = (url: string): GetListDetailsRequested => {\n  return {\n    type: GET_LIST_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n","import { GET_LIST_DETAILS_ERROR, GET_LIST_DETAILS_SUCCESS, GET_LIST_DETAILS_REQUESTED } from './actions';\nimport { Status } from '../../../store/types';\nimport { ListAction } from './actions';\n\nexport const initialListDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n};\n\nexport const listDetails = (state = initialListDetailsState, action: ListAction) => {\n  switch (action.type) {\n    case GET_LIST_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_LIST_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_LIST_DETAILS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery, SimpleEffect, PutEffectDescriptor } from 'redux-saga/effects';\nimport { GetListDetailsRequested } from './actions';\nimport { GET_LIST_DETAILS_REQUESTED, getListDetailsSuccess, getListDetailsError } from './actions';\nimport { GetListDetailsSuccess } from './actions';\n\nexport function* getListDetailsSaga({\n  payload,\n}: GetListDetailsRequested): Generator<\n  Promise<Response> | SimpleEffect<'PUT', PutEffectDescriptor<GetListDetailsSuccess>>,\n  void,\n  any\n> {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getListDetailsSuccess(result));\n  } catch (error) {\n    put(getListDetailsError(error));\n  }\n}\n\nexport function* watchListDetailsSaga() {\n  yield takeEvery(GET_LIST_DETAILS_REQUESTED, getListDetailsSaga);\n}\n","import { initialState } from '../../../store/initialState';\n\nexport const moviesFromList = ({ listDetails }: typeof initialState) => listDetails.details.items;\nexport const listName = ({ listDetails }: typeof initialState) => listDetails.details.name;\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getCreatedListsError,\n  getCreatedListsSuccess,\n  GET_CREATED_LISTS_REQUESTED,\n  CREATE_LIST,\n  DELETE_LIST,\n  getCreatedListStatus,\n  getDeletedListStatus,\n  ADD_MOVIE_TO_LIST,\n  getAddedMovieStatus,\n  REMOVE_MOVIE_FROM_LIST,\n  getRemovedMovieStatus,\n  getCreatedListsRequested,\n} from './actions';\nimport { getListDetailsRequested } from '../../CreatedListDetails/store';\n\nexport function* getCreatedListsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getCreatedListsSuccess(result.results));\n  } catch (error) {\n    put(getCreatedListsError(error));\n  }\n}\n\nexport function* watchCreatedListsSaga() {\n  yield takeEvery(GET_CREATED_LISTS_REQUESTED, getCreatedListsSaga);\n}\n\nexport function* createListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.createListUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(payload.listData),\n    });\n    const response = yield data.json();\n    yield put(getCreatedListStatus(response));\n    yield put(getCreatedListsRequested(payload.createdListsUrl));\n  } catch (error) {\n    yield put(getCreatedListStatus(error));\n  }\n}\n\nexport function* watchCreateListSaga() {\n  yield takeEvery(CREATE_LIST, createListSaga);\n}\n\nexport function* deleteListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.deleteListUrl, {\n      method: 'DELETE',\n    });\n    const response = yield data.json();\n    yield put(getDeletedListStatus(response));\n    yield put(getCreatedListsRequested(payload.createdListsUrl));\n  } catch (error) {\n    yield put(getDeletedListStatus(error));\n  }\n}\n\nexport function* watchDeleteListSaga() {\n  yield takeEvery(DELETE_LIST, deleteListSaga);\n}\n\nexport function* addMovieToListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ media_id: payload.movieID }),\n    });\n    const response = yield data.json();\n    yield put(getAddedMovieStatus(response));\n  } catch (error) {\n    yield put(getAddedMovieStatus(error));\n  }\n}\n\nexport function* watchAddMovieToListSaga() {\n  yield takeEvery(ADD_MOVIE_TO_LIST, addMovieToListSaga);\n}\n\nexport function* removeMovieFromListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.removeMovieUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ media_id: payload.movieID }),\n    });\n    const response = yield data.json();\n    yield put(getRemovedMovieStatus(response));\n    yield put(getListDetailsRequested(payload.listDetailsUrl));\n  } catch (error) {\n    yield put(getRemovedMovieStatus(error));\n  }\n}\n\nexport function* watchRemoveMovieFromListSaga() {\n  yield takeEvery(REMOVE_MOVIE_FROM_LIST, removeMovieFromListSaga);\n}\n","import { initialState } from '../../../store/initialState';\n\nexport const userLists = ({ createdLists }: typeof initialState) => createdLists.lists;\nexport const lastCreatedList = ({ createdLists }: typeof initialState) => createdLists.lastCreatedList;\nexport const lastDeletedList = ({ createdLists }: typeof initialState) => createdLists.lastDeletedList;\nexport const lastRemovedMovie = ({ createdLists }: typeof initialState) => createdLists.lastRemovedMovie;\n","import React from 'react';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { getCreatedListsUrl, getAddMovieToListUrl, getRemoveMovieFromListUrl, getListDetailsUrl } from '../../../API';\nimport { StyledPopperContainer, StyledPopper } from './styles';\nimport { sessionID } from '../../LogIn/store';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { userLists, getCreatedListsRequested, addMovieToList, removeMovieFromList } from '../../CreatedLists/store';\nimport { MenuItemData, Popper } from '../types';\n\nexport const CardPopper: React.FC<Popper> = ({ anchorEl, movieID, isRenderedInUserList }) => {\n  const dispatch = useDispatch();\n  const language = i18n.language;\n  const history = useHistory();\n  const { t } = useTranslation();\n  const session_id = useSelector(sessionID);\n  const { list_id } = useParams<{ list_id: string }>();\n  const isPopperOpened = Boolean(anchorEl);\n  const lists = useSelector(userLists);\n  const createdListsPath = getCreatedListsUrl(language, session_id);\n\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState<HTMLElement | null>(null);\n  const isMenuOpened = Boolean(menuAnchorEl);\n\n  const openLists = (e: React.MouseEvent<HTMLElement>) => {\n    if (!lists.length) {\n      dispatch(getCreatedListsRequested(createdListsPath));\n    }\n    setMenuAnchorEl(e.currentTarget);\n  };\n\n  const closeLists = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    setMenuAnchorEl(null);\n  };\n\n  const handleAddMovieToListClick = (listID: string) => {\n    const path = getAddMovieToListUrl(session_id, listID);\n    const addMovieData = {\n      url: path,\n      movieID,\n    };\n    dispatch(addMovieToList(addMovieData));\n  };\n\n  const handleRemoveMovieFromListClick = () => {\n    const removeMoviePath = getRemoveMovieFromListUrl(session_id, list_id);\n    const listDetailsPath = getListDetailsUrl(list_id, language);\n    const removedMovieData = {\n      removeMovieUrl: removeMoviePath,\n      listDetailsUrl: listDetailsPath,\n      movieID,\n    };\n    dispatch(removeMovieFromList(removedMovieData));\n  };\n\n  return (\n    <>\n      {session_id && (\n        <StyledPopper open={isPopperOpened} anchorEl={anchorEl} placement=\"top\">\n          <StyledPopperContainer\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <IconButton color=\"secondary\" onClick={openLists}>\n              <AddIcon />\n              <Menu open={isMenuOpened} anchorEl={menuAnchorEl} onClose={closeLists}>\n                <MenuItem\n                  onClick={() => {\n                    history.push(`/lists/`);\n                  }}\n                >\n                  {t('lists.createList')}\n                </MenuItem>\n                {lists.map(({ name, id }: MenuItemData) => (\n                  <MenuItem\n                    key={id}\n                    onClick={(e) => {\n                      handleAddMovieToListClick(id);\n                      closeLists(e);\n                    }}\n                  >\n                    {name}\n                  </MenuItem>\n                ))}\n              </Menu>\n            </IconButton>\n            {isRenderedInUserList && (\n              <IconButton color=\"secondary\" onClick={handleRemoveMovieFromListClick}>\n                <RemoveIcon />\n              </IconButton>\n            )}\n          </StyledPopperContainer>\n        </StyledPopper>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { CardContent, CardMedia, CardActionArea } from '@material-ui/core';\nimport { getPosterUrl } from '../../API';\nimport { useHistory } from 'react-router-dom';\nimport { StyledCard } from './styles';\nimport { MovieCardData } from './types';\nimport { CardPopper } from './CardPopper';\n\nexport const MovieCard: React.FC<MovieCardData> = ({ title, movieID, posterPath, isRenderedInUserList }) => {\n  const posterSrc = getPosterUrl(posterPath);\n  const history = useHistory();\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n  const openPopper = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const closePopper = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <StyledCard onMouseEnter={openPopper} onMouseLeave={closePopper}>\n        <CardActionArea\n          onClick={(e) => {\n            history.push(`/movie-details/${movieID}`);\n          }}\n        >\n          <CardPopper anchorEl={anchorEl} movieID={movieID} isRenderedInUserList={isRenderedInUserList} />\n          <CardMedia component=\"img\" alt=\"Poster\" image={posterSrc} />\n          <CardContent>\n            <h4>{title}</h4>\n          </CardContent>\n        </CardActionArea>\n      </StyledCard>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\nimport { MovieCard } from '../../MovieCard';\nimport { StyledList } from '../styles';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <StyledList>\n      {movies.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} movieID={id} posterPath={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import { Box } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledBox = styled(Box)({\n  width: '420px',\n  fontSize: '14px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  '& .name': {\n    color: 'grey',\n    width: '120px',\n    textAlign: 'left',\n    marginLeft: '20px',\n  },\n  '& .value': {\n    width: '300px',\n    textAlign: 'left',\n  },\n});\n","export const arrayToString = (arr: any[]) => arr.map((item) => item.name).join(', ');\nexport const numberToMoney = (number: number) => (number ? `${Number(number).toLocaleString()} $` : 0);\n","import React from 'react';\nimport { MovieInfoProps } from '../types';\nimport { StyledBox } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { arrayToString, numberToMoney } from './utils';\n\nexport const MovieInfo: React.FC<MovieInfoProps> = ({\n  budget,\n  genres,\n  production_countries,\n  release_date,\n  revenue,\n  tagline,\n}) => {\n  const { t } = useTranslation();\n  const genresLine = arrayToString(genres);\n  const countriesLine = arrayToString(production_countries);\n  const renderData = [\n    {\n      name: t('details.releaseDate'),\n      value: release_date,\n    },\n    {\n      name: t('details.tagline'),\n      value: tagline,\n    },\n    {\n      name: t('details.genre'),\n      value: genresLine,\n    },\n    {\n      name: t('details.country'),\n      value: countriesLine,\n    },\n    {\n      name: t('details.budget'),\n      value: numberToMoney(budget),\n    },\n    {\n      name: t('details.revenue'),\n      value: numberToMoney(revenue),\n    },\n  ];\n\n  return (\n    <div>\n      {renderData.map(({ name, value }) =>\n        value ? (\n          <StyledBox key={name}>\n            <p className=\"name\">{name}</p>\n            <p className=\"value\">{value}</p>\n          </StyledBox>\n        ) : null\n      )}\n    </div>\n  );\n};\n","export const GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\nexport const GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\nexport const GET_MOVIE_DETAILS_REQUESTED = 'GET_MOVIE_DETAILS_REQUESTED';\nexport const GET_RECOMENDATIONS_REQUESTED = 'GET_RECOMENDATIONS_REQUESTED';\nexport const GET_RECOMENDATIONS_SUCCESS = 'GET_RECOMENDATIONS_SUCCESS';\nexport const GET_RECOMENDATIONS_ERROR = 'GET_RECOMENDATIONS_ERROR';\n\nexport const getMovieDetailsSuccess = (details: {}) => {\n  return {\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: details,\n  };\n};\n\nexport const getMovieDetailsError = (error: Error) => {\n  return {\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getMovieDetailsRequested = (url: string) => {\n  return {\n    type: GET_MOVIE_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getRecomendationsSuccess = (recomendations: []) => {\n  return {\n    type: GET_RECOMENDATIONS_SUCCESS,\n    payload: recomendations,\n  };\n};\n\nexport const getRecomendationsError = (error: Error) => {\n  return {\n    type: GET_RECOMENDATIONS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRecomendationsRequested = (url: string) => {\n  return {\n    type: GET_RECOMENDATIONS_REQUESTED,\n    payload: url,\n  };\n};\n","import {\n  GET_MOVIE_DETAILS_SUCCESS,\n  GET_MOVIE_DETAILS_REQUESTED,\n  GET_MOVIE_DETAILS_ERROR,\n  GET_RECOMENDATIONS_REQUESTED,\n  GET_RECOMENDATIONS_SUCCESS,\n  GET_RECOMENDATIONS_ERROR,\n} from './actions';\nimport { Status } from '../../../store/types';\n\nexport const initialMovieDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n  recomendations: {\n    movies: [],\n    status: null,\n    error: null,\n  },\n};\n\nexport const movieDetails = (state = initialMovieDetailsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIE_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_MOVIE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_MOVIE_DETAILS_ERROR:\n      return {\n        ...state,\n        status: Status.Error,\n        error: action.payload,\n      };\n\n    case GET_RECOMENDATIONS_REQUESTED:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_SUCCESS:\n      return {\n        ...state,\n        recomendations: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_ERROR:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getMovieDetailsError,\n  getMovieDetailsSuccess,\n  GET_MOVIE_DETAILS_REQUESTED,\n  getRecomendationsError,\n  getRecomendationsSuccess,\n  GET_RECOMENDATIONS_REQUESTED,\n} from './actions';\n\nexport function* getMovieDetailsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getMovieDetailsSuccess(result));\n  } catch (error) {\n    put(getMovieDetailsError(error));\n  }\n}\n\nexport function* watchMovieDetailsSaga() {\n  yield takeEvery(GET_MOVIE_DETAILS_REQUESTED, getMovieDetailsSaga);\n}\n\nconst recomendationsListLength = 6;\n\nexport function* getRecomendationsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRecomendationsSuccess(result.results.slice(0, recomendationsListLength)));\n  } catch (error) {\n    put(getRecomendationsError(error));\n  }\n}\n\nexport function* watchRecomendationsSaga() {\n  yield takeEvery(GET_RECOMENDATIONS_REQUESTED, getRecomendationsSaga);\n}\n","export const details = ({ movieDetails }: any) => movieDetails.details;\nexport const recomendations = ({ movieDetails }: any) => movieDetails.recomendations.movies;\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { recomendations } from '../store';\nimport { ListItemData } from '../../Dashboard';\nimport { MovieCard } from '../../MovieCard';\nimport { StyledList } from './styles';\n\nexport const RecomendationsList: React.FC = () => {\n  const list = useSelector(recomendations);\n  return (\n    <StyledList>\n      {list.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} movieID={id} posterPath={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  width: '70%',\n  '& img': {\n    width: '300px',\n    height: '420px',\n  },\n  '& .overview': {\n    textAlign: 'justify',\n    fontWeight: 'lighter',\n  },\n  '& .recomendations': {\n    marginTop: '60px',\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { details, getMovieDetailsRequested, getRecomendationsRequested } from './store';\nimport { getMovieDetailsUrl, getPosterUrl, getRecomendationsUrl } from '../../API';\nimport { StyledContainer } from './styles';\nimport { Box } from '@material-ui/core';\nimport { MovieInfo, RecomendationsList } from './';\n\nexport const MovieDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const { title, poster_path, budget, genres, overview, production_countries, release_date, revenue, tagline } =\n    useSelector(details);\n\n  const language = i18n.language;\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const detailsPath = getMovieDetailsUrl(language, Number(id));\n  const posterSrc = getPosterUrl(poster_path);\n  const recomendationsPath = getRecomendationsUrl(language, Number(id));\n\n  useEffect(() => {\n    dispatch(getMovieDetailsRequested(detailsPath));\n    dispatch(getRecomendationsRequested(recomendationsPath));\n  }, [dispatch, detailsPath, recomendationsPath]);\n\n  return (\n    <StyledContainer>\n      <h2>{title}</h2>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <img src={posterSrc} alt=\"Alt text\" />\n        {overview && (\n          <MovieInfo\n            budget={budget}\n            genres={genres}\n            production_countries={production_countries}\n            release_date={release_date}\n            revenue={revenue}\n            tagline={tagline}\n          />\n        )}\n      </Box>\n      <div>\n        <h3>{t('details.overview')}</h3>\n        <p className=\"overview\">{overview}</p>\n      </div>\n      <div className=\"recomendations\">\n        <h3>{t('details.recomendations')}</h3>\n        <RecomendationsList />\n      </div>\n    </StyledContainer>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '90%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'GET_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'GET_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'GET_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'GET_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'GET_FILTERED_MOVIES_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\nexport const GET_CURRENT_COUNTRY_SUCCESS = 'GET_CURRENT_COUNTRY_SUCCESS';\nexport const GET_CURRENT_COUNTRY_ERROR = 'GET_CURRENT_COUNTRY_ERROR';\nexport const GET_CURRENT_COUNTRY_REQUESTED = 'GET_CURRENT_COUNTRY_REQUESTED';\nexport const GET_PROVIDERS_SUCCESS = 'GET_PROVIDERS_SUCCESS';\nexport const GET_PROVIDERS_ERROR = 'GET_PROVIDERS_ERROR';\nexport const GET_PROVIDERS_REQUESTED = 'GET_PROVIDERS_REQUESTED';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n\nexport const getCurrentCountrySuccess = (countryCode: string) => {\n  return {\n    type: GET_CURRENT_COUNTRY_SUCCESS,\n    payload: countryCode,\n  };\n};\n\nexport const getCurrentCountryError = (error: Error) => {\n  return {\n    type: GET_CURRENT_COUNTRY_ERROR,\n    payload: error,\n  };\n};\n\nexport const getCurrentCountryRequested = (countryData: {}) => {\n  return {\n    type: GET_CURRENT_COUNTRY_REQUESTED,\n    payload: countryData,\n  };\n};\n\nexport const getProvidersSuccess = (providers: []) => {\n  return {\n    type: GET_PROVIDERS_SUCCESS,\n    payload: providers,\n  };\n};\n\nexport const getProvidersError = (error: Error) => {\n  return {\n    type: GET_PROVIDERS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getProvidersRequested = (url: string) => {\n  return {\n    type: GET_PROVIDERS_REQUESTED,\n    payload: url,\n  };\n};\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n  GET_TOTAL_PAGES,\n  GET_CURRENT_COUNTRY_ERROR,\n  GET_CURRENT_COUNTRY_REQUESTED,\n  GET_CURRENT_COUNTRY_SUCCESS,\n  GET_PROVIDERS_ERROR,\n  GET_PROVIDERS_REQUESTED,\n  GET_PROVIDERS_SUCCESS,\n} from './actions';\nimport { Status } from '../../../store/types';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n    totalPages: 0,\n  },\n  totalPages: 0,\n  currentCountry: {\n    code: null,\n    status: null,\n    error: null,\n  },\n  providers: {\n    providers: [],\n    status: null,\n    error: null,\n  },\n};\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    case GET_CURRENT_COUNTRY_REQUESTED:\n      return {\n        ...state,\n        currentCountry: {\n          code: null,\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_CURRENT_COUNTRY_SUCCESS:\n      return {\n        ...state,\n        currentCountry: {\n          code: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_CURRENT_COUNTRY_ERROR:\n      return {\n        ...state,\n        currentCountry: {\n          code: null,\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_PROVIDERS_REQUESTED:\n      return {\n        ...state,\n        providers: {\n          providers: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_PROVIDERS_SUCCESS:\n      return {\n        ...state,\n        providers: {\n          providers: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_PROVIDERS_ERROR:\n      return {\n        ...state,\n        providers: {\n          providers: null,\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n  getTotalPages,\n  getCurrentCountryError,\n  getCurrentCountrySuccess,\n  GET_CURRENT_COUNTRY_REQUESTED,\n  getProvidersError,\n  getProvidersSuccess,\n  GET_PROVIDERS_REQUESTED,\n} from './actions';\nimport { CountryCode } from './types';\n\nconst DEFAULT_COUNTRY_CODE = 'US';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n\nexport function* getCurrentCountrySaga({ payload }: AnyAction): any {\n  try {\n    const availableCountriesData = yield fetch(payload.availableCountriesUrl);\n    const availableCountriesResult = yield availableCountriesData.json();\n    const availableCountries = availableCountriesResult.results.map(({ iso_3166_1 }: CountryCode) => iso_3166_1);\n\n    const currentCountryData = yield fetch(payload.currentCountryUrl);\n    const currentCountryResult = yield currentCountryData.json();\n    const { country_code } = currentCountryResult;\n\n    availableCountries.includes(country_code)\n      ? yield put(getCurrentCountrySuccess(country_code))\n      : yield put(getCurrentCountrySuccess(DEFAULT_COUNTRY_CODE));\n  } catch (error) {\n    put(getCurrentCountryError(error));\n  }\n}\n\nexport function* watchCurrentCountrySaga() {\n  yield takeEvery(GET_CURRENT_COUNTRY_REQUESTED, getCurrentCountrySaga);\n}\n\nexport function* getProvidersSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getProvidersSuccess(result.results));\n  } catch (error) {\n    put(getProvidersError(error));\n  }\n}\n\nexport function* watchProvidersSaga() {\n  yield takeEvery(GET_PROVIDERS_REQUESTED, getProvidersSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\nexport const totalPages = ({ movies }: any) => movies.totalPages;\nexport const currentCountryCode = ({ movies }: any) => movies.currentCountry.code;\nexport const providers = ({ movies }: any) => movies.providers.providers;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl, getCurrentCountryUrl, getProvidersUrl, getAvailableCountriesUrl } from '../../../API';\nimport i18n from 'i18next';\nimport {\n  getGenresRequested,\n  genres,\n  getCurrentCountryRequested,\n  getProvidersRequested,\n  currentCountryCode,\n  providers,\n} from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilterItemData, ProviderData } from '../';\nimport { FiltersProps } from '../types';\n\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Filters: React.FC<FiltersProps> = ({ onAplied }) => {\n  const language = i18n.language;\n  const genresPath = getGenresUrl(language);\n  const currentCountryPath = getCurrentCountryUrl();\n  const availableCountriesPath = getAvailableCountriesUrl();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n  const providersList = useSelector(providers);\n  const countryCode = useSelector(currentCountryCode);\n  const providersPath = getProvidersUrl(language, countryCode);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [provider, setProvider] = useState<string[]>([]);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n  };\n\n  const handleProviderChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setProvider(e.target.value as string[]);\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setEndDate(e.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(genresPath));\n  }, [dispatch, genresPath]);\n\n  useEffect(() => {\n    dispatch(\n      getCurrentCountryRequested({\n        currentCountryUrl: currentCountryPath,\n        availableCountriesUrl: availableCountriesPath,\n      })\n    );\n  }, [dispatch, currentCountryPath, availableCountriesPath]);\n\n  useEffect(() => {\n    dispatch(getProvidersRequested(providersPath));\n  }, [dispatch, providersPath]);\n\n  return (\n    <StyledContainer>\n      <FormControl>\n        <InputLabel id=\"genre-select-label\">{t('filters.genre')}</InputLabel>\n        <StyledSelect\n          labelId=\"genre-select-label\"\n          value={genre}\n          onChange={(e) => handleGenreChange(e as React.ChangeEvent<HTMLSelectElement>)}\n        >\n          {genresList.map(({ name, id }: FilterItemData) => (\n            <MenuItem key={id} value={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </StyledSelect>\n      </FormControl>\n      <FormControl>\n        <InputLabel id=\"providers-select-label\">{t('filters.providers')}</InputLabel>\n        <StyledSelect\n          labelId=\"providers-select-label\"\n          value={provider}\n          multiple\n          onChange={(e) => handleProviderChange(e as React.ChangeEvent<HTMLSelectElement>)}\n        >\n          {providersList.map(({ provider_name, provider_id }: ProviderData) => (\n            <MenuItem key={provider_id} value={provider_id}>\n              {provider_name}\n            </MenuItem>\n          ))}\n        </StyledSelect>\n      </FormControl>\n      <TextField\n        label={t('filters.startDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleStartDateChange}\n        value={startDate}\n      />\n      <TextField\n        label={t('filters.endDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleEndDateChange}\n        value={endDate}\n      />\n      <StyledButton onClick={() => onAplied(genre, startDate, endDate, provider, countryCode)}>\n        {t('filters.apply')}\n      </StyledButton>\n    </StyledContainer>\n  );\n};\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { filteredMovies } from '../store';\nimport { StyledList } from './styles';\nimport { MovieCard } from '../../MovieCard';\nimport { ListItemData } from '../../Dashboard';\n\nexport const FilteredMoviesList: React.FC = () => {\n  const movies = useSelector(filteredMovies);\n\n  return (\n    <StyledList>\n      {movies.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} movieID={id} posterPath={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import Pagination from '@material-ui/lab/Pagination';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledPagination = styled(Pagination)({\n  '& button': {\n    background: 'rgb(45, 140, 181)',\n    '&:hover': {\n      background: 'white',\n    },\n  },\n  '& .Mui-selected': {\n    border: '2px solid black',\n    fontWeight: 'bold',\n    background: 'rgb(45, 140, 181)',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { totalPages } from '../store';\nimport { StyledPagination, StyledContainer } from './styles';\n\ninterface Pagination {\n  changePage: (page: number) => void;\n  page: number;\n}\n\nexport const MoviesPagination: React.FC<Pagination> = ({ changePage, page }) => {\n  const pages = useSelector(totalPages);\n  return (\n    <StyledContainer>\n      <StyledPagination\n        count={pages}\n        size=\"large\"\n        shape=\"rounded\"\n        onChange={(e, page) => changePage(page)}\n        page={page}\n      />\n    </StyledContainer>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Filters, MoviesPagination, FilteredMoviesList } from './';\nimport { useDispatch } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested } from './store';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Movies: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [provider, setProvider] = useState<string[]>([]);\n  const [region, setRegion] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page, region, provider);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string, provider: string[], region: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(DEFAULT_PAGE);\n    setProvider(provider);\n    setRegion(region);\n  };\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MoviesPagination changePage={(page) => setPage(page)} page={page} />\n      <FilteredMoviesList />\n    </div>\n  );\n};\n","export const GET_RANDOM_MOVIE_SUCCESS = 'GET_RANDOM_MOVIE_SUCCESS';\nexport const GET_RANDOM_MOVIE_ERROR = 'GET_RANDOM_MOVIE_ERROR';\nexport const GET_RANDOM_MOVIE_REQUESTED = 'GET_RANDOM_MOVIE_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getRandomMovieSuccess = (movie: {}) => {\n  return {\n    type: GET_RANDOM_MOVIE_SUCCESS,\n    payload: movie,\n  };\n};\n\nexport const getRandomMovieError = (error: Error) => {\n  return {\n    type: GET_RANDOM_MOVIE_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRandomMovieRequested = (url: string) => {\n  return {\n    type: GET_RANDOM_MOVIE_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","import {\n  GET_RANDOM_MOVIE_REQUESTED,\n  GET_RANDOM_MOVIE_ERROR,\n  GET_RANDOM_MOVIE_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\nimport { Status } from '../../../store/types';\n\nexport const initialRandomMovieState = {\n  randomMovie: {\n    movie: {},\n    status: null,\n    error: null,\n  },\n  totalPages: 0,\n};\n\nexport const random = (state = initialRandomMovieState, action: any) => {\n  switch (action.type) {\n    case GET_RANDOM_MOVIE_REQUESTED:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_SUCCESS:\n      return {\n        ...state,\n        randomMovie: {\n          movie: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_ERROR:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","export const getRandomNumber = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getRandomPage = (totalPages: number) => {\n  return getRandomNumber(1, totalPages);\n};\n\nexport const getRandomMovie = (array: []) => {\n  return array.length ? array[getRandomNumber(0, array.length - 1)] : array;\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport { getRandomMovieError, getRandomMovieSuccess, GET_RANDOM_MOVIE_REQUESTED, getTotalPages } from './actions';\nimport { getRandomMovie } from '../utils';\n\nexport function* getRandomMovieSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    const movie = yield getRandomMovie(result.results);\n    yield put(getRandomMovieSuccess(movie));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getRandomMovieError(error));\n  }\n}\n\nexport function* watchRandomMovieSaga() {\n  yield takeEvery(GET_RANDOM_MOVIE_REQUESTED, getRandomMovieSaga);\n}\n","export const randomMovie = ({ random }: any) => random.randomMovie.movie;\nexport const totalPagesForRandom = ({ random }: any) => random.totalPages;\n","import React, { useState, useEffect } from 'react';\nimport { Filters } from '../Movies';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getRandomMovieRequested, randomMovie, totalPagesForRandom } from './store';\nimport { getRandomPage } from './utils';\nimport { MovieCard } from '../MovieCard';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const RandomMovie: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n  const totalPages = useSelector(totalPagesForRandom);\n  const { title, id, poster_path } = useSelector(randomMovie);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [provider, setProvider] = useState<string[]>([]);\n  const [region, setRegion] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page, region, provider);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string, provider: string[], region: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(getRandomPage(totalPages));\n    setProvider(provider);\n    setRegion(region);\n  };\n\n  useEffect(() => {\n    dispatch(getRandomMovieRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MovieCard title={title} movieID={id} posterPath={poster_path} />\n    </div>\n  );\n};\n","import { styled } from '@material-ui/core/styles';\nimport { Container, Button, Input } from '@material-ui/core';\n\nexport const StyledContainer = styled(Container)({\n  width: '64%',\n  margin: '40px auto',\n  display: 'flex',\n  justifyContent: 'space-around',\n});\n\nexport const StyledButton = styled(Button)({\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledInput = styled(Input)({\n  width: '30%',\n});\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { StyledContainer, StyledButton, StyledInput } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport i18n from 'i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createList } from '../store';\nimport { sessionID } from '../../LogIn/store';\nimport { FormData } from '../types';\nimport { getCreateListUrl, getCreatedListsUrl } from '../../../API';\n\nexport const ListCreationForm: React.FC = () => {\n  const { register, handleSubmit, reset } = useForm();\n  const { t } = useTranslation();\n  const language = i18n.language;\n  const dispatch = useDispatch();\n  const id = useSelector(sessionID);\n\n  const createListPath = getCreateListUrl(id);\n  const createdListsPath = getCreatedListsUrl(language, id);\n\n  const onSubmit = ({ name, description }: FormData) => {\n    const listData = {\n      name,\n      description,\n      language,\n    };\n    dispatch(createList({ createListUrl: createListPath, createdListsUrl: createdListsPath, listData }));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <StyledContainer>\n        <StyledInput placeholder={t('lists.name')} {...register('name')} />\n        <StyledInput placeholder={t('lists.description')} {...register('description')} />\n        <StyledButton type=\"submit\">{t('lists.createList')}</StyledButton>\n      </StyledContainer>\n    </form>\n  );\n};\n","import { List, Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledList = styled(List)({\n  width: '60%',\n  margin: 'auto',\n});\n\nexport const StyledContainer = styled(Container)({\n  height: '80px',\n  width: '94%',\n  marginTop: '8px',\n  borderRadius: '4px',\n  '& span': {\n    fontSize: '20px',\n  },\n  '&:hover': {\n    background: 'rgb(232, 232, 232)',\n    cursor: 'pointer',\n    '& span': {\n      fontWeight: 'bold',\n    },\n  },\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport i18n from 'i18next';\nimport { useHistory } from 'react-router-dom';\nimport { userLists, deleteList } from '../store';\nimport { sessionID } from '../../LogIn/store';\nimport { ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport { StyledList, StyledContainer } from './styles';\nimport { ListItemType } from '../types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { deleteListUrl, getCreatedListsUrl } from '../../../API';\n\nexport const Lists: React.FC = () => {\n  const language = i18n.language;\n  const lists = useSelector(userLists);\n  const dispatch = useDispatch();\n  const id = useSelector(sessionID);\n  const history = useHistory();\n\n  const handleDeleteListClick = (listID: string) => {\n    const deleteListPath = deleteListUrl(id, listID);\n    const createdListsPath = getCreatedListsUrl(language, id);\n    dispatch(deleteList({ deleteListUrl: deleteListPath, createdListsUrl: createdListsPath }));\n  };\n\n  return (\n    <StyledList>\n      {lists.map(({ name, description, id }: ListItemType) => (\n        <StyledContainer key={id} onClick={() => history.push(`${id}`)}>\n          <ListItem>\n            <ListItemText primary={name} secondary={description} />\n            <ListItemSecondaryAction>\n              <IconButton\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleDeleteListClick(id);\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </StyledContainer>\n      ))}\n    </StyledList>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { ListCreationForm } from './CreationForm';\nimport { Lists } from './Lists';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCreatedListsRequested } from './store';\nimport { getCreatedListsUrl } from '../../API';\nimport i18n from 'i18next';\nimport { sessionID } from '../LogIn/store';\n\nexport const CreatedLists: React.FC = () => {\n  const dispatch = useDispatch();\n  const language = i18n.language;\n  const id = useSelector(sessionID);\n  const path = getCreatedListsUrl(language, id);\n\n  useEffect(() => {\n    dispatch(getCreatedListsRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <ListCreationForm />\n      <Lists />\n    </div>\n  );\n};\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { getListDetailsRequested, moviesFromList, listName } from './store';\nimport { getListDetailsUrl } from '../../API';\nimport { ListItemData } from '../Dashboard';\nimport { MovieCard } from '../MovieCard';\nimport { StyledList } from './styles';\n\nexport const CreatedListDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const language = i18n.language;\n  const listID = useParams<{ list_id: string }>().list_id;\n\n  const path = getListDetailsUrl(listID, language);\n  const movies = useSelector(moviesFromList);\n  const name = useSelector(listName);\n\n  useEffect(() => {\n    dispatch(getListDetailsRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <h1>{name}</h1>\n      {movies && (\n        <StyledList>\n          {movies.map(({ title, id, poster_path }: ListItemData) => (\n            <MovieCard title={title} movieID={id} posterPath={poster_path} key={id} isRenderedInUserList />\n          ))}\n        </StyledList>\n      )}\n    </div>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  margin: '40px auto',\n});\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from '@material-ui/core';\nimport { StyledContainer } from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRequestTokenRequested, requestToken, getSessionIDRequested, sessionID } from './store';\nimport { getRequestTokenUrl, getPermissionUrl, getSessionIDUrl } from '../../API';\nimport { useParams } from 'react-router-dom';\n\nexport const LogIn: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const token = useSelector(requestToken);\n  const requestTokenPath = getRequestTokenUrl();\n  const permissionPath = getPermissionUrl(token);\n  const { request_token } = useParams<any>();\n  const sessionIDPath = getSessionIDUrl(request_token);\n  const session_id = useSelector(sessionID);\n\n  useEffect(() => {\n    dispatch(getRequestTokenRequested(requestTokenPath));\n    return () => {\n      localStorage.setItem('session_id', session_id);\n    };\n  }, [dispatch, session_id, requestTokenPath]);\n\n  useEffect(() => {\n    if (request_token) {\n      dispatch(getSessionIDRequested(sessionIDPath, JSON.stringify({ request_token })));\n    }\n  }, [dispatch, request_token, sessionIDPath]);\n\n  return (\n    <StyledContainer>\n      {session_id ? <p>{t('logIn.isLogged')}</p> : <Link href={permissionPath}>{t('logIn.logInLink')}</Link>}\n    </StyledContainer>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(240, 240, 240)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  minWidth: '1000px',\n  minHeight: '100vh',\n  fontFamily: 'fangsong',\n  marginTop: '-20px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { MovieDetails } from './components/MovieDetails';\nimport { Movies } from './components/Movies';\nimport { RandomMovie } from './components/RandomMovie';\nimport { CreatedLists } from './components/CreatedLists';\nimport { CreatedListDetails } from './components/CreatedListDetails';\nimport { LogIn } from './components/LogIn';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <Switch>\n          <Route path=\"/\" component={NavBar} />\n        </Switch>\n        <Switch>\n          <Route path=\"/login\" exact component={LogIn} />\n          <Route path=\"/login/:request_token\" exact component={LogIn} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movie-details/:id\" component={MovieDetails} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/random movie/\" component={RandomMovie} />\n          <Route path=\"/lists\" exact component={CreatedLists} />\n          <Route path=\"/lists/:list_id\" component={CreatedListDetails} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\nimport { initialMovieDetailsState } from '../components/MovieDetails/store';\nimport { initialRandomMovieState } from '../components/RandomMovie/store';\nimport { initialLogInState } from '../components/LogIn/store';\nimport { initialCreatedListsState } from '../components/CreatedLists/store';\nimport { initialListDetailsState } from '../components/CreatedListDetails/store';\n\nexport const initialState = {\n  lists: initialListsState,\n  movies: initialMoviesState,\n  movieDetails: initialMovieDetailsState,\n  random: initialRandomMovieState,\n  logIn: initialLogInState,\n  createdLists: initialCreatedListsState,\n  listDetails: initialListDetailsState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\nimport { movieDetails } from '../components/MovieDetails/store';\nimport { random } from '../components/RandomMovie/store';\nimport { logIn } from '../components/LogIn/store';\nimport { createdLists } from '../components/CreatedLists/store';\nimport { listDetails } from '../components/CreatedListDetails/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n  movieDetails,\n  random,\n  logIn,\n  createdLists,\n  listDetails,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport {\n  watchGenresSaga,\n  watchFilteredMoviesSaga,\n  watchCurrentCountrySaga,\n  watchProvidersSaga,\n} from '../components/Movies/store';\nimport { watchMovieDetailsSaga, watchRecomendationsSaga } from '../components/MovieDetails/store';\nimport { watchRandomMovieSaga } from '../components/RandomMovie/store';\nimport { watchRequestTokenSaga, watchSessionIDSaga } from '../components/LogIn/store';\nimport {\n  watchCreatedListsSaga,\n  watchCreateListSaga,\n  watchDeleteListSaga,\n  watchAddMovieToListSaga,\n  watchRemoveMovieFromListSaga,\n} from '../components/CreatedLists/store';\nimport { watchListDetailsSaga } from '../components/CreatedListDetails/store';\n\nexport default function* rootSaga() {\n  yield all([\n    watchMoviesSaga(),\n    watchGenresSaga(),\n    watchFilteredMoviesSaga(),\n    watchMovieDetailsSaga(),\n    watchRecomendationsSaga(),\n    watchRandomMovieSaga(),\n    watchCurrentCountrySaga(),\n    watchProvidersSaga(),\n    watchRequestTokenSaga(),\n    watchSessionIDSaga(),\n    watchCreatedListsSaga(),\n    watchCreateListSaga(),\n    watchDeleteListSaga(),\n    watchAddMovieToListSaga(),\n    watchListDetailsSaga(),\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(\n  applyMiddleware(sagaMiddleware),\n  process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION__() : null || compose\n);\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}