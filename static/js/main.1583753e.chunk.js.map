{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/store/reducer.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/Movies/store/reducer.ts","components/Dashboard/MoviesList/MoviesList.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/RandomMovie/store/reducer.ts","components/Movies/Filters/Filters.tsx","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","components/Movies/Pagination/styles.js","components/Movies/Pagination/MoviesPagination.tsx","components/Movies/Movies.tsx","components/RandomMovie/store/actions.ts","components/RandomMovie/utils.ts","components/RandomMovie/store/sagas.ts","components/RandomMovie/store/selectors.ts","components/RandomMovie/RandomMovie.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","ListNames","navTabs","NavBar","t","useTranslation","history","useHistory","position","Tabs","aria-label","centered","variant","map","tab","label","onClick","push","String","Math","random","ButtonGroup","Object","values","changeLanguage","flexWrap","BASE_URL","Status","getMoviesUrl","language","genre","startDate","endDate","page","process","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","status","error","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","type","payload","fetch","data","json","result","put","results","slice","takeEvery","listsStoreData","selector","lists","action","url","MoviesList","dispatch","useDispatch","list","useParams","useSelector","path","getListUrl","useEffect","length","List","title","id","ListItem","StyledSelect","Select","marginTop","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","GET_TOTAL_PAGES","getGenresSuccess","genres","initialMoviesState","genresList","filteredMovies","totalPages","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","total_pages","Filters","onAplied","getGenresUrl","useState","setGenre","setStartDate","setEndDate","FormControl","InputLabel","labelId","value","onChange","e","target","handleGenreChange","MenuItem","TextField","InputLabelProps","shrink","FilteredMoviesList","StyledPagination","Pagination","border","MoviesPagination","changePage","pages","count","size","shape","Movies","setPage","GET_RANDOM_MOVIE_SUCCESS","GET_RANDOM_MOVIE_ERROR","GET_RANDOM_MOVIE_REQUESTED","getRandomMovieSuccess","movie","initialRandomMovieState","randomMovie","getRandomNumber","min","max","ceil","floor","getRandomMovieSaga","watchRandomMovieSaga","array","totalPagesForRandom","RandomMovie","getRandomPage","textAlign","height","fontFamily","minWidth","App","maxWidth","component","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.1583753e.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '80%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\n//lists\nexport const getListUrl = (language: string, list: ListNames): string =>\n  `${BASE_URL}movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//genres\nexport const getGenresUrl = (language: string): string =>\n  `${BASE_URL}genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//movies\nexport const getMoviesUrl = (\n  language: string,\n  genre: string,\n  startDate: string,\n  endDate: string,\n  page: number\n): string =>\n  `${BASE_URL}discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}&page=${page}&with_watch_monetization_types=flatrate`;\n","import React from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory } from 'react-router-dom';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <StyledContainer>\n      <StyledAppBar position=\"static\">\n        <Tabs aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n  display: 'flex',\n  flexWrap: 'nowrap',\n});\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n    totalPages: 0,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: ListItemData) => (\n        <ListItem key={id}>{title}</ListItem>\n      ))}\n    </List>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '75%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'GET_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'GET_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'GET_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'GET_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'GET_FILTERED_MOVIES_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n  getTotalPages,\n} from './actions';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\nexport const totalPages = ({ movies }: any) => movies.totalPages;\n","import {\n  GET_RANDOM_MOVIE_REQUESTED,\n  GET_RANDOM_MOVIE_ERROR,\n  GET_RANDOM_MOVIE_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialRandomMovieState = {\n  randomMovie: {\n    movie: {},\n    status: null,\n    error: null,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const random = (state = initialRandomMovieState, action: any) => {\n  switch (action.type) {\n    case GET_RANDOM_MOVIE_REQUESTED:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_SUCCESS:\n      return {\n        ...state,\n        randomMovie: {\n          movie: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_ERROR:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl } from '../../../API';\nimport i18n from 'i18next';\nimport { getGenresRequested, genres } from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilterItemData } from '../';\nimport { FiltersProps } from '../types';\n\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Filters: React.FC<FiltersProps> = ({ onAplied }) => {\n  const language = i18n.language;\n  const path = getGenresUrl(language);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setEndDate(e.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <StyledContainer>\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\">{t('filters.genre')}</InputLabel>\n        <StyledSelect\n          labelId=\"demo-simple-select-label\"\n          value={genre}\n          onChange={(e) => handleGenreChange(e as React.ChangeEvent<HTMLSelectElement>)}\n        >\n          {genresList.map(({ name, id }: FilterItemData) => (\n            <MenuItem key={id} value={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </StyledSelect>\n      </FormControl>\n      <TextField\n        label={t('filters.startDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleStartDateChange}\n        value={startDate}\n      />\n      <TextField\n        label={t('filters.endDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleEndDateChange}\n        value={endDate}\n      />\n      <StyledButton onClick={() => onAplied(genre, startDate, endDate)}>{t('filters.apply')}</StyledButton>\n    </StyledContainer>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { filteredMovies } from '../store';\n\nexport const FilteredMoviesList: React.FC = () => {\n  const movies = useSelector(filteredMovies);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: any) => (\n        <ListItem key={id}>{title}</ListItem>\n      ))}\n    </List>\n  );\n};\n","import Pagination from '@material-ui/lab/Pagination';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledPagination = styled(Pagination)({\n  '& button': {\n    background: 'rgb(45, 140, 181)',\n    '&:hover': {\n      background: 'white',\n    },\n  },\n  '& .Mui-selected': {\n    border: '2px solid black',\n    fontWeight: 'bold',\n    background: 'rgb(45, 140, 181)',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { totalPages } from '../store';\nimport { StyledPagination, StyledContainer } from './styles';\n\ninterface Pagination {\n  changePage: (page: number) => void;\n}\n\nexport const MoviesPagination: React.FC<Pagination> = ({ changePage }) => {\n  const pages = useSelector(totalPages);\n  return (\n    <StyledContainer>\n      <StyledPagination count={pages} size=\"large\" shape=\"rounded\" onChange={(e, page) => changePage(page)} />\n    </StyledContainer>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Filters, MoviesPagination, FilteredMoviesList } from './';\nimport { useDispatch } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested } from './store';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Movies: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n  };\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MoviesPagination changePage={(page) => setPage(page)} />\n      <FilteredMoviesList />\n    </div>\n  );\n};\n","export const GET_RANDOM_MOVIE_SUCCESS = 'GET_RANDOM_MOVIE_SUCCESS';\nexport const GET_RANDOM_MOVIE_ERROR = 'GET_RANDOM_MOVIE_ERROR';\nexport const GET_RANDOM_MOVIE_REQUESTED = 'GET_RANDOM_MOVIE_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getRandomMovieSuccess = (movie: {}) => {\n  return {\n    type: GET_RANDOM_MOVIE_SUCCESS,\n    payload: movie,\n  };\n};\n\nexport const getRandomMovieError = (error: Error) => {\n  return {\n    type: GET_RANDOM_MOVIE_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRandomMovieRequested = (url: string) => {\n  return {\n    type: GET_RANDOM_MOVIE_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","export const getRandomNumber = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getRandomPage = (totalPages: number) => {\n  return getRandomNumber(1, totalPages);\n};\n\nexport const getRandomMovie = (array: []) => {\n  return array.length ? array[getRandomNumber(0, array.length - 1)] : array;\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport { getRandomMovieError, getRandomMovieSuccess, GET_RANDOM_MOVIE_REQUESTED, getTotalPages } from './actions';\nimport { getRandomMovie } from '../utils';\n\nexport function* getRandomMovieSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    const movie = yield getRandomMovie(result.results);\n    yield put(getRandomMovieSuccess(movie));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getRandomMovieError(error));\n  }\n}\n\nexport function* watchRandomMovieSaga() {\n  yield takeEvery(GET_RANDOM_MOVIE_REQUESTED, getRandomMovieSaga);\n}\n","export const randomMovie = ({ random }: any) => random.randomMovie.movie;\nexport const totalPagesForRandom = ({ random }: any) => random.totalPages;\n","import React, { useState, useEffect } from 'react';\nimport { Filters } from '../Movies';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getRandomMovieRequested, randomMovie, totalPagesForRandom } from './store';\nimport { getRandomPage } from './utils';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const RandomMovie: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n  const totalPages = useSelector(totalPagesForRandom);\n  const movie = useSelector(randomMovie);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(getRandomPage(totalPages));\n  };\n\n  useEffect(() => {\n    dispatch(getRandomMovieRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <p>{movie.title}</p>\n    </div>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(56, 50, 50, 0.6)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  height: '800px',\n  fontFamily: 'sans-serif',\n  minWidth: '1000px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { Movies } from './components/Movies';\nimport { RandomMovie } from './components/RandomMovie';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <Switch>\n          <Route path=\"/\" component={NavBar} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/random movie/\" component={RandomMovie} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\nimport { initialRandomMovieState } from '../components/RandomMovie/store';\n\nexport const initialState = {\n  initialListsState,\n  initialMoviesState,\n  initialRandomMovieState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\nimport { random } from '../components/RandomMovie/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n  random,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchGenresSaga, watchFilteredMoviesSaga } from '../components/Movies/store';\nimport { watchRandomMovieSaga } from '../components/RandomMovie/store';\n\nexport default function* rootSaga() {\n  yield all([watchMoviesSaga(), watchGenresSaga(), watchFilteredMoviesSaga(), watchRandomMovieSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(applyMiddleware(sagaMiddleware), (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}