{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/store/reducer.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/MovieDetails/store/reducer.ts","components/Dashboard/MoviesList/MoviesList.tsx","components/MovieDetails/store/actions.ts","components/MovieDetails/store/sagas.ts","components/MovieDetails/store/selectors.ts","components/MovieDetails/styles.js","components/MovieDetails/MovieInfo/styles.js","components/MovieDetails/MovieInfo/MovieInfo.tsx","components/MovieDetails/MovieDetails.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","ListNames","navTabs","NavBar","t","useTranslation","history","useHistory","position","Tabs","aria-label","centered","variant","map","tab","label","onClick","push","String","Math","random","ButtonGroup","Object","values","changeLanguage","Status","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","status","error","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","type","payload","fetch","data","json","result","put","results","slice","takeEvery","listsStoreData","selector","lists","action","url","MoviesList","dispatch","useDispatch","list","useParams","useSelector","language","path","process","getListUrl","useEffect","length","List","title","id","ListItem","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_ERROR","GET_MOVIE_DETAILS_REQUESTED","getMovieDetailsSuccess","details","initialMovieDetailsState","getMovieDetailsSaga","watchMovieDetailsSaga","movieDetails","height","StyledBox","Box","MovieInfo","budget","genres","production_countries","release_date","revenue","tagline","genresLine","genre","join","countriesLine","country","renderData","value","MovieDetails","poster_path","overview","getMovieDetailsUrl","Number","posterSrc","getPosterUrl","src","alt","textAlign","fontFamily","App","maxWidth","component","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"83CAKYA,E,mECCCC,EAAeC,YAAOC,IAAPD,CAAe,CACzCE,MAAO,MACPC,OAAQ,OACRC,WAAY,sBAGDC,EAAYL,YAAOM,IAAPN,CAAY,CACnCO,SAAU,OACVC,WAAY,OACZC,MAAO,UAGIC,EAAeV,YAAOW,IAAPX,CAAe,CACzCE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDQ,EAAkBZ,YAAOa,IAAPb,CAAkB,CAC/Cc,QAAS,OACTC,eAAgB,kB,6EDvBNjB,K,QAAAA,E,SAAAA,M,KAKL,IAAMkB,GAAS,mBACnBlB,EAASmB,GAAK,CACbC,YAAaC,IAFK,cAInBrB,EAASsB,GAAK,CACbF,YAAaG,IALK,GAStBC,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BC,IAAK5B,EAASmB,GACdD,c,IElBUW,E,eCMNC,EAAoB,CAAC,mBAAoB,gBAAiB,sBAEnDC,EAAmB,WAC9B,IAAQC,EAAMC,cAAND,EACFE,EAAUC,cAEhB,OACE,eAACrB,EAAD,WACE,cAACb,EAAD,CAAcmC,SAAS,SAAvB,SACE,cAACC,EAAA,EAAD,CAAMC,aAAW,sBAAsBC,UAAQ,EAACC,QAAQ,YAAxD,SACGV,EAAQW,KAAI,SAACC,GAAD,OACX,cAACnC,EAAD,CACEoC,MAAOX,EAAEU,GAETE,QAAS,kBAAMV,EAAQW,KAAR,WAAiBb,EAAEU,EAAK,CAAEd,IAAK,OAA/B,QADVkB,OAAOC,KAAKC,kBAMzB,cAACC,EAAA,EAAD,CAAaT,QAAQ,YAAYF,aAAW,iCAA5C,SACGY,OAAOC,OAAOnD,GAAUyC,KAAI,SAACb,GAAD,OAC3B,cAAChB,EAAD,CAA0CgC,QAAS,kBAAMpB,IAAK4B,eAAexB,IAA7E,SACGA,GADgBkB,OAAOC,KAAKC,oBC1B5BpC,EAAeV,YAAOW,IAAPX,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPL,WAAY,oBACZD,OAAQ,MACR,UAAW,CACTC,WAAY,WAIHQ,EAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CE,MAAO,S,SFbGyB,K,uCAAAA,E,iCAAAA,E,gCAAAA,M,KAQL,IGGFwB,ECRCC,EAA6D,CACjE,CAAEC,KAAM,uBAAwBC,aAAc3B,EAAU4B,0BACxD,CAAEF,KAAM,qBAAsBC,aAAc3B,EAAU6B,uBACtD,CAAEH,KAAM,oBAAqBC,aAAc3B,EAAU8B,uBAG1CC,EAAsB,WACjC,IAAM1B,EAAUC,cACRH,EAAMC,cAAND,EAER,OACE,mCACE,cAAC,EAAD,UACGsB,EAAiBb,KAAI,gBAAGc,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACpB,cAAC,EAAD,CAAyBZ,QAAS,kBAAMV,EAAQW,KAAKW,IAArD,SACGxB,EAAEuB,IADcA,W,QCpBhBM,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAuB,uBACvBC,EAA2B,2BAE3BC,EAAc,aACdC,EAAW,WACXC,EAAU,U,QFLjBC,EAAa,CACjBC,OAAQ,GACRC,OAAQ,KACRC,MAAO,MAGIC,EAAoB,CAC/BC,WAAYL,EACZM,SAAUN,EACVO,QAASP,I,SAGNf,K,sBAAAA,E,kBAAAA,E,eAAAA,M,KAME,I,sCGaUuB,I,WAUAC,IA3BXC,GAAc,mBACjBb,EAAc,CACbc,QDTgC,SAACV,GACnC,MAAO,CACLW,KAAMnB,EACNN,KAAMU,EACNgB,QAASZ,ICMTE,MDF8B,SAACA,GACjC,MAAO,CACLS,KAAMlB,EACNP,KAAMU,EACNgB,QAASV,MCLO,cAKjBJ,EAAU,CACTY,QDmC6B,SAACV,GAChC,MAAO,CACLW,KAAMnB,EACNN,KAAMY,EACNc,QAASZ,ICtCTE,MD0C2B,SAACA,GAC9B,MAAO,CACLS,KAAMlB,EACNP,KAAMY,EACNc,QAASV,MCrDO,cASjBL,EAAW,CACVa,QDO8B,SAACV,GACjC,MAAO,CACLW,KAAMnB,EACNN,KAAMW,EACNe,QAASZ,ICVTE,MDc4B,SAACA,GAC/B,MAAO,CACLS,KAAMlB,EACNP,KAAMW,EACNe,QAASV,MC7BO,GAiBb,SAAUK,GAAV,gFAEU,OAFgBK,EAA1B,EAA0BA,QAAS1B,EAAnC,EAAmCA,KAAnC,kBAEgB2B,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIR,EAAevB,GAAqCwB,QAAQM,EAAOE,QAAQC,MAAM,EANzE,KAEf,0DAMHF,YAAIR,EAAevB,GAAqCgB,MAApD,OAND,sDAUA,SAAUM,KAAV,iEACL,OADK,SACCY,YAAU1B,EAAsBa,IADjC,uCC3CA,I,GCQFvB,G,oBCUCqC,IAAc,qBACjB7D,EAAU4B,yBAA2B,CACpCkC,SFpBsB,SAAC,GAAD,SAAGC,MAAuBnB,WAAWJ,QEqB3DwB,OJIkC,SAACC,GACrC,MAAO,CACLd,KAAMjB,EACNR,KAAMU,EACNgB,QAASa,MIXO,eAKjBjE,EAAU6B,sBAAwB,CACjCiC,SFvBoB,SAAC,GAAD,SAAGC,MAAuBlB,SAASL,QEwBvDwB,OJwBgC,SAACC,GACnC,MAAO,CACLd,KAAMjB,EACNR,KAAMW,EACNe,QAASa,MInCO,eASjBjE,EAAU8B,qBAAuB,CAChCgC,SF1BmB,SAAC,GAAD,SAAGC,MAAuBjB,QAAQN,QE2BrDwB,OJ4C+B,SAACC,GAClC,MAAO,CACLd,KAAMjB,EACNR,KAAMY,EACNc,QAASa,MI3DO,IAePC,GAAuB,WAClC,IAAMC,EAAWC,cACTC,EAASC,cAATD,KACF7B,EAAS+B,YAAYV,GAAeQ,GAAMP,UAC1CU,EAAW7E,IAAK6E,SAChBC,ETtCkB,SAACD,EAAkBH,GAAnB,mDACcA,EADd,oBAC8BK,mCAD9B,qBACwEF,EADxE,WSsCXG,CAAWH,EAAUH,GAC5BhE,EAAUC,cAYhB,OAVAsE,qBAAU,WACc,IAAlBpC,EAAOqC,QACTV,EAASN,GAAeQ,GAAML,OAAOS,MAEtC,CAACJ,EAAMF,EAAU3B,EAAOqC,OAAQJ,IAEnCG,qBAAU,WACRT,EJkCK,CACLhB,KAAMhB,MIlCL,CAACqC,EAAUL,IAGZ,cAACW,GAAA,EAAD,UACGtC,EAAO5B,KAAI,gBAAGmE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,cAACC,GAAA,EAAD,CAAmBlE,QAAS,kBAAMV,EAAQW,KAAR,yBAA+BgE,KAAjE,SACGD,GADYC,SCtDVE,GAA4B,4BAC5BC,GAA0B,0BAC1BC,GAA8B,8BAE9BC,GAAyB,SAACC,GACrC,MAAO,CACLnC,KAAM+B,GACN9B,QAASkC,IFLAC,GAA2B,CACtCD,QAAS,GACT7C,OAAQ,KACRC,MAAO,O,SAGJlB,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,I,YGTUgE,I,YAUAC,IAVV,SAAUD,GAAV,8EAEU,OAFsBpC,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAI4B,GAAuB7B,IAJ9B,0DAMHC,aDAiCf,ECAR,EAAD,GDCnB,CACLS,KAAMgC,GACN/B,QAASV,KCTN,kCDM6B,IAACA,ICN9B,kBAUA,SAAU+C,KAAV,iEACL,OADK,SACC7B,YAAUwB,GAA6BI,IADxC,wCCfA,IAAMF,GAAU,SAAC,GAAD,SAAGI,aAAqCJ,SCGlDrG,GAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CE,MAAO,MACP,QAAS,CACPA,MAAO,QACPoH,OAAQ,W,UCJCC,GAAYvH,YAAOwH,KAAPxH,CAAY,CACnCE,MAAO,UCCIuH,GAAsC,SAAC,GAO7C,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,OACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEQjG,EAAMC,cAAND,EACFkG,EAAaL,EAAOpF,KAAI,SAAC0F,GAAD,OAAWA,EAAM5E,QAAM6E,KAAK,MACpDC,EAAgBP,EAAqBrF,KAAI,SAAC6F,GAAD,OAAaA,EAAQ/E,QAAM6E,KAAK,MACzEG,EAAa,CACjB,CACEhF,KAAMvB,EAAE,uBACRwG,MAAOT,GAET,CACExE,KAAMvB,EAAE,mBACRwG,MAAOP,GAET,CACE1E,KAAMvB,EAAE,iBACRwG,MAAON,GAET,CACE3E,KAAMvB,EAAE,mBACRwG,MAAOH,GAET,CACE9E,KAAMvB,EAAE,kBACRwG,MAAOZ,GAET,CACErE,KAAMvB,EAAE,mBACRwG,MAAOR,IAIX,OACE,8BACGO,EAAW9F,KAAI,gBAAGc,EAAH,EAAGA,KAAMiF,EAAT,EAASA,MAAT,OACd,eAACf,GAAD,CAAWzG,QAAQ,OAAOC,eAAe,gBAAzC,UACE,4BAAIsC,IACJ,4BAAIiF,MAFwDjF,SCnCzDkF,GAAyB,WACpC,IAAMzC,EAAWC,cACjB,EACEG,YAAYe,IADNP,EAAR,EAAQA,MAAO8B,EAAf,EAAeA,YAAad,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OAAQc,EAA5C,EAA4CA,SAAUb,EAAtD,EAAsDA,qBAAsBC,EAA5E,EAA4EA,aAAcC,EAA1F,EAA0FA,QAASC,EAAnG,EAAmGA,QAG7F5B,EAAW7E,IAAK6E,SACdrE,EAAMC,cAAND,EACA6E,EAAOV,cAAPU,GACFP,EhBR0B,SAACD,EAAkBQ,GAAnB,mDACMA,EADN,oBACoBN,mCADpB,qBAC8DF,GgBOjFuC,CAAmBvC,EAAUwC,OAAOhC,IAC3CiC,EhBJoB,SAACxC,GAAD,gDAA6DA,GgBIrEyC,CAAaL,GAM/B,OAJAjC,qBAAU,WACRT,ENJK,CACLhB,KAAMiC,GACNhC,QMEkCqB,MACjC,CAACN,EAAUM,IAGZ,eAAC,GAAD,WACE,6BAAKM,IACL,eAACc,GAAA,EAAD,CAAK1G,QAAQ,OAAOC,eAAe,eAAnC,UACE,qBAAK+H,IAAKF,EAAWG,IAAI,aACxBN,GACC,cAAC,GAAD,CACEf,OAAQA,EACRC,OAAQA,EACRC,qBAAsBA,EACtBC,aAAcA,EACdC,QAASA,EACTC,QAASA,OAIf,6BAAKjG,EAAE,sBACP,4BAAI2G,QCxCG7H,GAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CI,WAAY,2BACZK,MAAO,QACPD,WAAY,OACZwI,UAAW,SACX9I,MAAO,MACPoH,OAAQ,OACR2B,WAAY,a,SCkBCC,GApBH,WACV,IAAQpH,EAAMC,cAAND,EAER,OACE,cAAC,KAAD,UACE,eAAC,GAAD,CAAiBqH,UAAU,EAA3B,UACE,6BAAKrH,EAAE,WACP,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsE,KAAK,aAAagD,UAAW1F,IACpC,cAAC,IAAD,CAAO0C,KAAK,qBAAqBgD,UAAWb,QAE9C,cAAC,IAAD,UACE,cAAC,IAAD,CAAOnC,KAAK,mBAAmBiD,OAAK,EAACD,UAAWvD,a,kBClB7CyD,GAAe,CAC1BhF,oBACA4C,6BCDaqC,gBAAgB,CAC7B7D,MjBemB,WAA6C,IAA5C8D,EAA2C,uDAAnClF,EAAmBqB,EAAgB,uCAC/D,OAAQA,EAAOb,MACb,KAAKjB,EACH,OAAO,2BACF2F,GADL,kBAEG7D,EAAOtC,KAAO,CACbc,OAAQ,GACRC,OAAQjB,EAAOsG,UACfpF,MAAO,QAIb,KAAKV,EACH,OAAO,2BACF6F,GADL,kBAEG7D,EAAOtC,KAAO,CACbc,OAAQwB,EAAOZ,QACfX,OAAQjB,EAAOuG,QACfrF,MAAO,QAIb,KAAKT,EACH,OAAO,2BACF4F,GADL,kBAEG7D,EAAOtC,KAAO,CACbc,OAAQ,GACRC,OAAQjB,EAAOwG,MACftF,MAAOsB,EAAOZ,WAIpB,KAAKjB,EACH,OAAO,eACFQ,GAGP,QACE,OAAO,eACFkF,KiBrDTnC,aZQ0B,WAAoD,IAAnDmC,EAAkD,uDAA1CtC,GAA0BvB,EAAgB,uCAC7E,OAAQA,EAAOb,MACb,KAAKiC,GACH,OAAO,2BACFyC,GADL,IAEEpF,OAAQjB,GAAOsG,YAGnB,KAAK5C,GACH,OAAO,2BACF2C,GADL,IAEEvC,QAAStB,EAAOZ,QAChBX,OAAQjB,GAAOuG,UAGnB,KAAK5C,GACH,OAAO,2BACF0C,GADL,IAEEpF,OAAQjB,GAAOwG,MACftF,MAAOsB,EAAOZ,UAGlB,QACE,OAAO,eACFyE,O,YalCcI,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CAAClF,KAAmByC,OADjB,wCCEf,IAAM0C,GAAiBC,eAEjBC,GAAmBC,aAAQC,aAAgBJ,IAAkBK,OAAeC,gCAEnEC,gBAAYC,GAAahB,GAAcU,IAEtDF,GAAeS,IAAIX,ICPnBY,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ffe6af21.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '80%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n","export const getListUrl = (language: string, list: string): string =>\n  `https://api.themoviedb.org/3/movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//details\n\nexport const getMovieDetailsUrl = (language: string, id: number): string =>\n  `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//poster\n\nexport const getPosterUrl = (path: string): string => `https://image.tmdb.org/t/p/w500/${path}`;\n","import React from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory } from 'react-router-dom';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <StyledContainer>\n      <StyledAppBar position=\"static\">\n        <Tabs aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n});\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import { GET_MOVIE_DETAILS_SUCCESS, GET_MOVIE_DETAILS_REQUESTED, GET_MOVIE_DETAILS_ERROR } from './actions';\n\nexport const initialMovieDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movieDetails = (state = initialMovieDetailsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIE_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_MOVIE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_MOVIE_DETAILS_ERROR:\n      return {\n        ...state,\n        status: Status.Error,\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: ListItemData) => (\n        <ListItem key={id} onClick={() => history.push(`/movie-details/${id}`)}>\n          {title}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","export const GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\nexport const GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\nexport const GET_MOVIE_DETAILS_REQUESTED = 'GET_MOVIE_DETAILS_REQUESTED';\n\nexport const getMovieDetailsSuccess = (details: {}) => {\n  return {\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: details,\n  };\n};\n\nexport const getMovieDetailsError = (error: Error) => {\n  return {\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getMovieDetailsRequested = (url: string) => {\n  return {\n    type: GET_MOVIE_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport { getMovieDetailsError, getMovieDetailsSuccess, GET_MOVIE_DETAILS_REQUESTED } from './actions';\n\nexport function* getMovieDetailsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getMovieDetailsSuccess(result));\n  } catch (error) {\n    put(getMovieDetailsError(error));\n  }\n}\n\nexport function* watchMovieDetailsSaga() {\n  yield takeEvery(GET_MOVIE_DETAILS_REQUESTED, getMovieDetailsSaga);\n}\n","export const details = ({ movieDetails }: any) => movieDetails.details;\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  width: '70%',\n  '& img': {\n    width: '300px',\n    height: '420px',\n  },\n});\n","import { Box } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledBox = styled(Box)({\n  width: '300px',\n});\n","import React from 'react';\nimport { MovieInfoProps } from '../types';\nimport { StyledBox } from './styles';\nimport { useTranslation } from 'react-i18next';\n\nexport const MovieInfo: React.FC<MovieInfoProps> = ({\n  budget,\n  genres,\n  production_countries,\n  release_date,\n  revenue,\n  tagline,\n}) => {\n  const { t } = useTranslation();\n  const genresLine = genres.map((genre) => genre.name).join(', ');\n  const countriesLine = production_countries.map((country) => country.name).join(', ');\n  const renderData = [\n    {\n      name: t('details.releaseDate'),\n      value: release_date,\n    },\n    {\n      name: t('details.tagline'),\n      value: tagline,\n    },\n    {\n      name: t('details.genre'),\n      value: genresLine,\n    },\n    {\n      name: t('details.country'),\n      value: countriesLine,\n    },\n    {\n      name: t('details.budget'),\n      value: budget,\n    },\n    {\n      name: t('details.revenue'),\n      value: revenue,\n    },\n  ];\n\n  return (\n    <div>\n      {renderData.map(({ name, value }) => (\n        <StyledBox display=\"flex\" justifyContent=\"space-between\" key={name}>\n          <p>{name}</p>\n          <p>{value}</p>\n        </StyledBox>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { details, getMovieDetailsRequested } from './store';\nimport { getMovieDetailsUrl, getPosterUrl } from '../../API';\nimport { StyledContainer } from './styles';\nimport { Box } from '@material-ui/core';\nimport { MovieInfo } from './';\n\nexport const MovieDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const { title, poster_path, budget, genres, overview, production_countries, release_date, revenue, tagline } =\n    useSelector(details);\n\n  const language = i18n.language;\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const path = getMovieDetailsUrl(language, Number(id));\n  const posterSrc = getPosterUrl(poster_path);\n\n  useEffect(() => {\n    dispatch(getMovieDetailsRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <StyledContainer>\n      <h2>{title}</h2>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <img src={posterSrc} alt=\"Alt text\" />\n        {overview && (\n          <MovieInfo\n            budget={budget}\n            genres={genres}\n            production_countries={production_countries}\n            release_date={release_date}\n            revenue={revenue}\n            tagline={tagline}\n          />\n        )}\n      </Box>\n      <h3>{t('details.overview')}</h3>\n      <p>{overview}</p>\n    </StyledContainer>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(204, 204, 204, 0.4)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  height: '100%',\n  fontFamily: 'fangsong',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { MovieDetails } from './components/MovieDetails/MovieDetails';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <NavBar />\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movie-details/:id\" component={MovieDetails} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMovieDetailsState } from '../components/MovieDetails/store';\n\nexport const initialState = {\n  initialListsState,\n  initialMovieDetailsState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movieDetails } from '../components/MovieDetails/store';\n\nexport default combineReducers({\n  lists,\n  movieDetails,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchMovieDetailsSaga } from '../components/MovieDetails/store';\n\nexport default function* rootSaga() {\n  yield all([watchMoviesSaga(), watchMovieDetailsSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(applyMiddleware(sagaMiddleware), (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}