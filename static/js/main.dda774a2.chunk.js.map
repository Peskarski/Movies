{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/store/reducer.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/Dashboard/MoviesList/MoviesList.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/reducer.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/Movies/Filters/Filters.tsx","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","ListNames","navTabs","NavBar","t","useTranslation","history","useHistory","position","Tabs","aria-label","centered","variant","map","tab","label","onClick","push","String","Math","random","ButtonGroup","Object","values","changeLanguage","Status","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","status","error","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","type","payload","fetch","data","json","result","put","results","slice","takeEvery","listsStoreData","selector","lists","action","url","MoviesList","dispatch","useDispatch","list","useParams","useSelector","language","path","process","getListUrl","useEffect","length","List","title","id","ListItem","StyledSelect","Select","marginTop","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","getGenresSuccess","genres","initialMoviesState","genresList","filteredMovies","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","Filters","getGenresUrl","useState","genre","setGenre","startDate","setStartDate","endDate","setEndDate","toApplyFilter","setToApplyFilter","FormControl","InputLabel","labelId","value","onChange","e","target","handleGenreChange","MenuItem","TextField","InputLabelProps","shrink","FilteredMoviesList","getMoviesUrl","textAlign","height","fontFamily","minWidth","App","maxWidth","component","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"qHAKYA,E,qECCCC,EAAeC,YAAOC,IAAPD,CAAe,CACzCE,MAAO,MACPC,OAAQ,OACRC,WAAY,sBAGDC,EAAYL,YAAOM,IAAPN,CAAY,CACnCO,SAAU,OACVC,WAAY,OACZC,MAAO,UAGIC,EAAeV,YAAOW,IAAPX,CAAe,CACzCE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDQ,EAAkBZ,YAAOa,IAAPb,CAAkB,CAC/Cc,QAAS,OACTC,eAAgB,kB,6EDvBNjB,K,QAAAA,E,SAAAA,M,KAKL,IAAMkB,GAAS,mBACnBlB,EAASmB,GAAK,CACbC,YAAaC,IAFK,cAInBrB,EAASsB,GAAK,CACbF,YAAaG,IALK,GAStBC,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BC,IAAK5B,EAASmB,GACdD,c,IEjBUW,E,eCKNC,EAAoB,CAAC,mBAAoB,gBAAiB,sBAEnDC,EAAmB,WAC9B,IAAQC,EAAMC,cAAND,EACFE,EAAUC,cAEhB,OACE,eAACrB,EAAD,WACE,cAACb,EAAD,CAAcmC,SAAS,SAAvB,SACE,cAACC,EAAA,EAAD,CAAMC,aAAW,sBAAsBC,UAAQ,EAACC,QAAQ,YAAxD,SACGV,EAAQW,KAAI,SAACC,GAAD,OACX,cAACnC,EAAD,CACEoC,MAAOX,EAAEU,GAETE,QAAS,kBAAMV,EAAQW,KAAR,WAAiBb,EAAEU,EAAK,CAAEd,IAAK,OAA/B,QADVkB,OAAOC,KAAKC,kBAMzB,cAACC,EAAA,EAAD,CAAaT,QAAQ,YAAYF,aAAW,iCAA5C,SACGY,OAAOC,OAAOnD,GAAUyC,KAAI,SAACb,GAAD,OAC3B,cAAChB,EAAD,CAA0CgC,QAAS,kBAAMpB,IAAK4B,eAAexB,IAA7E,SACGA,GADgBkB,OAAOC,KAAKC,oBC1B5BpC,EAAeV,YAAOW,IAAPX,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPL,WAAY,oBACZD,OAAQ,MACR,UAAW,CACTC,WAAY,WAIHQ,EAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CE,MAAO,S,SFZGyB,K,uCAAAA,E,iCAAAA,E,gCAAAA,M,KAOL,IGGFwB,ECRCC,EAA6D,CACjE,CAAEC,KAAM,uBAAwBC,aAAc3B,EAAU4B,0BACxD,CAAEF,KAAM,qBAAsBC,aAAc3B,EAAU6B,uBACtD,CAAEH,KAAM,oBAAqBC,aAAc3B,EAAU8B,uBAG1CC,EAAsB,WACjC,IAAM1B,EAAUC,cACRH,EAAMC,cAAND,EAER,OACE,mCACE,cAAC,EAAD,UACGsB,EAAiBb,KAAI,gBAAGc,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACpB,cAAC,EAAD,CAAyBZ,QAAS,kBAAMV,EAAQW,KAAKW,IAArD,SACGxB,EAAEuB,IADcA,W,QCpBhBM,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAuB,uBACvBC,EAA2B,2BAE3BC,EAAc,aACdC,EAAW,WACXC,EAAU,U,QFLjBC,EAAa,CACjBC,OAAQ,GACRC,OAAQ,KACRC,MAAO,MAGIC,EAAoB,CAC/BC,WAAYL,EACZM,SAAUN,EACVO,QAASP,I,SAGNf,K,sBAAAA,E,kBAAAA,E,eAAAA,M,KAME,I,sCGaUuB,I,WAUAC,IA3BXC,GAAc,mBACjBb,EAAc,CACbc,QDTgC,SAACV,GACnC,MAAO,CACLW,KAAMnB,EACNN,KAAMU,EACNgB,QAASZ,ICMTE,MDF8B,SAACA,GACjC,MAAO,CACLS,KAAMlB,EACNP,KAAMU,EACNgB,QAASV,MCLO,cAKjBJ,EAAU,CACTY,QDmC6B,SAACV,GAChC,MAAO,CACLW,KAAMnB,EACNN,KAAMY,EACNc,QAASZ,ICtCTE,MD0C2B,SAACA,GAC9B,MAAO,CACLS,KAAMlB,EACNP,KAAMY,EACNc,QAASV,MCrDO,cASjBL,EAAW,CACVa,QDO8B,SAACV,GACjC,MAAO,CACLW,KAAMnB,EACNN,KAAMW,EACNe,QAASZ,ICVTE,MDc4B,SAACA,GAC/B,MAAO,CACLS,KAAMlB,EACNP,KAAMW,EACNe,QAASV,MC7BO,GAiBb,SAAUK,GAAV,gFAEU,OAFgBK,EAA1B,EAA0BA,QAAS1B,EAAnC,EAAmCA,KAAnC,kBAEgB2B,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIR,EAAevB,GAAqCwB,QAAQM,EAAOE,QAAQC,MAAM,EANzE,KAEf,0DAMHF,YAAIR,EAAevB,GAAqCgB,MAApD,OAND,sDAUA,SAAUM,KAAV,iEACL,OADK,SACCY,YAAU1B,EAAsBa,IADjC,uCC3CA,I,uBCkBDc,IAAc,qBACjB7D,EAAU4B,yBAA2B,CACpCkC,SDpBsB,SAAC,GAAD,SAAGC,MAAuBnB,WAAWJ,QCqB3DwB,OHIkC,SAACC,GACrC,MAAO,CACLd,KAAMjB,EACNR,KAAMU,EACNgB,QAASa,MGXO,eAKjBjE,EAAU6B,sBAAwB,CACjCiC,SDvBoB,SAAC,GAAD,SAAGC,MAAuBlB,SAASL,QCwBvDwB,OHwBgC,SAACC,GACnC,MAAO,CACLd,KAAMjB,EACNR,KAAMW,EACNe,QAASa,MGnCO,eASjBjE,EAAU8B,qBAAuB,CAChCgC,SD1BmB,SAAC,GAAD,SAAGC,MAAuBjB,QAAQN,QC2BrDwB,OH4C+B,SAACC,GAClC,MAAO,CACLd,KAAMjB,EACNR,KAAMY,EACNc,QAASa,MG3DO,IAePC,GAAuB,WAClC,IAAMC,EAAWC,cACTC,EAASC,cAATD,KACF7B,EAAS+B,YAAYV,GAAeQ,GAAMP,UAC1CU,EAAW7E,IAAK6E,SAChBC,ERrCkB,SAACD,EAAkBH,GAAnB,mDACcA,EADd,oBAC8BK,mCAD9B,qBACwEF,EADxE,WQqCXG,CAAWH,EAAUH,GAYlC,OAVAO,qBAAU,WACc,IAAlBpC,EAAOqC,QACTV,EAASN,GAAeQ,GAAML,OAAOS,MAEtC,CAACJ,EAAMF,EAAU3B,EAAOqC,OAAQJ,IAEnCG,qBAAU,WACRT,EHmCK,CACLhB,KAAMhB,MGnCL,CAACqC,EAAUL,IAGZ,cAACW,GAAA,EAAD,UACGtC,EAAO5B,KAAI,gBAAGmE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,cAACC,GAAA,EAAD,UAAoBF,GAALC,S,2DClDVE,GAAe7G,YAAO8G,KAAP9G,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPN,OAAQ,QAGGS,GAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CE,MAAO,MACPY,QAAS,OACTC,eAAgB,eAChBgG,UAAW,QCdAC,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA8B,8BAC9BC,GAA4B,4BAC5BC,GAAgC,gCAEhCC,GAAmB,SAACC,GAC/B,MAAO,CACLzC,KAAMkC,GACNjC,QAASwC,ICDAC,GAAqB,CAChCD,OAAQ,CACNE,WAAY,GACZrD,OAAQ,KACRC,MAAO,MAETqD,eAAgB,CACdvD,OAAQ,GACRC,OAAQ,KACRC,MAAO,O,YCPMsD,I,YAUAC,I,YAIAC,I,YAUAC,IAxBV,SAAUH,GAAV,8EAEU,OAFgB5C,EAA1B,EAA0BA,QAA1B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIkC,GAAiBnC,EAAOoC,SAJ/B,0DAMHnC,aFH2Bf,EEGR,EAAD,GFFb,CACLS,KAAMmC,GACNlC,QAASV,KENN,kCFGuB,IAACA,IEHxB,kBAUA,SAAUuD,KAAV,iEACL,OADK,SACCrC,YAAU2B,GAAsBS,IADjC,wCAIA,SAAUE,GAAV,8EAEU,OAFwB9C,EAAlC,EAAkCA,QAAlC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aFD+BjB,EECFgB,EAAOE,QFArC,CACLP,KAAMqC,GACNpC,QAASZ,KENN,0DAMHiB,aFImCf,EEJR,EAAD,GFKrB,CACLS,KAAMsC,GACNrC,QAASV,KEbN,kCFU+B,IAACA,EAPEF,IEHlC,kBAUA,SAAU2D,KAAV,iEACL,OADK,SACCvC,YAAU8B,GAA+BQ,IAD1C,wCCnCA,IAAMN,GAAS,SAAC,GAAD,SAAGpD,OAAyBoD,OAAOE,YAC5CC,GAAiB,SAAC,GAAD,SAAGvD,OAAyBuD,eAAevD,QCY5D4D,GAAoB,WAC/B,IACM3B,EdJoB,SAACD,GAAD,sEAC+BE,mCAD/B,qBACyEF,GcGtF6B,CADI1G,IAAK6E,UAEhBL,EAAWC,cACTjE,EAAMC,cAAND,EACF2F,EAAavB,YAAYqB,IAE/B,EAA0BU,mBATA,IAS1B,oBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAAS,IAAvC,oBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0CN,oBAAS,GAAnD,oBAAOO,EAAP,KAAsBC,EAAtB,KAsBA,OAJAlC,qBAAU,WACRT,EJpBK,CACLhB,KAAMoC,GACNnC,QIkB4BqB,MAC3B,CAACN,EAAUM,IAGZ,gCACE,eAAC,GAAD,WACE,eAACsC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYhC,GAAG,2BAAf,SAA2C7E,EAAE,mBAC7C,cAAC+E,GAAD,CACE+B,QAAQ,2BACRC,MAAOX,EACPY,SAAU,SAACC,GAAD,OA5BM,SAACA,GACzB,IAAMC,EAASD,EAAEC,OACjBb,EAASa,EAAOH,OAChBJ,GAAiB,GAyBQQ,CAAkBF,IAHrC,SAKGtB,EAAWlF,KAAI,gBAAGc,EAAH,EAAGA,KAAMsD,EAAT,EAASA,GAAT,OACd,cAACuC,GAAA,EAAD,CAAmBL,MAAOlC,EAA1B,SACGtD,GADYsD,WAMrB,cAACwC,GAAA,EAAD,CACE1G,MAAOX,EAAE,qBACTgD,KAAK,OACLsE,gBAAiB,CACfC,QAAQ,GAEVP,SArCsB,SAACC,GAC7BV,EAAaU,EAAEC,OAAOH,OACtBJ,GAAiB,IAoCXI,MAAOT,IAET,cAACe,GAAA,EAAD,CACE1G,MAAOX,EAAE,mBACTgD,KAAK,OACLsE,gBAAiB,CACfC,QAAQ,GAEVP,SAzCoB,SAACC,GAC3BR,EAAWQ,EAAEC,OAAOH,OACpBJ,GAAiB,IAwCXI,MAAOP,IAET,cAAC,EAAD,CAAc5F,QAAS,kBAAM+F,GAAiB,IAA9C,SAAsD3G,EAAE,sBAEzD0G,GAAiB,cAAC,GAAD,CAAoBN,MAAOA,EAAOE,UAAWA,EAAWE,QAASA,QCzE5EgB,GAAwD,SAAC,GAAmC,IAAjCpB,EAAgC,EAAhCA,MAAOE,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,QAClFxC,EAAWC,cACX5B,EAAS+B,YAAYwB,IAErBtB,EfEoB,SAACD,EAAkB+B,EAAeE,EAAmBE,GAArD,oEAC6BjC,mCAD7B,qBACuEF,EADvE,wFAC+J+B,EAD/J,qCACiME,EADjM,qCACuOE,EADvO,2CeFbiB,CADDjI,IAAK6E,SACc+B,EAAOE,EAAWE,GAMjD,OAJA/B,qBAAU,WACRT,EL2BK,CACLhB,KAAMuC,GACNtC,QK7BoCqB,MACnC,CAAC8B,EAAOpC,EAAUM,IAGnB,cAACK,GAAA,EAAD,UACGtC,EAAO5B,KAAI,gBAAGmE,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,cAACC,GAAA,EAAD,UAAoBF,GAALC,SCnBV/F,GAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CI,WAAY,wBACZK,MAAO,QACPD,WAAY,OACZgJ,UAAW,SACXtJ,MAAO,MACPuJ,OAAQ,QACRC,WAAY,aACZC,SAAU,W,SCiBGC,GApBH,WACV,IAAQ9H,EAAMC,cAAND,EAER,OACE,cAAC,KAAD,UACE,eAAC,GAAD,CAAiB+H,UAAU,EAA3B,UACE,6BAAK/H,EAAE,WACP,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsE,KAAK,aAAa0D,UAAWpG,IACpC,cAAC,IAAD,CAAO0C,KAAK,UAAU0D,UAAW/B,QAEnC,cAAC,IAAD,UACE,cAAC,IAAD,CAAO3B,KAAK,mBAAmB2D,OAAK,EAACD,UAAWjE,a,kBClB7CmE,GAAe,CAC1B1F,oBACAkD,uBCDayC,gBAAgB,CAC7BvE,MhBemB,WAA6C,IAA5CwE,EAA2C,uDAAnC5F,EAAmBqB,EAAgB,uCAC/D,OAAQA,EAAOb,MACb,KAAKjB,EACH,OAAO,2BACFqG,GADL,kBAEGvE,EAAOtC,KAAO,CACbc,OAAQ,GACRC,OAAQjB,EAAOgH,UACf9F,MAAO,QAIb,KAAKV,EACH,OAAO,2BACFuG,GADL,kBAEGvE,EAAOtC,KAAO,CACbc,OAAQwB,EAAOZ,QACfX,OAAQjB,EAAOiH,QACf/F,MAAO,QAIb,KAAKT,EACH,OAAO,2BACFsG,GADL,kBAEGvE,EAAOtC,KAAO,CACbc,OAAQ,GACRC,OAAQjB,EAAOkH,MACfhG,MAAOsB,EAAOZ,WAIpB,KAAKjB,EACH,OAAO,eACFQ,GAGP,QACE,OAAO,eACF4F,KgBrDT/F,ORgBoB,WAA8C,IAA7C+F,EAA4C,uDAApC1C,GAAoB7B,EAAgB,uCACjE,OAAQA,EAAOb,MACb,KAAKoC,GACH,OAAO,2BACFgD,GADL,IAEE3C,OAAQ,CACNE,WAAY,GACZrD,OAAQ,YACRC,MAAO,QAIb,KAAK2C,GACH,OAAO,2BACFkD,GADL,IAEE3C,OAAQ,CACNE,WAAY9B,EAAOZ,QACnBX,OAAQ,UACRC,MAAO,QAIb,KAAK4C,GACH,OAAO,2BACFiD,GADL,IAEE3C,OAAQ,CACNE,WAAY,GACZrD,OAAQ,QACRC,MAAOsB,EAAOZ,WAIpB,KAAKsC,GACH,OAAO,2BACF6C,GADL,IAEExC,eAAgB,CACdvD,OAAQ,GACRC,OAAQ,YACRC,MAAO,QAIb,KAAK8C,GACH,OAAO,2BACF+C,GADL,IAEExC,eAAgB,CACdvD,OAAQwB,EAAOZ,QACfX,OAAQ,UACRC,MAAO,QAIb,KAAK+C,GACH,OAAO,2BACF8C,GADL,IAEExC,eAAgB,CACdvD,OAAQ,GACRC,OAAQ,QACRC,MAAOsB,EAAOZ,WAIpB,QACE,OAAO,eACFmF,O,YSlFcI,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CAAC5F,KAAmBiD,KAAmBE,OADpC,wCCEf,IAAM0C,GAAiBC,eAEjBC,GAAmBC,aAAQC,aAAgBJ,IAAkBK,OAAeC,gCAEnEC,gBAAYC,GAAahB,GAAcU,IAEtDF,GAAeS,IAAIX,ICPnBY,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.dda774a2.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '80%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n","//lists\nexport const getListUrl = (language: string, list: ListNames): string =>\n  `https://api.themoviedb.org/3/movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//genres\nexport const getGenresUrl = (language: string): string =>\n  `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//movies\nexport const getMoviesUrl = (language: string, genre: string, startDate: string, endDate: string): string =>\n  `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}&with_watch_monetization_types=flatrate`;\n","import React from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory } from 'react-router-dom';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  return (\n    <StyledContainer>\n      <StyledAppBar position=\"static\">\n        <Tabs aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n});\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: ListItemData) => (\n        <ListItem key={id}>{title}</ListItem>\n      ))}\n    </List>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '75%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'ADD_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'ADD_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'ADD_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'ADD_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'ADD_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'ADD_FILTERED_MOVIES_REQUESTED';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n} from './actions';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n  },\n};\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: 'requested',\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: 'success',\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: 'error',\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: 'requested',\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: 'success',\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: 'error',\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n} from './actions';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl } from '../../../API';\nimport i18n from 'i18next';\nimport { getGenresRequested, genres } from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilteredMoviesList, FilterItemData } from '../';\n\nconst DEFAULT_GENRE_VALUE = '';\n\nexport const Filters: React.FC = () => {\n  const language = i18n.language;\n  const path = getGenresUrl(language);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n\n  const [genre, setGenre] = useState(DEFAULT_GENRE_VALUE);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [toApplyFilter, setToApplyFilter] = useState(false);\n\n  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n    setToApplyFilter(false);\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setStartDate(e.target.value);\n    setToApplyFilter(false);\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setEndDate(e.target.value);\n    setToApplyFilter(false);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <StyledContainer>\n        <FormControl>\n          <InputLabel id=\"demo-simple-select-label\">{t('filters.genre')}</InputLabel>\n          <StyledSelect\n            labelId=\"demo-simple-select-label\"\n            value={genre}\n            onChange={(e) => handleGenreChange(e as React.ChangeEvent<HTMLSelectElement>)}\n          >\n            {genresList.map(({ name, id }: FilterItemData) => (\n              <MenuItem key={id} value={id}>\n                {name}\n              </MenuItem>\n            ))}\n          </StyledSelect>\n        </FormControl>\n        <TextField\n          label={t('filters.startDate')}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={handleStartDateChange}\n          value={startDate}\n        />\n        <TextField\n          label={t('filters.endDate')}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={handleEndDateChange}\n          value={endDate}\n        />\n        <StyledButton onClick={() => setToApplyFilter(true)}>{t('filters.apply')}</StyledButton>\n      </StyledContainer>\n      {toApplyFilter && <FilteredMoviesList genre={genre} startDate={startDate} endDate={endDate} />}\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested, filteredMovies } from '../store';\nimport { getMoviesUrl } from '../../../API';\nimport { FilteredMoviesListProps } from '../';\n\nexport const FilteredMoviesList: React.FC<FilteredMoviesListProps> = ({ genre, startDate, endDate }) => {\n  const dispatch = useDispatch();\n  const movies = useSelector(filteredMovies);\n  const lng = i18n.language;\n  const path = getMoviesUrl(lng, genre, startDate, endDate);\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [genre, dispatch, path]);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: any) => (\n        <ListItem key={id}>{title}</ListItem>\n      ))}\n    </List>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(56, 50, 50, 0.6)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  height: '800px',\n  fontFamily: 'sans-serif',\n  minWidth: '1000px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { Filters } from './components/Movies';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <NavBar />\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movies\" component={Filters} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\n\nexport const initialState = {\n  initialListsState,\n  initialMoviesState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchGenresSaga, watchFilteredMoviesSaga } from '../components/Movies/store';\n\nexport default function* rootSaga() {\n  yield all([watchMoviesSaga(), watchGenresSaga(), watchFilteredMoviesSaga()]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(applyMiddleware(sagaMiddleware), (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}