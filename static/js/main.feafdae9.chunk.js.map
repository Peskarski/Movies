{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","components/LogIn/store/reducer.ts","components/LogIn/store/actions.ts","components/LogIn/store/sagas.ts","components/LogIn/store/selectors.ts","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/store/reducer.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/MovieDetails/store/reducer.ts","components/MovieCard/styles.js","components/MovieCard/MovieCard.tsx","components/Dashboard/MoviesList/MoviesList.tsx","components/MovieDetails/MovieInfo/styles.js","components/MovieDetails/MovieInfo/utils.ts","components/MovieDetails/MovieInfo/MovieInfo.tsx","components/MovieDetails/store/actions.ts","components/MovieDetails/store/sagas.ts","components/MovieDetails/store/selectors.ts","components/Movies/store/reducer.ts","components/MovieDetails/RecomendationsList/styles.js","components/MovieDetails/RecomendationsList/RecomendationsList.tsx","components/MovieDetails/styles.js","components/MovieDetails/MovieDetails.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/RandomMovie/store/reducer.ts","components/Movies/Filters/Filters.tsx","components/Movies/FilteredMoviesList/styles.js","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","components/Movies/Pagination/styles.js","components/Movies/Pagination/MoviesPagination.tsx","components/Movies/Movies.tsx","components/RandomMovie/store/actions.ts","components/RandomMovie/utils.ts","components/RandomMovie/store/sagas.ts","components/RandomMovie/store/selectors.ts","components/RandomMovie/RandomMovie.tsx","components/LogIn/styles.js","components/LogIn/LogIn.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","StyledLogInButton","StyledPersonIcon","PersonIcon","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","Status","GET_REQUEST_TOKEN_SUCCESS","GET_REQUEST_TOKEN_ERROR","GET_REQUEST_TOKEN_REQUESTED","GET_SESSION_ID_SUCCESS","GET_SESSION_ID_ERROR","GET_SESSION_ID_REQUESTED","initialLogInState","requestToken","tokenDetails","status","error","sessionID","getRequestTokenSaga","watchRequestTokenSaga","getSessionIDSaga","watchSessionIDSaga","payload","fetch","data","json","result","put","type","takeEvery","url","method","body","ListNames","logIn","request_token","session_id","navTabs","NavBar","t","useTranslation","history","useHistory","location","useLocation","useState","value","setValue","isUserLoggedIn","useSelector","useEffect","window","scrollTo","onClick","push","position","Tabs","aria-label","centered","variant","onChange","e","newValue","TabIndicatorProps","style","map","tab","label","String","Math","random","ButtonGroup","Object","values","changeLanguage","flexWrap","StyledList","List","flexDirection","alignItems","BASE_URL","getMoviesUrl","language","genre","startDate","endDate","page","process","getPosterUrl","path","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","results","slice","StyledCard","Card","maxHeight","backgroundColor","MovieCard","title","id","poster_path","posterSrc","CardActionArea","CardMedia","component","alt","image","CardContent","listsStoreData","selector","lists","action","MoviesList","dispatch","useDispatch","list","useParams","getListUrl","length","StyledBox","Box","textAlign","marginLeft","arrayToString","arr","item","join","numberToMoney","number","Number","toLocaleString","MovieInfo","budget","genres","production_countries","release_date","revenue","tagline","genresLine","countriesLine","renderData","className","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_ERROR","GET_MOVIE_DETAILS_REQUESTED","GET_RECOMENDATIONS_REQUESTED","GET_RECOMENDATIONS_SUCCESS","GET_RECOMENDATIONS_ERROR","getMovieDetailsSuccess","details","getRecomendationsSuccess","recomendations","initialMovieDetailsState","getMovieDetailsSaga","watchMovieDetailsSaga","getRecomendationsSaga","watchRecomendationsSaga","movieDetails","RecomendationsList","height","marginTop","MovieDetails","overview","detailsPath","getMovieDetailsUrl","recomendationsPath","getRecomendationsUrl","getRecomendationsRequested","src","StyledSelect","Select","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","GET_TOTAL_PAGES","initialMoviesState","genresList","filteredMovies","totalPages","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","total_pages","Filters","onAplied","getGenresUrl","setGenre","setStartDate","setEndDate","FormControl","InputLabel","labelId","target","handleGenreChange","MenuItem","TextField","InputLabelProps","shrink","FilteredMoviesList","StyledPagination","Pagination","border","MoviesPagination","changePage","pages","count","size","shape","Movies","setPage","GET_RANDOM_MOVIE_SUCCESS","GET_RANDOM_MOVIE_ERROR","GET_RANDOM_MOVIE_REQUESTED","getRandomMovieSuccess","movie","initialRandomMovieState","randomMovie","getRandomNumber","min","max","ceil","floor","getRandomMovieSaga","watchRandomMovieSaga","array","totalPagesForRandom","RandomMovie","getRandomPage","LogIn","token","requestTokenPath","permissionPath","getPermissionUrl","sessionIDPath","getSessionIDUrl","JSON","stringify","Link","href","minWidth","minHeight","fontFamily","App","maxWidth","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.feafdae9.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '75%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\nexport const StyledLogInButton = styled(Button)({\n  width: '80px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'white',\n  background: 'rgb(20, 19, 19)',\n  '&:hover': {\n    color: 'black',\n    background: 'rgb(227, 218, 218)',\n  },\n});\n\nexport const StyledPersonIcon = styled(PersonIcon)({\n  margin: 'auto 8px',\n  color: 'rgb(20, 19, 19)',\n});\n","import {\n  GET_REQUEST_TOKEN_ERROR,\n  GET_REQUEST_TOKEN_REQUESTED,\n  GET_REQUEST_TOKEN_SUCCESS,\n  GET_SESSION_ID_ERROR,\n  GET_SESSION_ID_REQUESTED,\n  GET_SESSION_ID_SUCCESS,\n} from './actions';\n\nexport const initialLogInState = {\n  requestToken: {\n    tokenDetails: {},\n    status: null,\n    error: null,\n  },\n  sessionID: {\n    tokenDetails: {},\n    status: null,\n    error: null,\n  },\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const logIn = (state = initialLogInState, action: any) => {\n  switch (action.type) {\n    case GET_REQUEST_TOKEN_REQUESTED:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_REQUEST_TOKEN_SUCCESS:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_REQUEST_TOKEN_ERROR:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_SESSION_ID_REQUESTED:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_SESSION_ID_SUCCESS:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_SESSION_ID_ERROR:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","export const GET_REQUEST_TOKEN_SUCCESS = 'GET_REQUEST_TOKEN_SUCCESS';\nexport const GET_REQUEST_TOKEN_ERROR = 'GET_REQUEST_TOKEN_ERROR';\nexport const GET_REQUEST_TOKEN_REQUESTED = 'GET_REQUEST_TOKEN_REQUESTED';\nexport const GET_SESSION_ID_SUCCESS = 'GET_SESSION_ID_SUCCESS';\nexport const GET_SESSION_ID_ERROR = 'GET_SESSION_ID_ERROR';\nexport const GET_SESSION_ID_REQUESTED = 'GET_SESSION_ID_REQUESTED';\n\nexport const getRequestTokenSuccess = (tokenDetails: {}) => {\n  return {\n    type: GET_REQUEST_TOKEN_SUCCESS,\n    payload: tokenDetails,\n  };\n};\n\nexport const getRequestTokenError = (error: Error) => {\n  return {\n    type: GET_REQUEST_TOKEN_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRequestTokenRequested = (url: string) => {\n  return {\n    type: GET_REQUEST_TOKEN_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getSessionIDSuccess = (tokenDetails: {}) => {\n  return {\n    type: GET_SESSION_ID_SUCCESS,\n    payload: tokenDetails,\n  };\n};\n\nexport const getSessionIDError = (error: Error) => {\n  return {\n    type: GET_SESSION_ID_ERROR,\n    payload: error,\n  };\n};\n\nexport const getSessionIDRequested = (url: string, body: {}) => {\n  return {\n    type: GET_SESSION_ID_REQUESTED,\n    payload: { url, body },\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getRequestTokenError,\n  getRequestTokenSuccess,\n  GET_REQUEST_TOKEN_REQUESTED,\n  getSessionIDError,\n  getSessionIDSuccess,\n  GET_SESSION_ID_REQUESTED,\n} from './actions';\n\nexport function* getRequestTokenSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRequestTokenSuccess(result));\n  } catch (error) {\n    put(getRequestTokenError(error));\n  }\n}\n\nexport function* watchRequestTokenSaga() {\n  yield takeEvery(GET_REQUEST_TOKEN_REQUESTED, getRequestTokenSaga);\n}\n\nexport function* getSessionIDSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      body: payload.body,\n    });\n    const result = yield data.json();\n    yield put(getSessionIDSuccess(result));\n  } catch (error) {\n    put(getSessionIDError(error));\n  }\n}\n\nexport function* watchSessionIDSaga() {\n  yield takeEvery(GET_SESSION_ID_REQUESTED, getSessionIDSaga);\n}\n","export const requestToken = ({ logIn }: any) => logIn.requestToken.tokenDetails.request_token;\nexport const sessionID = ({ logIn }: any) => logIn.sessionID.tokenDetails.session_id;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\n//lists\nexport const getListUrl = (language: string, list: ListNames): string =>\n  `${BASE_URL}movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//genres\nexport const getGenresUrl = (language: string): string =>\n  `${BASE_URL}genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//movies\nexport const getMoviesUrl = (\n  language: string,\n  genre: string,\n  startDate: string,\n  endDate: string,\n  page: number\n): string =>\n  `${BASE_URL}discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}&page=${page}&with_watch_monetization_types=flatrate`;\n\n//details\nexport const getMovieDetailsUrl = (language: string, id: number): string =>\n  `${BASE_URL}movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//poster\nexport const getPosterUrl = (path: string): string => `https://image.tmdb.org/t/p/w500/${path}`;\n\n//recomendations\nexport const getRecomendationsUrl = (language: string, id: number): string =>\n  `${BASE_URL}/movie/${id}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\n//request token\nexport const getRequestTokenUrl = (): string =>\n  `${BASE_URL}/authentication/token/new?api_key=${process.env.REACT_APP_API_KEY}`;\n\n//permission\nexport const getPermissionUrl = (requestToken: string): string =>\n  `https://www.themoviedb.org/authenticate/${requestToken}?redirect_to=http://localhost:3000/login/${requestToken}`;\n\n//session token\nexport const getSessionIDUrl = (request_token: string): string =>\n  `${BASE_URL}authentication/session/new?api_key=${process.env.REACT_APP_API_KEY}&request_token=${request_token}`;\n","import React, { useState, useEffect } from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer, StyledLogInButton, StyledPersonIcon } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { sessionID } from '../LogIn/store';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [value, setValue] = useState(0);\n  const isUserLoggedIn: boolean = useSelector(sessionID);\n\n  const handleChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <StyledContainer>\n      <StyledLogInButton onClick={() => history.push(`/login`)}>{t('navBar.logIn')}</StyledLogInButton>\n      <StyledAppBar position=\"static\">\n        <Tabs\n          aria-label=\"simple tabs example\"\n          centered\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: { background: 'black' },\n          }}\n        >\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n      {isUserLoggedIn && <StyledPersonIcon fontSize=\"large\" />}\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n  display: 'flex',\n  flexWrap: 'nowrap',\n});\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import {\n  GET_MOVIE_DETAILS_SUCCESS,\n  GET_MOVIE_DETAILS_REQUESTED,\n  GET_MOVIE_DETAILS_ERROR,\n  GET_RECOMENDATIONS_REQUESTED,\n  GET_RECOMENDATIONS_SUCCESS,\n  GET_RECOMENDATIONS_ERROR,\n} from './actions';\n\nexport const initialMovieDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n  recomendations: {\n    movies: [],\n    status: null,\n    error: null,\n  },\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movieDetails = (state = initialMovieDetailsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIE_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_MOVIE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_MOVIE_DETAILS_ERROR:\n      return {\n        ...state,\n        status: Status.Error,\n        error: action.payload,\n      };\n\n    case GET_RECOMENDATIONS_REQUESTED:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_SUCCESS:\n      return {\n        ...state,\n        recomendations: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_ERROR:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import Card from '@material-ui/core/Card';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledCard = styled(Card)({\n  width: '200px',\n  maxHeight: '380px',\n  margin: ' 20px 40px',\n  '& :hover': {\n    backgroundColor: 'rgb(107, 100, 100);',\n    color: 'white',\n  },\n  '& img': {\n    maxHeight: '300px',\n  },\n});\n","import React from 'react';\nimport { ListItemData } from '../Dashboard';\nimport { CardContent, CardMedia, CardActionArea } from '@material-ui/core';\nimport { getPosterUrl } from '../../API';\nimport { useHistory } from 'react-router-dom';\nimport { StyledCard } from './styles';\n\nexport const MovieCard: React.FC<ListItemData> = ({ title, id, poster_path }) => {\n  const posterSrc = getPosterUrl(poster_path);\n  const history = useHistory();\n\n  return (\n    <StyledCard onClick={() => history.push(`/movie-details/${id}`)}>\n      <CardActionArea>\n        <CardMedia component=\"img\" alt=\"Poster\" image={posterSrc} />\n        <CardContent>\n          <h4>{title}</h4>\n        </CardContent>\n      </CardActionArea>\n    </StyledCard>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\nimport { MovieCard } from '../../MovieCard';\nimport { StyledList } from '../styles';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <StyledList>\n      {movies.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} id={id} poster_path={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import { Box } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledBox = styled(Box)({\n  width: '420px',\n  fontSize: '14px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  '& .name': {\n    color: 'grey',\n    width: '120px',\n    textAlign: 'left',\n    marginLeft: '20px',\n  },\n  '& .value': {\n    width: '300px',\n    textAlign: 'left',\n  },\n});\n","export const arrayToString = (arr: any[]) => arr.map((item) => item.name).join(', ');\nexport const numberToMoney = (number: number) => (number ? `${Number(number).toLocaleString()} $` : 0);\n","import React from 'react';\nimport { MovieInfoProps } from '../types';\nimport { StyledBox } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { arrayToString, numberToMoney } from './utils';\n\nexport const MovieInfo: React.FC<MovieInfoProps> = ({\n  budget,\n  genres,\n  production_countries,\n  release_date,\n  revenue,\n  tagline,\n}) => {\n  const { t } = useTranslation();\n  const genresLine = arrayToString(genres);\n  const countriesLine = arrayToString(production_countries);\n  const renderData = [\n    {\n      name: t('details.releaseDate'),\n      value: release_date,\n    },\n    {\n      name: t('details.tagline'),\n      value: tagline,\n    },\n    {\n      name: t('details.genre'),\n      value: genresLine,\n    },\n    {\n      name: t('details.country'),\n      value: countriesLine,\n    },\n    {\n      name: t('details.budget'),\n      value: numberToMoney(budget),\n    },\n    {\n      name: t('details.revenue'),\n      value: numberToMoney(revenue),\n    },\n  ];\n\n  return (\n    <div>\n      {renderData.map(({ name, value }) =>\n        value ? (\n          <StyledBox key={name}>\n            <p className=\"name\">{name}</p>\n            <p className=\"value\">{value}</p>\n          </StyledBox>\n        ) : null\n      )}\n    </div>\n  );\n};\n","export const GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\nexport const GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\nexport const GET_MOVIE_DETAILS_REQUESTED = 'GET_MOVIE_DETAILS_REQUESTED';\nexport const GET_RECOMENDATIONS_REQUESTED = 'GET_RECOMENDATIONS_REQUESTED';\nexport const GET_RECOMENDATIONS_SUCCESS = 'GET_RECOMENDATIONS_SUCCESS';\nexport const GET_RECOMENDATIONS_ERROR = 'GET_RECOMENDATIONS_ERROR';\n\nexport const getMovieDetailsSuccess = (details: {}) => {\n  return {\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: details,\n  };\n};\n\nexport const getMovieDetailsError = (error: Error) => {\n  return {\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getMovieDetailsRequested = (url: string) => {\n  return {\n    type: GET_MOVIE_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getRecomendationsSuccess = (recomendations: []) => {\n  return {\n    type: GET_RECOMENDATIONS_SUCCESS,\n    payload: recomendations,\n  };\n};\n\nexport const getRecomendationsError = (error: Error) => {\n  return {\n    type: GET_RECOMENDATIONS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRecomendationsRequested = (url: string) => {\n  return {\n    type: GET_RECOMENDATIONS_REQUESTED,\n    payload: url,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getMovieDetailsError,\n  getMovieDetailsSuccess,\n  GET_MOVIE_DETAILS_REQUESTED,\n  getRecomendationsError,\n  getRecomendationsSuccess,\n  GET_RECOMENDATIONS_REQUESTED,\n} from './actions';\n\nexport function* getMovieDetailsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getMovieDetailsSuccess(result));\n  } catch (error) {\n    put(getMovieDetailsError(error));\n  }\n}\n\nexport function* watchMovieDetailsSaga() {\n  yield takeEvery(GET_MOVIE_DETAILS_REQUESTED, getMovieDetailsSaga);\n}\n\nconst recomendationsListLength = 6;\n\nexport function* getRecomendationsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRecomendationsSuccess(result.results.slice(0, recomendationsListLength)));\n  } catch (error) {\n    put(getRecomendationsError(error));\n  }\n}\n\nexport function* watchRecomendationsSaga() {\n  yield takeEvery(GET_RECOMENDATIONS_REQUESTED, getRecomendationsSaga);\n}\n","export const details = ({ movieDetails }: any) => movieDetails.details;\nexport const recomendations = ({ movieDetails }: any) => movieDetails.recomendations.movies;\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n    totalPages: 0,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { recomendations } from '../store';\nimport { ListItemData } from '../../Dashboard';\nimport { MovieCard } from '../../MovieCard';\nimport { StyledList } from './styles';\n\nexport const RecomendationsList: React.FC = () => {\n  const list = useSelector(recomendations);\n  return (\n    <StyledList>\n      {list.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} id={id} poster_path={poster_path} />\n      ))}\n    </StyledList>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  width: '70%',\n  '& img': {\n    width: '300px',\n    height: '420px',\n  },\n  '& .overview': {\n    textAlign: 'justify',\n    fontWeight: 'lighter',\n  },\n  '& .recomendations': {\n    marginTop: '60px',\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { details, getMovieDetailsRequested, getRecomendationsRequested } from './store';\nimport { getMovieDetailsUrl, getPosterUrl, getRecomendationsUrl } from '../../API';\nimport { StyledContainer } from './styles';\nimport { Box } from '@material-ui/core';\nimport { MovieInfo, RecomendationsList } from './';\n\nexport const MovieDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const { title, poster_path, budget, genres, overview, production_countries, release_date, revenue, tagline } =\n    useSelector(details);\n\n  const language = i18n.language;\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const detailsPath = getMovieDetailsUrl(language, Number(id));\n  const posterSrc = getPosterUrl(poster_path);\n  const recomendationsPath = getRecomendationsUrl(language, Number(id));\n\n  useEffect(() => {\n    dispatch(getMovieDetailsRequested(detailsPath));\n    dispatch(getRecomendationsRequested(recomendationsPath));\n  }, [dispatch, detailsPath, recomendationsPath]);\n\n  return (\n    <StyledContainer>\n      <h2>{title}</h2>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <img src={posterSrc} alt=\"Alt text\" />\n        {overview && (\n          <MovieInfo\n            budget={budget}\n            genres={genres}\n            production_countries={production_countries}\n            release_date={release_date}\n            revenue={revenue}\n            tagline={tagline}\n          />\n        )}\n      </Box>\n      <div>\n        <h3>{t('details.overview')}</h3>\n        <p className=\"overview\">{overview}</p>\n      </div>\n      <div className=\"recomendations\">\n        <h3>{t('details.recomendations')}</h3>\n        <RecomendationsList />\n      </div>\n    </StyledContainer>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '75%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'GET_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'GET_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'GET_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'GET_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'GET_FILTERED_MOVIES_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n  getTotalPages,\n} from './actions';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\nexport const totalPages = ({ movies }: any) => movies.totalPages;\n","import {\n  GET_RANDOM_MOVIE_REQUESTED,\n  GET_RANDOM_MOVIE_ERROR,\n  GET_RANDOM_MOVIE_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialRandomMovieState = {\n  randomMovie: {\n    movie: {},\n    status: null,\n    error: null,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const random = (state = initialRandomMovieState, action: any) => {\n  switch (action.type) {\n    case GET_RANDOM_MOVIE_REQUESTED:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_SUCCESS:\n      return {\n        ...state,\n        randomMovie: {\n          movie: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_ERROR:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl } from '../../../API';\nimport i18n from 'i18next';\nimport { getGenresRequested, genres } from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilterItemData } from '../';\nimport { FiltersProps } from '../types';\n\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Filters: React.FC<FiltersProps> = ({ onAplied }) => {\n  const language = i18n.language;\n  const path = getGenresUrl(language);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setEndDate(e.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <StyledContainer>\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\">{t('filters.genre')}</InputLabel>\n        <StyledSelect\n          labelId=\"demo-simple-select-label\"\n          value={genre}\n          onChange={(e) => handleGenreChange(e as React.ChangeEvent<HTMLSelectElement>)}\n        >\n          {genresList.map(({ name, id }: FilterItemData) => (\n            <MenuItem key={id} value={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </StyledSelect>\n      </FormControl>\n      <TextField\n        label={t('filters.startDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleStartDateChange}\n        value={startDate}\n      />\n      <TextField\n        label={t('filters.endDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleEndDateChange}\n        value={endDate}\n      />\n      <StyledButton onClick={() => onAplied(genre, startDate, endDate)}>{t('filters.apply')}</StyledButton>\n    </StyledContainer>\n  );\n};\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { filteredMovies } from '../store';\nimport { StyledList } from './styles';\nimport { MovieCard } from '../../MovieCard';\nimport { ListItemData } from '../../Dashboard';\n\nexport const FilteredMoviesList: React.FC = () => {\n  const movies = useSelector(filteredMovies);\n\n  return (\n    <StyledList>\n      {movies.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} id={id} poster_path={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import Pagination from '@material-ui/lab/Pagination';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledPagination = styled(Pagination)({\n  '& button': {\n    background: 'rgb(45, 140, 181)',\n    '&:hover': {\n      background: 'white',\n    },\n  },\n  '& .Mui-selected': {\n    border: '2px solid black',\n    fontWeight: 'bold',\n    background: 'rgb(45, 140, 181)',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { totalPages } from '../store';\nimport { StyledPagination, StyledContainer } from './styles';\n\ninterface Pagination {\n  changePage: (page: number) => void;\n  page: number;\n}\n\nexport const MoviesPagination: React.FC<Pagination> = ({ changePage, page }) => {\n  const pages = useSelector(totalPages);\n  return (\n    <StyledContainer>\n      <StyledPagination\n        count={pages}\n        size=\"large\"\n        shape=\"rounded\"\n        onChange={(e, page) => changePage(page)}\n        page={page}\n      />\n    </StyledContainer>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Filters, MoviesPagination, FilteredMoviesList } from './';\nimport { useDispatch } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested } from './store';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Movies: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(DEFAULT_PAGE);\n  };\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MoviesPagination changePage={(page) => setPage(page)} page={page} />\n      <FilteredMoviesList />\n    </div>\n  );\n};\n","export const GET_RANDOM_MOVIE_SUCCESS = 'GET_RANDOM_MOVIE_SUCCESS';\nexport const GET_RANDOM_MOVIE_ERROR = 'GET_RANDOM_MOVIE_ERROR';\nexport const GET_RANDOM_MOVIE_REQUESTED = 'GET_RANDOM_MOVIE_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getRandomMovieSuccess = (movie: {}) => {\n  return {\n    type: GET_RANDOM_MOVIE_SUCCESS,\n    payload: movie,\n  };\n};\n\nexport const getRandomMovieError = (error: Error) => {\n  return {\n    type: GET_RANDOM_MOVIE_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRandomMovieRequested = (url: string) => {\n  return {\n    type: GET_RANDOM_MOVIE_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","export const getRandomNumber = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getRandomPage = (totalPages: number) => {\n  return getRandomNumber(1, totalPages);\n};\n\nexport const getRandomMovie = (array: []) => {\n  return array.length ? array[getRandomNumber(0, array.length - 1)] : array;\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport { getRandomMovieError, getRandomMovieSuccess, GET_RANDOM_MOVIE_REQUESTED, getTotalPages } from './actions';\nimport { getRandomMovie } from '../utils';\n\nexport function* getRandomMovieSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    const movie = yield getRandomMovie(result.results);\n    yield put(getRandomMovieSuccess(movie));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getRandomMovieError(error));\n  }\n}\n\nexport function* watchRandomMovieSaga() {\n  yield takeEvery(GET_RANDOM_MOVIE_REQUESTED, getRandomMovieSaga);\n}\n","export const randomMovie = ({ random }: any) => random.randomMovie.movie;\nexport const totalPagesForRandom = ({ random }: any) => random.totalPages;\n","import React, { useState, useEffect } from 'react';\nimport { Filters } from '../Movies';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getRandomMovieRequested, randomMovie, totalPagesForRandom } from './store';\nimport { getRandomPage } from './utils';\nimport { MovieCard } from '../MovieCard';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const RandomMovie: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n  const totalPages = useSelector(totalPagesForRandom);\n  const { title, id, poster_path } = useSelector(randomMovie);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(getRandomPage(totalPages));\n  };\n\n  useEffect(() => {\n    dispatch(getRandomMovieRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MovieCard title={title} id={id} poster_path={poster_path} />\n    </div>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  margin: '40px auto',\n});\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from '@material-ui/core';\nimport { StyledContainer } from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRequestTokenRequested, requestToken, getSessionIDRequested, sessionID } from './store';\nimport { getRequestTokenUrl, getPermissionUrl, getSessionIDUrl } from '../../API';\nimport { useParams } from 'react-router-dom';\n\nexport const LogIn: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const token = useSelector(requestToken);\n  const isUserLoggedIn: boolean = useSelector(sessionID);\n  const requestTokenPath = getRequestTokenUrl();\n  const permissionPath = getPermissionUrl(token);\n  const { request_token } = useParams<any>();\n  const sessionIDPath = getSessionIDUrl(request_token);\n\n  useEffect(() => {\n    dispatch(getRequestTokenRequested(requestTokenPath));\n  }, []);\n\n  useEffect(() => {\n    if (request_token) {\n      dispatch(getSessionIDRequested(sessionIDPath, JSON.stringify({ request_token })));\n    }\n  }, [dispatch, request_token, sessionIDPath]);\n\n  return (\n    <StyledContainer>\n      {isUserLoggedIn ? <p>{t('logIn.isLogged')}</p> : <Link href={permissionPath}>{t('logIn.logInLink')}</Link>}\n    </StyledContainer>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(240, 240, 240)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  minWidth: '1000px',\n  minHeight: '100vh',\n  fontFamily: 'fangsong',\n  marginTop: '-20px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { MovieDetails } from './components/MovieDetails';\nimport { Movies } from './components/Movies';\nimport { RandomMovie } from './components/RandomMovie';\nimport { LogIn } from './components/LogIn';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <Switch>\n          <Route path=\"/\" component={NavBar} />\n        </Switch>\n        <Switch>\n          <Route path=\"/login\" exact component={LogIn} />\n          <Route path=\"/login/:request_token\" exact component={LogIn} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movie-details/:id\" component={MovieDetails} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/random movie/\" component={RandomMovie} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\nimport { initialMovieDetailsState } from '../components/MovieDetails/store';\nimport { initialRandomMovieState } from '../components/RandomMovie/store';\nimport { initialLogInState } from '../components/LogIn/store';\n\nexport const initialState = {\n  lists: initialListsState,\n  movies: initialMoviesState,\n  movieDetails: initialMovieDetailsState,\n  random: initialRandomMovieState,\n  logIn: initialLogInState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\nimport { movieDetails } from '../components/MovieDetails/store';\nimport { random } from '../components/RandomMovie/store';\nimport { logIn } from '../components/LogIn/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n  movieDetails,\n  random,\n  logIn,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchGenresSaga, watchFilteredMoviesSaga } from '../components/Movies/store';\nimport { watchMovieDetailsSaga, watchRecomendationsSaga } from '../components/MovieDetails/store';\nimport { watchRandomMovieSaga } from '../components/RandomMovie/store';\nimport { watchRequestTokenSaga, watchSessionIDSaga } from '../components/LogIn/store';\n\nexport default function* rootSaga() {\n  yield all([\n    watchMoviesSaga(),\n    watchGenresSaga(),\n    watchFilteredMoviesSaga(),\n    watchMovieDetailsSaga(),\n    watchRecomendationsSaga(),\n    watchRandomMovieSaga(),\n    watchRequestTokenSaga(),\n    watchSessionIDSaga(),\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(\n  applyMiddleware(sagaMiddleware),\n  process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION__() : null || compose\n);\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}