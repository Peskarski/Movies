{"version":3,"sources":["components/NavBar/styles.js","components/NavBar/NavBar.tsx","styles.js","i18n/config.ts","App.tsx","index.tsx"],"names":["StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","navTabs","languages","name","value","NavBar","t","useTranslation","position","Tabs","aria-label","centered","variant","map","tab","label","String","Math","random","ButtonGroup","onClick","i18n","changeLanguage","textAlign","height","fontFamily","resources","en","translation","translationEn","ru","translationRu","use","initReactI18next","init","lng","App","ReactDOM","render","document","getElementById"],"mappings":"4mBAMaA,EAAeC,YAAOC,IAAPD,CAAe,CACzCE,MAAO,MACPC,OAAQ,OACRC,WAAY,sBAGDC,EAAYL,YAAOM,IAAPN,CAAY,CACnCO,SAAU,OACVC,WAAY,OACZC,MAAO,UAGIC,EAAeV,YAAOW,IAAPX,CAAe,CACzCE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDQ,EAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CE,MAAO,MACPY,QAAS,OACTC,eAAgB,kB,uCCjBZC,EAAoB,CAAC,mBAAoB,gBAAiB,sBAC1DC,EAAwB,CAC5B,CAAEC,KAAM,KAAMC,MAAO,MACrB,CAAED,KAAM,KAAMC,MAAO,OAGVC,EAAmB,WAC9B,IAAQC,EAAMC,cAAND,EACR,OACE,eAACT,EAAD,WACE,cAACb,EAAD,CAAcwB,SAAS,SAAvB,SACE,cAACC,EAAA,EAAD,CAAMC,aAAW,sBAAsBC,UAAQ,EAACC,QAAQ,YAAxD,SACGX,EAAQY,KAAI,SAACC,GAAD,OACX,cAACxB,EAAD,CAAWyB,MAAOT,EAAEQ,IAAWE,OAAOC,KAAKC,kBAIjD,cAACC,EAAA,EAAD,CAAaP,QAAQ,YAAYF,aAAW,iCAA5C,SACGR,EAAUW,KAAI,gBAAGV,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACb,cAACT,EAAD,CAAcyB,QAAS,kBAAMC,IAAKC,eAAelB,IAAjD,SAA0DD,aC5BvDN,EAAkBZ,YAAOa,IAAPb,CAAkB,CAC/CI,WAAY,wBACZK,MAAO,QACPD,WAAY,OACZ8B,UAAW,SACXpC,MAAO,MACPqC,OAAQ,QACRC,WAAY,e,wBCLDC,EAAY,CACvBC,GAAI,CACFC,YAAaC,GAEfC,GAAI,CACFF,YAAaG,IAIjBV,IAAKW,IAAIC,KAAkBC,KAAK,CAC9BC,IAAK,KACLT,cCXF,IAWeU,EAXH,WACV,IAAQ9B,EAAMC,cAAND,EAER,OACE,eAAC,EAAD,WACE,6BAAKA,EAAE,WACP,cAAC,EAAD,QCRN+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a22cd122.chunk.js","sourcesContent":["import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '70%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '90%',\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n","import React from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\ntype language = {\n  name: string;\n  value: string;\n};\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\nconst languages: language[] = [\n  { name: 'EN', value: 'en' },\n  { name: 'RU', value: 'ru' },\n];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  return (\n    <StyledContainer>\n      <StyledAppBar position=\"static\">\n        <Tabs aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\n          {navTabs.map((tab) => (\n            <StyledTab label={t(tab)} key={String(Math.random())} />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {languages.map(({ name, value }) => (\n          <StyledButton onClick={() => i18n.changeLanguage(value)}>{name}</StyledButton>\n        ))}\n      </ButtonGroup>\n    </StyledContainer>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(56, 50, 50, 0.6)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '80%',\n  height: '800px',\n  fontFamily: 'sans-serif',\n});\n","import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport const resources = {\n  en: {\n    translation: translationEn,\n  },\n  ru: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: 'en',\n  resources,\n});\n","import { NavBar } from './components/NavBar';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledContainer>\n      <h1>{t('title')}</h1>\n      <NavBar />\n    </StyledContainer>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}