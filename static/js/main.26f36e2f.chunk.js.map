{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/store/reducer.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/Movies/store/reducer.ts","components/Dashboard/MoviesList/MoviesList.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/MovieDetails/store/reducer.ts","components/Movies/Filters/Filters.tsx","components/Movies/FilteredMoviesList/styles.js","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","components/Movies/Pagination/styles.js","components/Movies/Pagination/MoviesPagination.tsx","components/MovieDetails/MovieInfo/styles.js","components/MovieDetails/MovieInfo/utils.ts","components/MovieDetails/MovieInfo/MovieInfo.tsx","components/MovieDetails/store/actions.ts","components/MovieDetails/store/sagas.ts","components/MovieDetails/store/selectors.ts","components/MovieDetails/RecomendationsList/RecomendationsList.tsx","components/MovieDetails/styles.js","components/MovieDetails/MovieDetails.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","StyledButton","Button","StyledContainer","Container","display","justifyContent","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","ListNames","navTabs","NavBar","t","useTranslation","history","useHistory","useState","value","setValue","position","Tabs","aria-label","centered","variant","onChange","e","newValue","TabIndicatorProps","style","map","tab","label","onClick","push","String","Math","random","ButtonGroup","Object","values","changeLanguage","flexWrap","BASE_URL","Status","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","status","error","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","type","payload","fetch","data","json","result","put","results","slice","takeEvery","listsStoreData","selector","lists","action","url","MoviesList","dispatch","useDispatch","list","useParams","useSelector","language","path","process","getListUrl","useEffect","length","List","title","id","ListItem","StyledSelect","Select","marginTop","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","GET_TOTAL_PAGES","getTotalPages","totalPages","initialMoviesState","genres","genresList","filteredMovies","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","total_pages","Filters","getGenresUrl","genre","setGenre","startDate","setStartDate","endDate","setEndDate","toApplyFilter","setToApplyFilter","FormControl","InputLabel","labelId","target","handleGenreChange","MenuItem","TextField","InputLabelProps","shrink","FilteredMoviesList","page","setPage","getMoviesUrl","changePage","StyledPagination","Pagination","border","MoviesPagination","pages","count","size","shape","StyledBox","Box","textAlign","marginLeft","arrayToString","arr","item","join","numberToMoney","number","Number","toLocaleString","MovieInfo","budget","production_countries","release_date","revenue","tagline","genresLine","countriesLine","renderData","className","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_ERROR","GET_MOVIE_DETAILS_REQUESTED","GET_RECOMENDATIONS_REQUESTED","GET_RECOMENDATIONS_SUCCESS","GET_RECOMENDATIONS_ERROR","getMovieDetailsSuccess","details","getRecomendationsSuccess","recomendations","initialMovieDetailsState","getMovieDetailsSaga","watchMovieDetailsSaga","getRecomendationsSaga","watchRecomendationsSaga","movieDetails","RecomendationsList","height","MovieDetails","poster_path","overview","detailsPath","getMovieDetailsUrl","posterSrc","recomendationsPath","getRecomendationsUrl","getRecomendationsRequested","src","alt","minWidth","fontFamily","App","maxWidth","component","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.26f36e2f.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '80%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\n//lists\nexport const getListUrl = (language: string, list: ListNames): string =>\n  `${BASE_URL}movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//genres\nexport const getGenresUrl = (language: string): string =>\n  `${BASE_URL}genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//movies\nexport const getMoviesUrl = (\n  language: string,\n  genre: string,\n  startDate: string,\n  endDate: string,\n  page: number\n): string =>\n  `${BASE_URL}discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}&page=${page}&with_watch_monetization_types=flatrate`;\n\n//details\nexport const getMovieDetailsUrl = (language: string, id: number): string =>\n  `${BASE_URL}movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//poster\nexport const getPosterUrl = (path: string): string => `https://image.tmdb.org/t/p/w500/${path}`;\n\n//recomendations\nexport const getRecomendationsUrl = (language: string, id: number): string =>\n  `${BASE_URL}/movie/${id}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n","import React, { useState } from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory } from 'react-router-dom';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <StyledContainer>\n      <StyledAppBar position=\"static\">\n        <Tabs\n          aria-label=\"simple tabs example\"\n          centered\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: { background: 'black' },\n          }}\n        >\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n  display: 'flex',\n  flexWrap: 'nowrap',\n});\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n    totalPages: 0,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <List>\n      {movies.map(({ title, id }: ListItemData) => (\n        <ListItem key={id} onClick={() => history.push(`/movie-details/${id}`)}>\n          {title}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '75%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'GET_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'GET_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'GET_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'GET_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'GET_FILTERED_MOVIES_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n  getTotalPages,\n} from './actions';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\nexport const totalPages = ({ movies }: any) => movies.totalPages;\n","import {\n  GET_MOVIE_DETAILS_SUCCESS,\n  GET_MOVIE_DETAILS_REQUESTED,\n  GET_MOVIE_DETAILS_ERROR,\n  GET_RECOMENDATIONS_REQUESTED,\n  GET_RECOMENDATIONS_SUCCESS,\n  GET_RECOMENDATIONS_ERROR,\n} from './actions';\n\nexport const initialMovieDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n  recomendations: {\n    movies: [],\n    status: null,\n    error: null,\n  },\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movieDetails = (state = initialMovieDetailsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIE_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_MOVIE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_MOVIE_DETAILS_ERROR:\n      return {\n        ...state,\n        status: Status.Error,\n        error: action.payload,\n      };\n\n    case GET_RECOMENDATIONS_REQUESTED:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_SUCCESS:\n      return {\n        ...state,\n        recomendations: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_ERROR:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl } from '../../../API';\nimport i18n from 'i18next';\nimport { getGenresRequested, genres } from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilteredMoviesList, FilterItemData } from '../';\n\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Filters: React.FC = () => {\n  const language = i18n.language;\n  const path = getGenresUrl(language);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [toApplyFilter, setToApplyFilter] = useState(false);\n\n  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n    setToApplyFilter(false);\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setStartDate(e.target.value);\n    setToApplyFilter(false);\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setEndDate(e.target.value);\n    setToApplyFilter(false);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <StyledContainer>\n        <FormControl>\n          <InputLabel id=\"demo-simple-select-label\">{t('filters.genre')}</InputLabel>\n          <StyledSelect\n            labelId=\"demo-simple-select-label\"\n            value={genre}\n            onChange={(e) => handleGenreChange(e as React.ChangeEvent<HTMLSelectElement>)}\n          >\n            {genresList.map(({ name, id }: FilterItemData) => (\n              <MenuItem key={id} value={id}>\n                {name}\n              </MenuItem>\n            ))}\n          </StyledSelect>\n        </FormControl>\n        <TextField\n          label={t('filters.startDate')}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={handleStartDateChange}\n          value={startDate}\n        />\n        <TextField\n          label={t('filters.endDate')}\n          type=\"date\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={handleEndDateChange}\n          value={endDate}\n        />\n        <StyledButton onClick={() => setToApplyFilter(true)}>{t('filters.apply')}</StyledButton>\n      </StyledContainer>\n      {toApplyFilter && <FilteredMoviesList genre={genre} startDate={startDate} endDate={endDate} />}\n    </div>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested, filteredMovies } from '../store';\nimport { getMoviesUrl } from '../../../API';\nimport { FilteredMoviesListProps, MoviesPagination } from '../';\nimport { StyledContainer } from './styles';\nimport { useHistory } from 'react-router-dom';\n\nconst DEFAULT_PAGE = 1;\n\nexport const FilteredMoviesList: React.FC<FilteredMoviesListProps> = ({ genre, startDate, endDate }) => {\n  const [page, setPage] = useState(DEFAULT_PAGE);\n\n  const dispatch = useDispatch();\n  const movies = useSelector(filteredMovies);\n  const language = i18n.language;\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [genre, dispatch, path]);\n\n  return (\n    <>\n      <StyledContainer>\n        <MoviesPagination changePage={(page) => setPage(page)} />\n      </StyledContainer>\n      <List>\n        {movies.map(({ title, id }: any) => (\n          <ListItem key={id} onClick={() => history.push(`/movie-details/${id}`)}>\n            {title}\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import Pagination from '@material-ui/lab/Pagination';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledPagination = styled(Pagination)({\n  '& button': {\n    background: 'rgb(45, 140, 181)',\n    '&:hover': {\n      background: 'white',\n    },\n  },\n  '& .Mui-selected': {\n    border: '2px solid black',\n    fontWeight: 'bold',\n    background: 'rgb(45, 140, 181)',\n  },\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { totalPages } from '../store';\nimport { StyledPagination } from './styles';\n\ninterface Pagination {\n  changePage: (page: number) => void;\n}\n\nexport const MoviesPagination: React.FC<Pagination> = ({ changePage }) => {\n  const pages = useSelector(totalPages);\n  return <StyledPagination count={pages} size=\"large\" shape=\"rounded\" onChange={(e, page) => changePage(page)} />;\n};\n","import { Box } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledBox = styled(Box)({\n  width: '420px',\n  fontSize: '14px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  '& .name': {\n    color: 'grey',\n    width: '120px',\n    textAlign: 'left',\n    marginLeft: '20px',\n  },\n  '& .value': {\n    width: '300px',\n    textAlign: 'left',\n  },\n});\n","export const arrayToString = (arr: any[]) => arr.map((item) => item.name).join(', ');\nexport const numberToMoney = (number: number) => (number ? `${Number(number).toLocaleString()} $` : 0);\n","import React from 'react';\nimport { MovieInfoProps } from '../types';\nimport { StyledBox } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { arrayToString, numberToMoney } from './utils';\n\nexport const MovieInfo: React.FC<MovieInfoProps> = ({\n  budget,\n  genres,\n  production_countries,\n  release_date,\n  revenue,\n  tagline,\n}) => {\n  const { t } = useTranslation();\n  const genresLine = arrayToString(genres);\n  const countriesLine = arrayToString(production_countries);\n  const renderData = [\n    {\n      name: t('details.releaseDate'),\n      value: release_date,\n    },\n    {\n      name: t('details.tagline'),\n      value: tagline,\n    },\n    {\n      name: t('details.genre'),\n      value: genresLine,\n    },\n    {\n      name: t('details.country'),\n      value: countriesLine,\n    },\n    {\n      name: t('details.budget'),\n      value: numberToMoney(budget),\n    },\n    {\n      name: t('details.revenue'),\n      value: numberToMoney(revenue),\n    },\n  ];\n\n  return (\n    <div>\n      {renderData.map(({ name, value }) =>\n        value ? (\n          <StyledBox key={name}>\n            <p className=\"name\">{name}</p>\n            <p className=\"value\">{value}</p>\n          </StyledBox>\n        ) : null\n      )}\n    </div>\n  );\n};\n","export const GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\nexport const GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\nexport const GET_MOVIE_DETAILS_REQUESTED = 'GET_MOVIE_DETAILS_REQUESTED';\nexport const GET_RECOMENDATIONS_REQUESTED = 'GET_RECOMENDATIONS_REQUESTED';\nexport const GET_RECOMENDATIONS_SUCCESS = 'GET_RECOMENDATIONS_SUCCESS';\nexport const GET_RECOMENDATIONS_ERROR = 'GET_RECOMENDATIONS_ERROR';\n\nexport const getMovieDetailsSuccess = (details: {}) => {\n  return {\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: details,\n  };\n};\n\nexport const getMovieDetailsError = (error: Error) => {\n  return {\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getMovieDetailsRequested = (url: string) => {\n  return {\n    type: GET_MOVIE_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getRecomendationsSuccess = (recomendations: []) => {\n  return {\n    type: GET_RECOMENDATIONS_SUCCESS,\n    payload: recomendations,\n  };\n};\n\nexport const getRecomendationsError = (error: Error) => {\n  return {\n    type: GET_RECOMENDATIONS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRecomendationsRequested = (url: string) => {\n  return {\n    type: GET_RECOMENDATIONS_REQUESTED,\n    payload: url,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getMovieDetailsError,\n  getMovieDetailsSuccess,\n  GET_MOVIE_DETAILS_REQUESTED,\n  getRecomendationsError,\n  getRecomendationsSuccess,\n  GET_RECOMENDATIONS_REQUESTED,\n} from './actions';\n\nexport function* getMovieDetailsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getMovieDetailsSuccess(result));\n  } catch (error) {\n    put(getMovieDetailsError(error));\n  }\n}\n\nexport function* watchMovieDetailsSaga() {\n  yield takeEvery(GET_MOVIE_DETAILS_REQUESTED, getMovieDetailsSaga);\n}\n\nconst recomendationsListLength = 5;\n\nexport function* getRecomendationsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRecomendationsSuccess(result.results.slice(0, recomendationsListLength)));\n  } catch (error) {\n    put(getRecomendationsError(error));\n  }\n}\n\nexport function* watchRecomendationsSaga() {\n  yield takeEvery(GET_RECOMENDATIONS_REQUESTED, getRecomendationsSaga);\n}\n","export const details = ({ movieDetails }: any) => movieDetails.details;\nexport const recomendations = ({ movieDetails }: any) => movieDetails.recomendations.movies;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { recomendations } from '../store';\nimport { List, ListItem } from '@material-ui/core';\nimport { ListItemData } from '../../Dashboard';\nimport { useHistory } from 'react-router-dom';\n\nexport const RecomendationsList: React.FC = () => {\n  const list = useSelector(recomendations);\n  const history = useHistory();\n  return (\n    <List>\n      {list.map(({ title, id }: ListItemData) => (\n        <ListItem key={id} onClick={() => history.push(`/movie-details/${id}`)}>\n          {title}\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  width: '70%',\n  '& img': {\n    width: '300px',\n    height: '420px',\n  },\n  '& .overview': {\n    textAlign: 'justify',\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { details, getMovieDetailsRequested, getRecomendationsRequested } from './store';\nimport { getMovieDetailsUrl, getPosterUrl, getRecomendationsUrl } from '../../API';\nimport { StyledContainer } from './styles';\nimport { Box } from '@material-ui/core';\nimport { MovieInfo, RecomendationsList } from './';\n\nexport const MovieDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const { title, poster_path, budget, genres, overview, production_countries, release_date, revenue, tagline } =\n    useSelector(details);\n\n  const language = i18n.language;\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const detailsPath = getMovieDetailsUrl(language, Number(id));\n  const posterSrc = getPosterUrl(poster_path);\n  const recomendationsPath = getRecomendationsUrl(language, Number(id));\n\n  useEffect(() => {\n    dispatch(getMovieDetailsRequested(detailsPath));\n    dispatch(getRecomendationsRequested(recomendationsPath));\n  }, [dispatch, detailsPath, recomendationsPath]);\n\n  return (\n    <StyledContainer>\n      <h2>{title}</h2>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <img src={posterSrc} alt=\"Alt text\" />\n        {overview && (\n          <MovieInfo\n            budget={budget}\n            genres={genres}\n            production_countries={production_countries}\n            release_date={release_date}\n            revenue={revenue}\n            tagline={tagline}\n          />\n        )}\n      </Box>\n      <div>\n        <h3>{t('details.overview')}</h3>\n        <p className=\"overview\">{overview}</p>\n      </div>\n      <div>\n        <h3>{t('details.recomendations')}</h3>\n        <RecomendationsList />\n      </div>\n    </StyledContainer>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(204, 204, 204, 0.4)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  minWidth: '1000px',\n  height: '100vh',\n  fontFamily: 'fangsong',\n  marginTop: '-20px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { Filters } from './components/Movies';\nimport { MovieDetails } from './components/MovieDetails';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <Switch>\n          <Route path=\"/\" component={NavBar} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movies\" component={Filters} />\n          <Route path=\"/movie-details/:id\" component={MovieDetails} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\nimport { initialMovieDetailsState } from '../components/MovieDetails/store';\n\nexport const initialState = {\n  initialListsState,\n  initialMoviesState,\n  initialMovieDetailsState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\nimport { movieDetails } from '../components/MovieDetails/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n  movieDetails,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchGenresSaga, watchFilteredMoviesSaga } from '../components/Movies/store';\nimport { watchMovieDetailsSaga, watchRecomendationsSaga } from '../components/MovieDetails/store';\n\nexport default function* rootSaga() {\n  yield all([\n    watchMoviesSaga(),\n    watchGenresSaga(),\n    watchFilteredMoviesSaga(),\n    watchMovieDetailsSaga(),\n    watchRecomendationsSaga(),\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(applyMiddleware(sagaMiddleware), (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}