{"version":3,"sources":["i18n/config.ts","components/NavBar/styles.js","components/LogIn/store/reducer.ts","components/LogIn/store/actions.ts","components/LogIn/store/sagas.ts","components/LogIn/store/selectors.ts","API/index.ts","components/NavBar/NavBar.tsx","components/Dashboard/styles.js","components/Dashboard/store/reducer.ts","components/Dashboard/Dashboard.tsx","components/Dashboard/store/actions.ts","components/Dashboard/store/sagas.ts","components/Dashboard/store/selectors.ts","components/CreatedLists/store/reducer.ts","components/MovieCard/styles.js","components/CreatedLists/store/actions.ts","components/CreatedLists/store/sagas.ts","components/CreatedLists/store/selectors.ts","components/MovieDetails/store/reducer.ts","components/MovieCard/MovieCard.tsx","components/Dashboard/MoviesList/MoviesList.tsx","components/MovieDetails/MovieInfo/styles.js","components/MovieDetails/MovieInfo/utils.ts","components/MovieDetails/MovieInfo/MovieInfo.tsx","components/MovieDetails/store/actions.ts","components/MovieDetails/store/sagas.ts","components/MovieDetails/store/selectors.ts","components/Movies/store/reducer.ts","components/MovieDetails/RecomendationsList/styles.js","components/MovieDetails/RecomendationsList/RecomendationsList.tsx","components/MovieDetails/styles.js","components/MovieDetails/MovieDetails.tsx","components/Movies/Filters/styles.js","components/Movies/store/actions.ts","components/Movies/store/sagas.ts","components/Movies/store/selectors.ts","components/RandomMovie/store/reducer.ts","components/Movies/Filters/Filters.tsx","components/Movies/FilteredMoviesList/styles.js","components/Movies/FilteredMoviesList/FilteredMoviesList.tsx","components/Movies/Pagination/styles.js","components/Movies/Pagination/MoviesPagination.tsx","components/Movies/Movies.tsx","components/RandomMovie/store/actions.ts","components/RandomMovie/utils.ts","components/RandomMovie/store/sagas.ts","components/RandomMovie/store/selectors.ts","components/CreatedListDetails/store/reducer.ts","components/RandomMovie/RandomMovie.tsx","components/CreatedLists/Input/styles.js","components/CreatedLists/Input/ListInput.tsx","components/CreatedLists/Lists/styles.js","components/CreatedLists/Lists/Lists.tsx","components/CreatedLists/CreatedtLists.tsx","components/CreatedListDetails/store/actions.ts","components/CreatedListDetails/store/sagas.ts","components/CreatedListDetails/store/selectors.ts","components/CreatedListDetails/styles.js","components/CreatedListDetails/CreatedListDetails.tsx","components/LogIn/styles.js","components/LogIn/LogIn.tsx","styles.js","App.tsx","store/initialState.ts","store/rootReducer.ts","store/rootSaga.ts","store/index.ts","index.tsx"],"names":["Language","StyledAppBar","styled","AppBar","width","margin","background","StyledTab","Tab","fontSize","fontWeight","color","whiteSpace","StyledButton","Button","StyledContainer","Container","display","justifyContent","StyledLogInButton","StyledPersonIcon","PersonIcon","resources","En","translation","translationEn","Ru","translationRu","i18n","use","initReactI18next","init","lng","Status","GET_REQUEST_TOKEN_SUCCESS","GET_REQUEST_TOKEN_ERROR","GET_REQUEST_TOKEN_REQUESTED","GET_SESSION_ID_SUCCESS","GET_SESSION_ID_ERROR","GET_SESSION_ID_REQUESTED","initialLogInState","requestToken","tokenDetails","status","error","sessionID","session_id","localStorage","getItem","getRequestTokenSaga","watchRequestTokenSaga","getSessionIDSaga","watchSessionIDSaga","payload","fetch","data","json","result","put","type","takeEvery","url","method","body","ListNames","logIn","request_token","navTabs","NavBar","t","useTranslation","history","useHistory","location","useLocation","useState","value","setValue","isUserLoggedIn","useSelector","useEffect","window","scrollTo","onClick","push","position","Tabs","aria-label","centered","variant","onChange","e","newValue","TabIndicatorProps","style","map","tab","label","String","Math","random","ButtonGroup","Object","values","changeLanguage","flexWrap","StyledList","List","flexDirection","alignItems","BASE_URL","getMoviesUrl","language","genre","startDate","endDate","page","process","getPosterUrl","path","getCreatedListsUrl","REACT_ACCOUNT_ID","dashBoardButtons","name","redirectPath","NOW_PLAYING_REQUEST_PATH","UPCOMING_REQUEST_PATH","POPULAR_REQUEST_PATH","Dashboard","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","GET_MOVIES_REQUESTED","SET_INITIAL_MOVIES_STATE","NOW_PLAYING","UPCOMING","POPULAR","moviesList","movies","initialListsState","nowPlaying","upcoming","popular","getMoviesSaga","watchMoviesSaga","actionsByNames","success","results","slice","StyledCard","Card","maxHeight","backgroundColor","StyledPopperContainer","height","borderRadius","StyledPopper","Popper","top","GET_CREATED_LISTS_SUCCESS","GET_CREATED_LISTS_ERROR","GET_CREATED_LISTS_REQUESTED","CREATE_LIST","GET_CREATED_LIST_STATUS","DELETE_LIST","GET_DELETED_LIST_STATUS","ADD_MOVIE_TO_LIST","GET_ADDED_MOVIE_STATUS","REMOVE_MOVIE_FROM_LIST","GET_REMOVED_MOVIE_STATUS","getCreatedListsRequested","getCreatedListStatus","createdList","getDeletedListStatus","deletedList","getAddedMovieStatus","addedMovie","getRemovedMovieStatus","removedMovie","initialCreatedListsState","lists","lastCreatedList","lastDeletedList","lastAddedMovie","lastRemovedMovie","getCreatedListsSaga","watchCreatedListsSaga","createListSaga","watchCreateListSaga","deleteListSaga","watchDeleteListSaga","addMovieToListSaga","watchAddMovieToListSaga","removeMovieFromListSaga","watchRemoveMovieFromListSaga","createdLists","headers","JSON","stringify","listData","response","media_id","movieID","userLists","MovieCard","title","poster_path","isRenderedInUserList","dispatch","useDispatch","posterSrc","list_id","useParams","createdListsPath","React","anchorEl","setAnchorEl","isPopperOpened","Boolean","menuAnchorEl","setMenuAnchorEl","isMenuOpened","closeLists","stopPropagation","handleAddMovieToListClick","listID","getAddMovieToListUrl","addMovieData","addMovieToList","onMouseEnter","currentTarget","onMouseLeave","CardActionArea","open","placement","IconButton","length","Menu","onClose","MenuItem","id","getRemoveMovieFromListUrl","CardMedia","component","alt","image","CardContent","listsStoreData","selector","action","MoviesList","list","getListUrl","StyledBox","Box","textAlign","marginLeft","arrayToString","arr","item","join","numberToMoney","number","Number","toLocaleString","MovieInfo","budget","genres","production_countries","release_date","revenue","tagline","genresLine","countriesLine","renderData","className","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_ERROR","GET_MOVIE_DETAILS_REQUESTED","GET_RECOMENDATIONS_REQUESTED","GET_RECOMENDATIONS_SUCCESS","GET_RECOMENDATIONS_ERROR","getMovieDetailsSuccess","details","getRecomendationsSuccess","recomendations","initialMovieDetailsState","getMovieDetailsSaga","watchMovieDetailsSaga","getRecomendationsSaga","watchRecomendationsSaga","movieDetails","RecomendationsList","marginTop","MovieDetails","overview","detailsPath","getMovieDetailsUrl","recomendationsPath","getRecomendationsUrl","getRecomendationsRequested","src","StyledSelect","Select","GET_GENRES_SUCCESS","GET_GENRES_ERROR","GET_GENRES_REQUESTED","GET_FILTERED_MOVIES_SUCCESS","GET_FILTERED_MOVIES_ERROR","GET_FILTERED_MOVIES_REQUESTED","GET_TOTAL_PAGES","initialMoviesState","genresList","filteredMovies","totalPages","getGenresSaga","watchGenresSaga","getFilteredMoviesSaga","watchFilteredMoviesSaga","total_pages","Filters","onAplied","getGenresUrl","setGenre","setStartDate","setEndDate","FormControl","InputLabel","labelId","target","handleGenreChange","TextField","InputLabelProps","shrink","FilteredMoviesList","StyledPagination","Pagination","border","MoviesPagination","changePage","pages","count","size","shape","Movies","setPage","GET_RANDOM_MOVIE_SUCCESS","GET_RANDOM_MOVIE_ERROR","GET_RANDOM_MOVIE_REQUESTED","getRandomMovieSuccess","movie","initialRandomMovieState","randomMovie","getRandomNumber","min","max","ceil","floor","getRandomMovieSaga","watchRandomMovieSaga","array","totalPagesForRandom","RandomMovie","getRandomPage","StyledInput","Input","ListInput","setName","description","setDescription","getCreateListUrl","placeholder","cursor","Lists","handleDeleteListClick","deleteListUrl","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","CreatedLists","GET_LIST_DETAILS_SUCCESS","GET_LIST_DETAILS_ERROR","GET_LIST_DETAILS_REQUESTED","initialListDetailsState","getListDetailsSaga","watchListDetailsSaga","moviesFromList","listDetails","items","listName","CreatedListDetails","getListDetailsUrl","LogIn","token","requestTokenPath","permissionPath","getPermissionUrl","console","log","sessionIDPath","getSessionIDUrl","setItem","Link","href","minWidth","minHeight","fontFamily","App","basename","maxWidth","exact","initialState","combineReducers","state","Requested","Success","Error","rootSaga","all","sagaMiddleware","createSagaMiddleware","composedEnhacers","compose","applyMiddleware","createStore","rootReducer","run","ReactDOM","render","store","document","getElementById"],"mappings":"qHAKYA,E,uGCECC,EAAeC,YAAOC,IAAPD,CAAe,CACzCE,MAAO,MACPC,OAAQ,OACRC,WAAY,sBAGDC,EAAYL,YAAOM,IAAPN,CAAY,CACnCO,SAAU,OACVC,WAAY,OACZC,MAAO,QACPC,WAAY,WAGDC,EAAeX,YAAOY,IAAPZ,CAAe,CACzCE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDS,EAAkBb,YAAOc,IAAPd,CAAkB,CAC/Ce,QAAS,OACTC,eAAgB,kBAGLC,EAAoBjB,YAAOY,IAAPZ,CAAe,CAC9CE,MAAO,OACPK,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,kBACZ,UAAW,CACTK,MAAO,QACPL,WAAY,wBAIHc,EAAmBlB,YAAOmB,IAAPnB,CAAmB,CACjDG,OAAQ,WACRM,MAAO,oB,6ED1CGX,K,QAAAA,E,SAAAA,M,KAKL,IAAMsB,GAAS,mBACnBtB,EAASuB,GAAK,CACbC,YAAaC,IAFK,cAInBzB,EAAS0B,GAAK,CACbF,YAAaG,IALK,GAStBC,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BC,IAAKhC,EAASuB,GACdD,c,IEGGW,E,gBCxBQC,EAA4B,4BAC5BC,EAA0B,0BAC1BC,EAA8B,8BAC9BC,EAAyB,yBACzBC,EAAuB,uBACvBC,EAA2B,2B,ODI3BC,EAAoB,CAC/BC,aAAc,CACZC,aAAc,GACdC,OAAQ,KACRC,MAAO,MAETC,UAAW,CACTH,aAAc,CACZI,WAAYC,aAAaC,QAAQ,eAEnCL,OAAQ,KACRC,MAAO,Q,SAINX,K,sBAAAA,E,kBAAAA,E,eAAAA,M,KAME,I,mCEnBUgB,G,WAUAC,G,WAIAC,G,WAaAC,GA3BV,SAAUH,EAAV,8EAEU,OAFsBI,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YDPD,CACLC,KAAMzB,EACNmB,QCKiCI,IAJ9B,0DAMHC,aDHiCd,ECGR,EAAD,GDFnB,CACLe,KAAMxB,EACNkB,QAAST,KCNN,kCDG6B,IAACA,ICH9B,iBAUA,SAAUM,IAAV,iEACL,OADK,SACCU,YAAUxB,EAA6Ba,GADxC,uCAIA,SAAUE,EAAV,8EAEU,OAFmBE,EAA7B,EAA6BA,QAA7B,kBAEgBC,MAAMD,EAAQQ,IAAK,CACpCC,OAAQ,OACRC,KAAMV,EAAQU,OAJb,OAMY,OAJTR,EAFH,gBAMkBA,EAAKC,OANvB,OAOH,OADMC,EANH,iBAOGC,YDHD,CACLC,KAAMtB,EACNgB,QCC8BI,IAP3B,0DASHC,aDC8Bd,ECDR,EAAD,GDEhB,CACLe,KAAMrB,EACNe,QAAST,KCbN,kCDU0B,IAACA,ICV3B,iBAaA,SAAUQ,IAAV,iEACL,OADK,SACCQ,YAAUrB,EAA0BY,GADrC,uCCtCA,ICMKa,GDNCvB,GAAe,SAAC,GAAD,SAAGwB,MAAuBxB,aAAaC,aAAawB,eACnErB,GAAY,SAAC,GAAD,SAAGoB,MAAuBpB,UAAUH,aAAaI,Y,QEUpEqB,GAAoB,CAAC,mBAAoB,gBAAiB,sBAEnDC,GAAmB,WAC9B,IAAQC,EAAMC,cAAND,EACFE,EAAUC,cACVC,EAAWC,cACjB,EAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAA0BC,YAAYlC,IAU5C,OAJAmC,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACT,IAGF,gBAAC1D,EAAD,WACE,eAACI,EAAD,CAAmBgE,QAAS,kBAAMZ,EAAQa,KAAR,WAAlC,SAA2Df,EAAE,kBAC7D,eAACpE,EAAD,CAAcoF,SAAS,SAAvB,SACE,gBAACC,EAAA,EAAD,CACEC,aAAW,sBACXC,UAAQ,EACRC,QAAQ,YACRb,MAAOA,EACPc,SAjBa,SAACC,EAA0BC,GAC9Cf,EAASe,IAiBHC,kBAAmB,CACjBC,MAAO,CAAExF,WAAY,UAPzB,UAUG6D,GAAQ4B,KAAI,SAACC,GAAD,OACX,eAACzF,EAAD,CACE0F,MAAO5B,EAAE2B,GAETb,QAAS,kBAAMZ,EAAQa,KAAR,WAAiBf,EAAE2B,EAAK,CAAEhE,IAAK,OAA/B,QADVkE,OAAOC,KAAKC,cAIpBtB,GAAkB,eAACvE,EAAD,CAAW0F,MAAO5B,EAAE,gBAAiBc,QAAS,kBAAMZ,EAAQa,KAAR,mBAG3E,eAACiB,EAAA,EAAD,CAAaZ,QAAQ,YAAYF,aAAW,iCAA5C,SACGe,OAAOC,OAAOvG,GAAU+F,KAAI,SAAC/D,GAAD,OAC3B,eAACnB,EAAD,CAA0CsE,QAAS,kBAAMvD,IAAK4E,eAAexE,IAA7E,SACGA,GADgBkE,OAAOC,KAAKC,gBAKlCtB,GAAkB,eAAC1D,EAAD,CAAkBX,SAAS,c,UCtDvCI,GAAeX,YAAOY,IAAPZ,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPL,WAAY,oBACZD,OAAQ,MACR,UAAW,CACTC,WAAY,WAIHS,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACPa,QAAS,OACTwF,SAAU,WAGCC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WF3BRC,GAAW,iC,SAML9C,K,uCAAAA,E,iCAAAA,E,gCAAAA,Q,KAOL,IGCF/B,GHGQ8E,GAAe,SAC1BC,EACAC,EACAC,EACAC,EACAC,GAL0B,gBAOvBN,GAPuB,kCAOWO,mCAPX,qBAOqDL,EAPrD,wFAO6IC,EAP7I,qCAO+KC,EAP/K,qCAOqNC,EAPrN,iBAOqOC,EAPrO,4CAcfE,GAAe,SAACC,GAAD,gDAA6DA,IAmB5EC,GAAqB,SAACR,EAAkBnE,GAAnB,gBAC7BiE,GAD6B,mBACVO,+LAAYI,iBADF,0BACoCJ,mCADpC,qBAC8EL,EAD9E,uBACqGnE,EADrG,YI5C5B6E,GAA6D,CACjE,CAAEC,KAAM,uBAAwBC,aAAc5D,GAAU6D,0BACxD,CAAEF,KAAM,qBAAsBC,aAAc5D,GAAU8D,uBACtD,CAAEH,KAAM,oBAAqBC,aAAc5D,GAAU+D,uBAG1CC,GAAsB,WACjC,IAAMzD,EAAUC,cACRH,EAAMC,cAAND,EAER,OACE,qCACE,eAAC,GAAD,UACGqD,GAAiB3B,KAAI,gBAAG4B,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACpB,eAAC,GAAD,CAAyBzC,QAAS,kBAAMZ,EAAQa,KAAKwC,IAArD,SACGvD,EAAEsD,IADcA,WCpBhBM,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA2B,2BAE3BC,GAAc,aACdC,GAAW,WACXC,GAAU,UFLjBC,GAAa,CACjBC,OAAQ,GACR9F,OAAQ,KACRC,MAAO,MAGI8F,GAAoB,CAC/BC,WAAYH,GACZI,SAAUJ,GACVK,QAASL,K,SAGNvG,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,I,eGaU6G,I,YAUAC,IA3BXC,IAAc,qBACjBX,GAAc,CACbY,QDTgC,SAACR,GACnC,MAAO,CACL9E,KAAMsE,GACNN,KAAMU,GACNhF,QAASoF,ICMT7F,MDF8B,SAACA,GACjC,MAAO,CACLe,KAAMuE,GACNP,KAAMU,GACNhF,QAAST,MCLO,eAKjB2F,GAAU,CACTU,QDmC6B,SAACR,GAChC,MAAO,CACL9E,KAAMsE,GACNN,KAAMY,GACNlF,QAASoF,ICtCT7F,MD0C2B,SAACA,GAC9B,MAAO,CACLe,KAAMuE,GACNP,KAAMY,GACNlF,QAAST,MCrDO,eASjB0F,GAAW,CACVW,QDO8B,SAACR,GACjC,MAAO,CACL9E,KAAMsE,GACNN,KAAMW,GACNjF,QAASoF,ICVT7F,MDc4B,SAACA,GAC/B,MAAO,CACLe,KAAMuE,GACNP,KAAMW,GACNjF,QAAST,MC7BO,IAiBb,SAAUkG,GAAV,gFAEU,OAFgBzF,EAA1B,EAA0BA,QAASsE,EAAnC,EAAmCA,KAAnC,kBAEgBrE,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIsF,GAAerB,GAAqCsB,QAAQxF,EAAOyF,QAAQC,MAAM,EANzE,KAEf,0DAMHzF,YAAIsF,GAAerB,GAAqC/E,MAApD,OAND,uDAUA,SAAUmG,KAAV,iEACL,OADK,SACCnF,YAAUuE,GAAsBW,IADjC,wCC3CA,ICoBF7G,G,gFCjBQmH,GAAalJ,YAAOmJ,KAAPnJ,CAAa,CACrCE,MAAO,QACPkJ,UAAW,QACXjJ,OAAQ,aACR,WAAY,CACVkJ,gBAAiB,qBACjB5I,MAAO,SAET,QAAS,CACP2I,UAAW,WAIFE,GAAwBtJ,YAAOc,IAAPd,CAAkB,CACrDE,MAAO,QACPqJ,OAAQ,OACRxI,QAAS,OACTC,eAAgB,eAChBZ,WAAY,wBACZoJ,aAAc,QAGHC,GAAezJ,YAAO0J,KAAP1J,CAAe,CACzCmF,SAAU,WACVwE,IAAK,oB,wCC3BMC,GAA4B,4BAC5BC,GAA0B,0BAC1BC,GAA8B,8BAC9BC,GAAc,cACdC,GAA0B,0BAC1BC,GAAc,cACdC,GAA0B,0BAC1BC,GAAoB,oBACpBC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAA2B,2BAgB3BC,GAA2B,SAAC5G,GACvC,MAAO,CACLF,KAAMqG,GACN3G,QAASQ,IAWA6G,GAAuB,SAACC,GACnC,MAAO,CACLhH,KAAMuG,GACN7G,QAASsH,IAWAC,GAAuB,SAACC,GACnC,MAAO,CACLlH,KAAMyG,GACN/G,QAASwH,IAWAC,GAAsB,SAACC,GAClC,MAAO,CACLpH,KAAM2G,GACNjH,QAAS0H,IAWAC,GAAwB,SAACC,GACpC,MAAO,CACLtH,KAAM6G,GACNnH,QAAS4H,IF3EAC,GAA2B,CACtCC,MAAO,GACPxI,OAAQ,KACRC,MAAO,KACPwI,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,iBAAkB,K,SAGftJ,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,I,YGVUuJ,I,YAUAC,I,YAIAC,I,YAgBAC,I,YAIAC,I,YAYAC,I,YAIAC,I,YAgBAC,I,YAIAC,I,YAgBAC,IAtFV,SAAUT,GAAV,8EAEU,OAFsBnI,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aDR6BwI,ECQFzI,EAAOyF,QDPnC,CACLvF,KAAMmG,GACNzG,QAAS6I,KCCN,0DAMHxI,aDHiCd,ECGR,EAAD,GDFnB,CACLe,KAAMoG,GACN1G,QAAST,KCNN,kCDG6B,IAACA,EAPEsJ,ICIhC,kBAUA,SAAUT,KAAV,iEACL,OADK,SACC7H,YAAUoG,GAA6BwB,IADxC,wCAIA,SAAUE,GAAV,8EAEU,OAFiBrI,EAA3B,EAA2BA,QAA3B,kBAEgBC,MAAMD,EAAQQ,IAAK,CACpCC,OAAQ,OACRqI,QAAS,CACP,eAAgB,kCAElBpI,KAAMqI,KAAKC,UAAUhJ,EAAQiJ,YAP5B,OASc,OAPX/I,EAFH,gBASoBA,EAAKC,OATzB,OAUH,OADM+I,EATH,iBAUG7I,YAAIgH,GAAqB6B,IAV5B,gCAYH,OAZG,oCAYG7I,YAAIgH,GAAqB,EAAD,KAZ3B,uDAgBA,SAAUiB,KAAV,iEACL,OADK,SACC/H,YAAUqG,GAAayB,IADxB,wCAIA,SAAUE,GAAV,8EAEU,OAFiBvI,EAA3B,EAA2BA,QAA3B,kBAEgBC,MAAMD,EAAS,CAChCS,OAAQ,WAHP,OAKc,OAHXP,EAFH,gBAKoBA,EAAKC,OALzB,OAMH,OADM+I,EALH,iBAMG7I,YAAIkH,GAAqB2B,IAN5B,gCAQH,OARG,oCAQG7I,YAAIkH,GAAqB,EAAD,KAR3B,uDAYA,SAAUiB,KAAV,iEACL,OADK,SACCjI,YAAUuG,GAAayB,IADxB,wCAIA,SAAUE,GAAV,8EAEU,OAFqBzI,EAA/B,EAA+BA,QAA/B,kBAEgBC,MAAMD,EAAQQ,IAAK,CACpCC,OAAQ,OACRqI,QAAS,CACP,eAAgB,kCAElBpI,KAAMqI,KAAKC,UAAU,CAAEG,SAAUnJ,EAAQoJ,YAPxC,OASc,OAPXlJ,EAFH,gBASoBA,EAAKC,OATzB,OAUH,OADM+I,EATH,iBAUG7I,YAAIoH,GAAoByB,IAV3B,gCAYH,OAZG,oCAYG7I,YAAIoH,GAAoB,EAAD,KAZ1B,uDAgBA,SAAUiB,KAAV,iEACL,OADK,SACCnI,YAAUyG,GAAmByB,IAD9B,wCAIA,SAAUE,GAAV,8EAEU,OAF0B3I,EAApC,EAAoCA,QAApC,kBAEgBC,MAAMD,EAAQQ,IAAK,CACpCC,OAAQ,OACRqI,QAAS,CACP,eAAgB,kCAElBpI,KAAMqI,KAAKC,UAAU,CAAEG,SAAUnJ,EAAQoJ,YAPxC,OASc,OAPXlJ,EAFH,gBASoBA,EAAKC,OATzB,OAUH,OADM+I,EATH,iBAUG7I,YAAIsH,GAAsBuB,IAV7B,gCAYH,OAZG,oCAYG7I,YAAIsH,GAAsB,EAAD,KAZ5B,uDAgBA,SAAUiB,KAAV,iEACL,OADK,SACCrI,YAAU2G,GAAwByB,IADnC,wCCtGA,I,GCoBF/J,GDpBQyK,GAAY,SAAC,GAAD,SAAGR,aAAqCf,OACpDC,GAAkB,SAAC,GAAD,SAAGc,aAAqCd,iBAC1DC,GAAkB,SAAC,GAAD,SAAGa,aAAqCb,iBAC1DE,GAAmB,SAAC,GAAD,SAAGW,aAAqCX,kBEW3DoB,GAAqC,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOH,EAAiD,EAAjDA,QAASI,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,qBACxEzI,EAAMC,cAAND,EACF0I,EAAWC,cACXC,EAAY3F,GAAauF,GACzBtI,EAAUC,cACV1B,EAAaiC,YAAYlC,IACzBsI,EAAQpG,YAAY2H,IACpB1F,EAAWpF,IAAKoF,SACdkG,EAAYC,cAAZD,QACFE,EAAmB5F,GAAmBR,EAAUlE,GAEtD,EAAgCuK,IAAM1I,SAA6B,MAAnE,mBAAO2I,EAAP,KAAiBC,EAAjB,KACMC,EAAiBC,QAAQH,GAE/B,EAAwCD,IAAM1I,SAA6B,MAA3E,mBAAO+I,EAAP,KAAqBC,EAArB,KACMC,EAAeH,QAAQC,GAiBvBG,EAAa,SAAClI,GAClBA,EAAEmI,kBACFH,EAAgB,OAGZI,EAA4B,SAACC,GACjC,IAAMzG,EdU0B,SAAC1E,EAAmBmL,GAApB,gBAC/BlH,GAD+B,gBACfkH,EADe,6BACY3G,mCADZ,uBACwDxE,GcX3EoL,CAAqBnL,EAAYkL,GAK9CjB,EJI0B,SAACmB,GAC7B,MAAO,CACLvK,KAAM0G,GACNhH,QAAS6K,GIPAC,CAJY,CACnBtK,IAAK0D,EACLkF,cAcJ,OACE,qCACE,eAACrD,GAAD,CAAYgF,aAxCG,SAACzI,GAClB4H,EAAY5H,EAAE0I,gBAuC0BC,aApCtB,WAClBf,EAAY,OAmCV,SACE,gBAACgB,GAAA,EAAD,CACEpJ,QAAS,SAACQ,GACRpB,EAAQa,KAAR,yBAA+BqH,KAFnC,UAKG3J,GACC,eAAC6G,GAAD,CAAc6E,KAAMhB,EAAgBF,SAAUA,EAAUmB,UAAU,MAAlE,SACE,gBAACjF,GAAD,CACErE,QAAS,SAACQ,GACRA,EAAEmI,mBAFN,UAKE,gBAACY,GAAA,EAAD,CAAY/N,MAAM,YAAYwE,QA7C1B,SAACQ,GACZwF,EAAMwD,QACT5B,EAAStC,GAAyB2C,IAEpCO,EAAgBhI,EAAE0I,gBAyCN,UACE,eAAC,KAAD,IACA,gBAACO,GAAA,EAAD,CAAMJ,KAAMZ,EAAcN,SAAUI,EAAcmB,QAAShB,EAA3D,UACE,eAACiB,GAAA,EAAD,CACE3J,QAAS,WACPZ,EAAQa,KAAR,YAFJ,SAKGf,EAAE,sBAEJ8G,EAAMpF,KAAI,gBAAG4B,EAAH,EAAGA,KAAMoH,EAAT,EAASA,GAAT,OACT,eAACD,GAAA,EAAD,CAEE3J,QAAS,SAACQ,GACRoI,EAA0BgB,GAC1BlB,EAAWlI,IAJf,SAOGgC,GANIoH,YAWZjC,GACC,eAAC4B,GAAA,EAAD,CAAY/N,MAAM,YAAYwE,QAhDP,WACrC,IAAMoC,EdU+B,SAAC1E,EAAmBmL,GAApB,gBACpClH,GADoC,gBACpBkH,EADoB,gCACU3G,mCADV,uBACsDxE,GcX9EmM,CAA0BlM,EAAYoK,GAKnDH,EJUK,CACLpJ,KAAM4G,GACNlH,QIhBqB,CACnBQ,IAAK0D,EACLkF,cA4CY,SACE,eAAC,KAAD,WAMV,eAACwC,GAAA,EAAD,CAAWC,UAAU,MAAMC,IAAI,SAASC,MAAOnC,IAC/C,eAACoC,GAAA,EAAD,UACE,8BAAKzC,cCnGX0C,IAAc,qBACjBtL,GAAU6D,yBAA2B,CACpC0H,SRpBsB,SAAC,GAAD,SAAGpE,MAAuBxC,WAAWF,QQqB3D+G,OVIkC,SAAC3L,GACrC,MAAO,CACLF,KAAMwE,GACNR,KAAMU,GACNhF,QAASQ,MUXO,eAKjBG,GAAU8D,sBAAwB,CACjCyH,SRvBoB,SAAC,GAAD,SAAGpE,MAAuBvC,SAASH,QQwBvD+G,OVwBgC,SAAC3L,GACnC,MAAO,CACLF,KAAMwE,GACNR,KAAMW,GACNjF,QAASQ,MUnCO,eASjBG,GAAU+D,qBAAuB,CAChCwH,SR1BmB,SAAC,GAAD,SAAGpE,MAAuBtC,QAAQJ,QQ2BrD+G,OV4C+B,SAAC3L,GAClC,MAAO,CACLF,KAAMwE,GACNR,KAAMY,GACNlF,QAASQ,MU3DO,IAeP4L,GAAuB,WAClC,IAAM1C,EAAWC,cACT0C,EAASvC,cAATuC,KACFjH,EAAS1D,YAAYuK,GAAeI,GAAMH,UAC1CvI,EAAWpF,IAAKoF,SAChBO,EfnCkB,SAACP,EAAkB0I,GAAnB,gBACrB5I,GADqB,iBACJ4I,EADI,oBACYrI,mCADZ,qBACsDL,EADtD,WemCX2I,CAAW3I,EAAU0I,GAYlC,OAVA1K,qBAAU,WACc,IAAlByD,EAAOkG,QACT5B,EAASuC,GAAeI,GAAMF,OAAOjI,MAEtC,CAACmI,EAAM3C,EAAUtE,EAAOkG,OAAQpH,IAEnCvC,qBAAU,WACR+H,EVmCK,CACLpJ,KAAMyE,OUnCL,CAACpB,EAAU+F,IAGZ,eAACrG,GAAD,UACG+B,EAAO1C,KAAI,gBAAG6G,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,GAAIlC,EAAd,EAAcA,YAAd,OACV,eAAC,GAAD,CAAWD,MAAOA,EAAOH,QAASsC,EAAIlC,YAAaA,GAAkBkC,S,UClDhEa,GAAY1P,YAAO2P,KAAP3P,CAAY,CACnCE,MAAO,QACPK,SAAU,OACVQ,QAAS,OACTC,eAAgB,gBAChB,UAAW,CACTP,MAAO,OACPP,MAAO,QACP0P,UAAW,OACXC,WAAY,QAEd,WAAY,CACV3P,MAAO,QACP0P,UAAW,UChBFE,GAAgB,SAACC,GAAD,OAAgBA,EAAIlK,KAAI,SAACmK,GAAD,OAAUA,EAAKvI,QAAMwI,KAAK,OAClEC,GAAgB,SAACC,GAAD,OAAqBA,EAAM,UAAMC,OAAOD,GAAQE,iBAArB,MAA4C,GCKvFC,GAAsC,SAAC,GAO7C,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,OACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAEQzM,EAAMC,cAAND,EACF0M,EAAaf,GAAcU,GAC3BM,EAAgBhB,GAAcW,GAC9BM,EAAa,CACjB,CACEtJ,KAAMtD,EAAE,uBACRO,MAAOgM,GAET,CACEjJ,KAAMtD,EAAE,mBACRO,MAAOkM,GAET,CACEnJ,KAAMtD,EAAE,iBACRO,MAAOmM,GAET,CACEpJ,KAAMtD,EAAE,mBACRO,MAAOoM,GAET,CACErJ,KAAMtD,EAAE,kBACRO,MAAOwL,GAAcK,IAEvB,CACE9I,KAAMtD,EAAE,mBACRO,MAAOwL,GAAcS,KAIzB,OACE,+BACGI,EAAWlL,KAAI,gBAAG4B,EAAH,EAAGA,KAAM/C,EAAT,EAASA,MAAT,OACdA,EACE,gBAACgL,GAAD,WACE,oBAAGsB,UAAU,OAAb,SAAqBvJ,IACrB,oBAAGuJ,UAAU,QAAb,SAAsBtM,MAFR+C,GAId,WCpDCwJ,GAA4B,4BAC5BC,GAA0B,0BAC1BC,GAA8B,8BAC9BC,GAA+B,+BAC/BC,GAA6B,6BAC7BC,GAA2B,2BAE3BC,GAAyB,SAACC,GACrC,MAAO,CACL/N,KAAMwN,GACN9N,QAASqO,IAkBAC,GAA2B,SAACC,GACvC,MAAO,CACLjO,KAAM4N,GACNlO,QAASuO,INtBAC,GAA2B,CACtCH,QAAS,GACT/O,OAAQ,KACRC,MAAO,KACPgP,eAAgB,CACdnJ,OAAQ,GACR9F,OAAQ,KACRC,MAAO,Q,SAINX,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,I,YOdU6P,I,YAUAC,I,YAMAC,I,YAUAC,IA1BV,SAAUH,GAAV,8EAEU,OAFsBzO,EAAhC,EAAgCA,QAAhC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAI+N,GAAuBhO,IAJ9B,0DAMHC,aDJiCd,ECIR,EAAD,GDHnB,CACLe,KAAMyN,GACN/N,QAAST,KCLN,kCDE6B,IAACA,ICF9B,kBAUA,SAAUmP,KAAV,iEACL,OADK,SACCnO,YAAUyN,GAA6BS,IADxC,wCAMA,SAAUE,GAAV,8EAEU,OAFwB3O,EAAlC,EAAkCA,QAAlC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YAAIiO,GAAyBlO,EAAOyF,QAAQC,MAAM,EAN3B,KAE1B,0DAMHzF,aDCmCd,ECDR,EAAD,GDErB,CACLe,KAAM6N,GACNnO,QAAST,KCVN,kCDO+B,IAACA,ICPhC,kBAUA,SAAUqP,KAAV,iEACL,OADK,SACCrO,YAAU0N,GAA8BU,IADzC,wCCtCA,ICyBF/P,GDzBQyP,GAAU,SAAC,GAAD,SAAGQ,aAAqCR,SAClDE,GAAiB,SAAC,GAAD,SAAGM,aAAqCN,eAAenJ,QEExE/B,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WCDDsL,GAA+B,WAC1C,IAAMzC,EAAO3K,YAAY6M,IACzB,OACE,eAAC,GAAD,UACGlC,EAAK3J,KAAI,gBAAG6G,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,GAAIlC,EAAd,EAAcA,YAAd,OACR,eAAC,GAAD,CAAWD,MAAOA,EAAOH,QAASsC,EAAIlC,YAAaA,GAAkBkC,SCThEhO,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACP,QAAS,CACPA,MAAO,QACPqJ,OAAQ,SAEV,cAAe,CACbqG,UAAW,UACXpP,WAAY,WAEd,oBAAqB,CACnB0R,UAAW,UCHFC,GAAyB,WACpC,IAAMtF,EAAWC,cACjB,EACEjI,YAAY2M,IADN9E,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAa4D,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,OAAQ4B,EAA5C,EAA4CA,SAAU3B,EAAtD,EAAsDA,qBAAsBC,EAA5E,EAA4EA,aAAcC,EAA1F,EAA0FA,QAASC,EAAnG,EAAmGA,QAG7F9J,EAAWpF,IAAKoF,SACd3C,EAAMC,cAAND,EACA0K,EAAO5B,cAAP4B,GACFwD,E1BQ0B,SAACvL,EAAkB+H,GAAnB,gBAC7BjI,GAD6B,iBACZiI,EADY,oBACE1H,mCADF,qBAC4CL,G0BTxDwL,CAAmBxL,EAAUsJ,OAAOvB,IAClD9B,EAAY3F,GAAauF,GACzB4F,E1Ba4B,SAACzL,EAAkB+H,GAAnB,gBAC/BjI,GAD+B,kBACbiI,EADa,oCACiB1H,mCADjB,qBAC2DL,EAD3D,W0BbP0L,CAAqB1L,EAAUsJ,OAAOvB,IAOjE,OALA/J,qBAAU,WACR+H,EPFK,CACLpJ,KAAM0N,GACNhO,QOAkCkP,IAClCxF,EPiBsC,SAAClJ,GACzC,MAAO,CACLF,KAAM2N,GACNjO,QAASQ,GOpBA8O,CAA2BF,MACnC,CAAC1F,EAAUwF,EAAaE,IAGzB,gBAAC,GAAD,WACE,8BAAK7F,IACL,gBAACiD,GAAA,EAAD,CAAK5O,QAAQ,OAAOC,eAAe,eAAnC,UACE,sBAAK0R,IAAK3F,EAAWkC,IAAI,aACxBmD,GACC,eAAC,GAAD,CACE7B,OAAQA,EACRC,OAAQA,EACRC,qBAAsBA,EACtBC,aAAcA,EACdC,QAASA,EACTC,QAASA,OAIf,iCACE,8BAAKzM,EAAE,sBACP,oBAAG6M,UAAU,WAAb,SAAyBoB,OAE3B,uBAAKpB,UAAU,iBAAf,UACE,8BAAK7M,EAAE,4BACP,eAAC,GAAD,W,wCC/CKwO,GAAe3S,YAAO4S,KAAP5S,CAAe,CACzCE,MAAO,QACPK,SAAU,OACVE,MAAO,QACPN,OAAQ,QAGGU,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACPa,QAAS,OACTC,eAAgB,eAChBkR,UAAW,QCdAW,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAA8B,8BAC9BC,GAA4B,4BAC5BC,GAAgC,gCAChCC,GAAkB,kBNIlBC,GAAqB,CAChC5C,OAAQ,CACN6C,WAAY,GACZ5Q,OAAQ,KACRC,MAAO,MAET4Q,eAAgB,CACd/K,OAAQ,GACR9F,OAAQ,KACRC,MAAO,KACP6Q,WAAY,GAEdA,WAAY,I,SAGTxR,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,I,YOnBUyR,I,YAUAC,I,YAIAC,I,YAWAC,IAzBV,SAAUH,GAAV,8EAEU,OAFgBrQ,EAA1B,EAA0BA,QAA1B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aDRuBgN,ECQFjN,EAAOiN,ODP7B,CACL/M,KAAMoP,GACN1P,QAASqN,KCCN,0DAMHhN,aDH2Bd,ECGR,EAAD,GDFb,CACLe,KAAMqP,GACN3P,QAAST,KCNN,kCDGuB,IAACA,EAPE8N,ICI1B,kBAUA,SAAUiD,KAAV,iEACL,OADK,SACC/P,YAAUqP,GAAsBS,IADjC,wCAIA,SAAUE,GAAV,8EAEU,OAFwBvQ,EAAlC,EAAkCA,QAAlC,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,aDD+B+E,ECCFhF,EAAOyF,QDArC,CACLvF,KAAMuP,GACN7P,QAASoF,KCNN,QAKH,OALG,UAKG/E,aDmBoB+P,ECnBFhQ,EAAOqQ,YDoB1B,CACLnQ,KAAM0P,GACNhQ,QAASoQ,KC3BN,0DAOH/P,aDGmCd,ECHR,EAAD,GDIrB,CACLe,KAAMwP,GACN9P,QAAST,KCbN,kCDU+B,IAACA,EAcT6Q,EArBWhL,ICHlC,kBAWA,SAAUoL,KAAV,iEACL,OADK,SACCjQ,YAAUwP,GAA+BQ,IAD1C,wCCrCA,ICgBF3R,GDhBQyO,GAAS,SAAC,GAAD,SAAGjI,OAAyBiI,OAAO6C,YAC5CC,GAAiB,SAAC,GAAD,SAAG/K,OAAyB+K,eAAe/K,QAC5DgL,GAAa,SAAC,GAAD,SAAGhL,OAAyBgL,YEYzCM,GAAkC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE1CzM,EhCHoB,SAACP,GAAD,gBACvBF,GADuB,oCACaO,mCADb,qBACuDL,GgCEpEiN,CADIrS,IAAKoF,UAEhB+F,EAAWC,cACT3I,EAAMC,cAAND,EACFkP,EAAaxO,YAAY2L,IAE/B,EAA0B/L,mBATE,IAS5B,mBAAOsC,EAAP,KAAciN,EAAd,KACA,EAAkCvP,mBAVN,IAU5B,mBAAOuC,EAAP,KAAkBiN,EAAlB,KACA,EAA8BxP,mBAXF,IAW5B,mBAAOwC,EAAP,KAAgBiN,EAAhB,KAmBA,OAJApP,qBAAU,WACR+H,EJhBK,CACLpJ,KAAMsP,GACN5P,QIc4BkE,MAC3B,CAACwF,EAAUxF,IAGZ,gBAAC,GAAD,WACE,gBAAC8M,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAYvF,GAAG,2BAAf,SAA2C1K,EAAE,mBAC7C,eAACwO,GAAD,CACE0B,QAAQ,2BACR3P,MAAOqC,EACPvB,SAAU,SAACC,GAAD,OAxBQ,SAACA,GACzB,IAAM6O,EAAS7O,EAAE6O,OACjBN,EAASM,EAAO5P,OAsBO6P,CAAkB9O,IAHrC,SAKG4N,EAAWxN,KAAI,gBAAG4B,EAAH,EAAGA,KAAMoH,EAAT,EAASA,GAAT,OACd,eAACD,GAAA,EAAD,CAAmBlK,MAAOmK,EAA1B,SACGpH,GADYoH,WAMrB,eAAC2F,GAAA,EAAD,CACEzO,MAAO5B,EAAE,qBACTV,KAAK,OACLgR,gBAAiB,CACfC,QAAQ,GAEVlP,SAlCwB,SAACC,GAC7BwO,EAAaxO,EAAE6O,OAAO5P,QAkClBA,MAAOsC,IAET,eAACwN,GAAA,EAAD,CACEzO,MAAO5B,EAAE,mBACTV,KAAK,OACLgR,gBAAiB,CACfC,QAAQ,GAEVlP,SAvCsB,SAACC,GAC3ByO,EAAWzO,EAAE6O,OAAO5P,QAuChBA,MAAOuC,IAET,eAAC,GAAD,CAAchC,QAAS,kBAAM6O,EAAS/M,EAAOC,EAAWC,IAAxD,SAAmE9C,EAAE,uBCzE9DqC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WCDDgO,GAA+B,WAC1C,IAAMpM,EAAS1D,YAAYyO,IAE3B,OACE,eAAC,GAAD,UACG/K,EAAO1C,KAAI,gBAAG6G,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,GAAIlC,EAAd,EAAcA,YAAd,OACV,eAAC,GAAD,CAAWD,MAAOA,EAAOH,QAASsC,EAAIlC,YAAaA,GAAkBkC,S,UCThE+F,GAAmB5U,YAAO6U,KAAP7U,CAAmB,CACjD,WAAY,CACVI,WAAY,oBACZ,UAAW,CACTA,WAAY,UAGhB,kBAAmB,CACjB0U,OAAQ,kBACRtU,WAAY,OACZJ,WAAY,uBAIHS,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/Ce,QAAS,OACTC,eAAgB,eAChBkR,UAAW,QCXA6C,GAAyC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,WAAY9N,EAAW,EAAXA,KAC7D+N,EAAQpQ,YAAY0O,IAC1B,OACE,eAAC,GAAD,UACE,eAACqB,GAAD,CACEM,MAAOD,EACPE,KAAK,QACLC,MAAM,UACN5P,SAAU,SAACC,EAAGyB,GAAJ,OAAa8N,EAAW9N,IAClCA,KAAMA,OCTDmO,GAAmB,WAC9B,IAAMvO,EAAWpF,IAAKoF,SACtB,EAAwBrC,mBALL,GAKnB,mBAAOyC,EAAP,KAAaoO,EAAb,KACMzI,EAAWC,cAEjB,EAA0BrI,mBAPE,IAO5B,mBAAOsC,EAAP,KAAciN,EAAd,KACA,EAAkCvP,mBARN,IAQ5B,mBAAOuC,EAAP,KAAkBiN,EAAlB,KACA,EAA8BxP,mBATF,IAS5B,mBAAOwC,EAAP,KAAgBiN,EAAhB,KAEM7M,EAAOR,GAAaC,EAAUC,EAAOC,EAAWC,EAASC,GAa/D,OAJApC,qBAAU,WACR+H,ETeK,CACLpJ,KAAMyP,GACN/P,QSjBoCkE,MACnC,CAACwF,EAAUxF,IAGZ,iCACE,eAAC,GAAD,CAASyM,SAba,SAAC/M,EAAeC,EAAmBC,GAC3D+M,EAASjN,GACTkN,EAAajN,GACbkN,EAAWjN,GACXqO,EAlBiB,MA4Bf,eAAC,GAAD,CAAkBN,WAAY,SAAC9N,GAAD,OAAUoO,EAAQpO,IAAOA,KAAMA,IAC7D,eAAC,GAAD,QCpCOqO,GAA2B,2BAC3BC,GAAyB,yBACzBC,GAA6B,6BAC7BtC,GAAkB,kBAElBuC,GAAwB,SAACC,GACpC,MAAO,CACLlS,KAAM8R,GACNpS,QAASwS,IPDAC,GAA0B,CACrCC,YAAa,CACXF,MAAO,GACPlT,OAAQ,KACRC,MAAO,MAET6Q,WAAY,I,SAGTxR,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,IQtBM+T,GAAkB,SAACC,EAAaC,GAG3C,OAFAD,EAAM9P,KAAKgQ,KAAKF,GAChBC,EAAM/P,KAAKiQ,MAAMF,GACV/P,KAAKiQ,MAAMjQ,KAAKC,UAAY8P,EAAMD,EAAM,IAAMA,G,YCEtCI,I,YAYAC,IAZV,SAAUD,GAAV,gFAEU,OAFqBhT,EAA/B,EAA+BA,QAA/B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIW,OADRC,EAHH,kBDKwB8S,ECDQ9S,EAAOyF,SDE/ByF,OAAS4H,EAAMP,GAAgB,EAAGO,EAAM5H,OAAS,IAAM4H,ECN/D,QAKH,OADMV,EAJH,iBAKGnS,YAAIkS,GAAsBC,IAL7B,QAMH,OANG,UAMGnS,aFeoB+P,EEfFhQ,EAAOqQ,YFgB1B,CACLnQ,KAAM0P,GACNhQ,QAASoQ,KExBN,0DAQH/P,aFDgCd,EECR,EAAD,GFAlB,CACLe,KAAM+R,GACNrS,QAAST,KEVN,kCFO4B,IAACA,EAcN6Q,EChBC8C,ICLxB,kBAYA,SAAUD,KAAV,iEACL,OADK,SACC1S,YAAU+R,GAA4BU,IADvC,wCCjBA,ICQFpU,GDRQ8T,GAAc,SAAC,GAAD,SAAG3P,OAAyB2P,YAAYF,OACtDW,GAAsB,SAAC,GAAD,SAAGpQ,OAAyBqN,YEWlDgD,GAAwB,WACnC,IAAMzP,EAAWpF,IAAKoF,SACtB,EAAwBrC,mBALL,GAKnB,mBAAOyC,EAAP,KAAaoO,EAAb,KACMzI,EAAWC,cACXyG,EAAa1O,YAAYyR,IAC/B,EAAmCzR,YAAYgR,IAAvCnJ,EAAR,EAAQA,MAAOmC,EAAf,EAAeA,GAAIlC,EAAnB,EAAmBA,YAEnB,EAA0BlI,mBATE,IAS5B,mBAAOsC,EAAP,KAAciN,EAAd,KACA,EAAkCvP,mBAVN,IAU5B,mBAAOuC,EAAP,KAAkBiN,EAAlB,KACA,EAA8BxP,mBAXF,IAW5B,mBAAOwC,EAAP,KAAgBiN,EAAhB,KAEM7M,EAAOR,GAAaC,EAAUC,EAAOC,EAAWC,EAASC,GAa/D,OAJApC,qBAAU,WACR+H,ELbK,CACLpJ,KAAMgS,GACNtS,QKWiCkE,MAChC,CAACwF,EAAUxF,IAGZ,iCACE,eAAC,GAAD,CAASyM,SAba,SAAC/M,EAAeC,EAAmBC,GAC3D+M,EAASjN,GACTkN,EAAajN,GACbkN,EAAWjN,GACXqO,EJvByB,SAAC/B,GAC5B,OAAOuC,GAAgB,EAAGvC,GIsBhBiD,CAAcjD,OAUpB,eAAC,GAAD,CAAW7G,MAAOA,EAAOH,QAASsC,EAAIlC,YAAaA,Q,UCpC5C9L,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CE,MAAO,MACPC,OAAQ,YACRY,QAAS,OACTC,eAAgB,iBAGLL,GAAeX,YAAOY,IAAPZ,CAAe,CACzCO,SAAU,OACVC,WAAY,OACZC,MAAO,QACPL,WAAY,sBAGDqW,GAAczW,YAAO0W,KAAP1W,CAAc,CACvCE,MAAO,QCPIyW,GAAsB,WACjC,IAAQxS,EAAMC,cAAND,EACF2C,EAAWpF,IAAKoF,SAChB+F,EAAWC,cACX+B,EAAKhK,YAAYlC,IAEvB,EAAwB8B,mBARE,IAQ1B,mBAAOgD,EAAP,KAAamP,EAAb,KACA,EAAsCnS,mBATZ,IAS1B,mBAAOoS,EAAP,KAAoBC,EAApB,KAEMzP,E7CkCwB,SAAC1E,GAAD,gBAC3BiE,GAD2B,wBACHO,mCADG,uBACyCxE,G6CnC1DoU,CAAiBlI,GAUxBzC,EAAW,CACf3E,OACAoP,cACA/P,YASF,OACE,gBAAC,GAAD,WACE,eAAC2P,GAAD,CAAaO,YAAa7S,EAAE,cAAeO,MAAO+C,EAAMjC,SAtBnC,SAACC,GACxBmR,EAAQnR,EAAE6O,OAAO5P,UAsBf,eAAC+R,GAAD,CAAaO,YAAa7S,EAAE,qBAAsBO,MAAOmS,EAAarR,SAnB1C,SAACC,GAC/BqR,EAAerR,EAAE6O,OAAO5P,UAmBtB,eAAC,GAAD,CAAcO,QAVE,WAClB4H,EnCHK,CACLpJ,KAAMsG,GACN5G,QmCCoB,CAAEQ,IAAK0D,EAAM+E,cACjCwK,EA7BwB,IA8BxBE,EA9BwB,KAqCtB,SAAqC3S,EAAE,0B,8BC3ChCqC,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCE,MAAO,MACPC,OAAQ,SAGGU,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CuJ,OAAQ,OACRrJ,MAAO,MACPgS,UAAW,MACX1I,aAAc,MACd,SAAU,CACRjJ,SAAU,QAEZ,UAAW,CACTH,WAAY,qBACZ6W,OAAQ,UACR,SAAU,CACRzW,WAAY,W,qBCTL0W,GAAkB,WAC7B,IAAMjM,EAAQpG,YAAY2H,IACpBK,EAAWC,cACX+B,EAAKhK,YAAYlC,IACjB0B,EAAUC,cAEV6S,EAAwB,SAACrJ,GAC7B,IAAMzG,E/CwCmB,SAAC1E,EAAmBmL,GAApB,gBACxBlH,GADwB,gBACRkH,EADQ,oBACU3G,mCADV,uBACsDxE,G+CzClEyU,CAAcvI,EAAIf,GAC/BjB,ErC6BK,CACLpJ,KAAMwG,GACN9G,QqC/BoBkE,KAGtB,OACE,eAAC,GAAD,UACG4D,EAAMpF,KAAI,gBAAG4B,EAAH,EAAGA,KAAMoP,EAAT,EAASA,YAAahI,EAAtB,EAAsBA,GAAtB,OACT,eAAC,GAAD,CAA0B5J,QAAS,kBAAMZ,EAAQa,KAAR,UAAgB2J,KAAzD,SACE,gBAACwI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAcC,QAAS9P,EAAM+P,UAAWX,IACxC,eAACY,GAAA,EAAD,UACE,eAACjJ,GAAA,EAAD,CACEvJ,QAAS,SAACQ,GACRA,EAAEmI,kBACFuJ,EAAsBtI,IAH1B,SAME,eAAC,KAAD,YAVcA,SChBjB6I,GAAyB,WACpC,IAAM7K,EAAWC,cACXhG,EAAWpF,IAAKoF,SAChB+H,EAAKhK,YAAYlC,IACjB8H,EAAc5F,YAAYqG,IAC1BP,EAAc9F,YAAYsG,IAC1B9D,EAAOC,GAAmBR,EAAU+H,GAM1C,OAJA/J,qBAAU,WACR+H,EAAStC,GAAyBlD,MACjC,CAACwF,EAAUxF,EAAMoD,EAAaE,IAG/B,iCACE,eAAC,GAAD,IACA,eAAC,GAAD,QCxBOgN,GAA2B,2BAC3BC,GAAyB,yBACzBC,GAA6B,6BPA7BC,GAA0B,CACrCtG,QAAS,GACT/O,OAAQ,KACRC,MAAO,O,SAGJX,K,sBAAAA,E,kBAAAA,E,eAAAA,Q,KAME,I,YQTUgW,I,YAUAC,IAVV,SAAUD,GAAV,8EAEU,OAFqB5U,EAA/B,EAA+BA,QAA/B,kBAEgBC,MAAMD,GAFtB,OAGY,OADTE,EAFH,gBAGkBA,EAAKC,OAHvB,OAIH,OADMC,EAHH,iBAIGC,YDJD,CACLC,KAAMkU,GACNxU,QCEgCI,IAJ7B,0DAMHC,aDAgCd,ECAR,EAAD,GDClB,CACLe,KAAMmU,GACNzU,QAAST,KCTN,kCDM4B,IAACA,ICN7B,kBAUA,SAAUsV,KAAV,iEACL,OADK,SACCtU,YAAUmU,GAA4BE,IADvC,wCCfA,IAAME,GAAiB,SAAC,GAAD,SAAGC,YAAmC1G,QAAQ2G,OAC/DC,GAAW,SAAC,GAAD,SAAGF,YAAmC1G,QAAQ/J,MCEzDjB,GAAaxG,YAAOyG,KAAPzG,CAAa,CACrCe,QAAS,OACT2F,cAAe,MACf1F,eAAgB,eAChBuF,SAAU,OACVI,WAAY,WCGD0R,GAA+B,WAC1C,IAAMxL,EAAWC,cACXhG,EAAWpF,IAAKoF,SAEhBO,ErDmDyB,SAACyG,EAAgBhH,GAAjB,gBAC5BF,GAD4B,gBACZkH,EADY,oBACM3G,mCADN,qBACgDL,GqDpDlEwR,CADOrL,cAAZD,QACgClG,GAClCyB,EAAS1D,YAAYoT,IACrBxQ,EAAO5C,YAAYuT,IACnBrN,EAAelG,YAAYwG,IAMjC,OAJAvG,qBAAU,WACR+H,EJFK,CACLpJ,KAAMoU,GACN1U,QIAiCkE,MAChC,CAACwF,EAAUxF,EAAM0D,IAGlB,iCACE,8BAAKtD,IACJc,GACC,eAAC,GAAD,UACGA,EAAO1C,KAAI,gBAAG6G,EAAH,EAAGA,MAAOmC,EAAV,EAAUA,GAAIlC,EAAd,EAAcA,YAAd,OACV,eAAC,GAAD,CAAWD,MAAOA,EAAOH,QAASsC,EAAIlC,YAAaA,EAAsBC,sBAAoB,GAAxBiC,Y,UC3BpEhO,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CG,OAAQ,cCKGoY,GAAkB,WAC7B,IAAQpU,EAAMC,cAAND,EACF0I,EAAWC,cACX0L,EAAQ3T,YAAYtC,IACpBkW,EvDyB0B,UAC7B7R,GAD6B,6CACgBO,oCuDzB1CuR,EvD4BwB,SAACnW,GAAD,wDACaA,EADb,gEACiFA,GuD7BxFoW,CAAiBH,GAChCxU,EAAkBiJ,cAAlBjJ,cACR4U,QAAQC,IAAI7U,GACZ,IAAM8U,EvD6BuB,SAAC9U,GAAD,gBAC1B4C,GAD0B,8CACoBO,mCADpB,0BACmEnD,GuD9B1E+U,CAAgB/U,GAChCpB,EAAaiC,YAAYlC,IAe/B,OAbAmC,qBAAU,WAER,OADA+H,E1DCK,CACLpJ,KAAMvB,EACNiB,Q0DHkCsV,IAC3B,WACL5V,aAAamW,QAAQ,aAAcpW,MAEpC,CAACiK,EAAUjK,EAAY6V,IAE1B3T,qBAAU,W1DeyB,IAACnB,EAAaE,E0Dd3CG,GACF6I,G1DagClJ,E0DbDmV,E1DacjV,E0DbCqI,KAAKC,UAAU,CAAEnI,kB1Dc5D,CACLP,KAAMpB,EACNc,QAAS,CAAEQ,MAAKE,a0Ddf,CAACgJ,EAAU7I,EAAe8U,IAG3B,eAAC,GAAD,UACGlW,EAAa,6BAAIuB,EAAE,oBAAyB,eAAC8U,GAAA,EAAD,CAAMC,KAAMR,EAAZ,SAA6BvU,EAAE,wBChCrEtD,GAAkBb,YAAOc,IAAPd,CAAkB,CAC/CI,WAAY,sBACZK,MAAO,QACPD,WAAY,OACZoP,UAAW,SACX1P,MAAO,MACPiZ,SAAU,SACVC,UAAW,QACXC,WAAY,WACZnH,UAAW,U,SC6BEoH,GA5BH,WACV,IAAQnV,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,CAAQoV,SAAQ,UAAKpS,UAAL,KAAhB,SACE,gBAAC,GAAD,CAAiBqS,UAAU,EAA3B,UACE,8BAAKrV,EAAE,WACP,eAAC,IAAD,UACE,eAAC,IAAD,CAAOkD,KAAK,IAAI2H,UAAW9K,OAE7B,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOmD,KAAK,SAASoS,OAAK,EAACzK,UAAWuJ,KACtC,eAAC,IAAD,CAAOlR,KAAK,wBAAwBoS,OAAK,EAACzK,UAAWuJ,KACrD,eAAC,IAAD,CAAOlR,KAAK,aAAa2H,UAAWlH,KACpC,eAAC,IAAD,CAAOT,KAAK,qBAAqB2H,UAAWmD,KAC5C,eAAC,IAAD,CAAO9K,KAAK,UAAU2H,UAAWqG,KACjC,eAAC,IAAD,CAAOhO,KAAK,iBAAiB2H,UAAWuH,KACxC,eAAC,IAAD,CAAOlP,KAAK,SAASoS,OAAK,EAACzK,UAAW0I,KACtC,eAAC,IAAD,CAAOrQ,KAAK,kBAAkB2H,UAAWqJ,QAE3C,eAAC,IAAD,UACE,eAAC,IAAD,CAAOhR,KAAK,mBAAmBoS,OAAK,EAACzK,UAAWO,a,mBC1B7CmK,GAAe,CAC1BzO,MAAOzC,GACPD,OAAQ6K,GACRpB,aAAcL,GACdzL,OAAQ0P,GACR7R,MAAOzB,EACP0J,aAAchB,GACdkN,YAAaJ,ICNA6B,gBAAgB,CAC7B1O,MxDUmB,WAA6C,IAA5C2O,EAA2C,uDAAnCpR,GAAmB8G,EAAgB,uCAC/D,OAAQA,EAAO7L,MACb,KAAKwE,GACH,OAAO,2BACF2R,GADL,kBAEGtK,EAAO7H,KAAO,CACbc,OAAQ,GACR9F,OAAQV,GAAO8X,UACfnX,MAAO,QAIb,KAAKqF,GACH,OAAO,2BACF6R,GADL,kBAEGtK,EAAO7H,KAAO,CACbc,OAAQ+G,EAAOnM,QACfV,OAAQV,GAAO+X,QACfpX,MAAO,QAIb,KAAKsF,GACH,OAAO,2BACF4R,GADL,kBAEGtK,EAAO7H,KAAO,CACbc,OAAQ,GACR9F,OAAQV,GAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,KAAK+E,GACH,OAAO,eACFM,IAGP,QACE,OAAO,eACFoR,KwDhDTrR,OrCoBoB,WAA8C,IAA7CqR,EAA4C,uDAApCxG,GAAoB9D,EAAgB,uCACjE,OAAQA,EAAO7L,MACb,KAAKsP,GACH,OAAO,2BACF6G,GADL,IAEEpJ,OAAQ,CACN6C,WAAY,GACZ5Q,OAAQV,GAAO8X,UACfnX,MAAO,QAIb,KAAKmQ,GACH,OAAO,2BACF+G,GADL,IAEEpJ,OAAQ,CACN6C,WAAY/D,EAAOnM,QACnBV,OAAQV,GAAO+X,QACfpX,MAAO,QAIb,KAAKoQ,GACH,OAAO,2BACF8G,GADL,IAEEpJ,OAAQ,CACN6C,WAAY,GACZ5Q,OAAQV,GAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,KAAK+P,GACH,OAAO,2BACF0G,GADL,IAEEtG,eAAgB,CACd/K,OAAQ,GACR9F,OAAQV,GAAO8X,UACfnX,MAAO,QAIb,KAAKsQ,GACH,OAAO,2BACF4G,GADL,IAEEtG,eAAgB,CACd/K,OAAQ+G,EAAOnM,QACfV,OAAQV,GAAO+X,QACfpX,MAAO,QAIb,KAAKuQ,GACH,OAAO,2BACF2G,GADL,IAEEtG,eAAgB,CACd/K,OAAQ,GACR9F,OAAQV,GAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,KAAKgQ,GACH,OAAO,2BACFyG,GADL,IAEErG,WAAYjE,EAAOnM,UAGvB,QACE,OAAO,eACFyW,KqCzFT5H,a9Cc0B,WAAoD,IAAnD4H,EAAkD,uDAA1CjI,GAA0BrC,EAAgB,uCAC7E,OAAQA,EAAO7L,MACb,KAAK0N,GACH,OAAO,2BACFyI,GADL,IAEEnX,OAAQV,GAAO8X,YAGnB,KAAK5I,GACH,OAAO,2BACF2I,GADL,IAEEpI,QAASlC,EAAOnM,QAChBV,OAAQV,GAAO+X,UAGnB,KAAK5I,GACH,OAAO,2BACF0I,GADL,IAEEnX,OAAQV,GAAOgY,MACfrX,MAAO4M,EAAOnM,UAGlB,KAAKiO,GACH,OAAO,2BACFwI,GADL,IAEElI,eAAgB,CACdnJ,OAAQ,GACR9F,OAAQV,GAAO8X,UACfnX,MAAO,QAIb,KAAK2O,GACH,OAAO,2BACFuI,GADL,IAEElI,eAAgB,CACdnJ,OAAQ+G,EAAOnM,QACfV,OAAQV,GAAO+X,QACfpX,MAAO,QAIb,KAAK4O,GACH,OAAO,2BACFsI,GADL,IAEElI,eAAgB,CACdnJ,OAAQ,GACR9F,OAAQV,GAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,QACE,OAAO,eACFyW,K8CnET1T,O5BSoB,WAAmD,IAAlD0T,EAAiD,uDAAzChE,GAAyBtG,EAAgB,uCACtE,OAAQA,EAAO7L,MACb,KAAKgS,GACH,OAAO,2BACFmE,GADL,IAEE/D,YAAa,CACXF,MAAO,GACPlT,OAAQV,GAAO8X,UACfnX,MAAO,QAIb,KAAK6S,GACH,OAAO,2BACFqE,GADL,IAEE/D,YAAa,CACXF,MAAOrG,EAAOnM,QACdV,OAAQV,GAAO+X,QACfpX,MAAO,QAIb,KAAK8S,GACH,OAAO,2BACFoE,GADL,IAEE/D,YAAa,CACXF,MAAO,GACPlT,OAAQV,GAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,KAAKgQ,GACH,OAAO,2BACFyG,GADL,IAEErG,WAAYjE,EAAOnM,UAGvB,QACE,OAAO,eACFyW,K4BhDT7V,M/DgBmB,WAA6C,IAA5C6V,EAA2C,uDAAnCtX,EAAmBgN,EAAgB,uCAC/D,OAAQA,EAAO7L,MACb,KAAKvB,EACH,OAAO,2BACF0X,GADL,IAEErX,aAAc,CACZC,aAAc,GACdC,OAAQV,EAAO8X,UACfnX,MAAO,QAIb,KAAKV,EACH,OAAO,2BACF4X,GADL,IAEErX,aAAc,CACZC,aAAc8M,EAAOnM,QACrBV,OAAQV,EAAO+X,QACfpX,MAAO,QAIb,KAAKT,EACH,OAAO,2BACF2X,GADL,IAEErX,aAAc,CACZC,aAAc,GACdC,OAAQV,EAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,KAAKd,EACH,OAAO,2BACFuX,GADL,IAEEjX,UAAW,CACTH,aAAc,GACdC,OAAQV,EAAO8X,UACfnX,MAAO,QAIb,KAAKP,EACH,OAAO,2BACFyX,GADL,IAEEjX,UAAW,CACTH,aAAc8M,EAAOnM,QACrBV,OAAQV,EAAO+X,QACfpX,MAAO,QAIb,KAAKN,EACH,OAAO,2BACFwX,GADL,IAEEjX,UAAW,CACTH,aAAc,GACdC,OAAQV,EAAOgY,MACfrX,MAAO4M,EAAOnM,WAIpB,QACE,OAAO,eACFyW,K+D/ET5N,anDW0B,WAAoD,IAAnD4N,EAAkD,uDAA1C5O,GAA0BsE,EAAgB,uCAC7E,OAAQA,EAAO7L,MACb,KAAKqG,GACH,OAAO,2BACF8P,GADL,IAEEnX,OAAQV,GAAO8X,YAGnB,KAAKjQ,GACH,OAAO,2BACFgQ,GADL,IAEE3O,MAAOqE,EAAOnM,QACdV,OAAQV,GAAO+X,UAGnB,KAAKjQ,GACH,OAAO,2BACF+P,GADL,IAEElX,MAAO4M,EAAOnM,UAGlB,KAAK6G,GACH,OAAO,2BACF4P,GADL,IAEE1O,gBAAiBoE,EAAOnM,UAG5B,KAAK+G,GACH,OAAO,2BACF0P,GADL,IAEEzO,gBAAiBmE,EAAOnM,UAG5B,KAAKiH,GACH,OAAO,2BACFwP,GADL,IAEExO,eAAgBkE,EAAOnM,UAG3B,KAAKmH,GACH,OAAO,2BACFsP,GADL,IAEEvO,iBAAkBiE,EAAOnM,UAG7B,QACE,OAAO,eACFyW,KmDzDT1B,YjBFyB,WAAmD,IAAlD0B,EAAiD,uDAAzC9B,GAAyBxI,EAAgB,uCAC3E,OAAQA,EAAO7L,MACb,KAAKoU,GACH,OAAO,2BACF+B,GADL,IAEEnX,OAAQV,GAAO8X,YAGnB,KAAKlC,GACH,OAAO,2BACFiC,GADL,IAEEpI,QAASlC,EAAOnM,QAChBV,OAAQV,GAAO+X,UAGnB,KAAKlC,GACH,OAAO,2BACFgC,GADL,IAEElX,MAAO4M,EAAOnM,UAGlB,QACE,OAAO,eACFyW,O,YkBtBcI,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,YAAI,CACRpR,KACA4K,KACAE,KACA9B,KACAE,KACAqE,KACApT,IACAE,IACAqI,KACAE,KACAE,KACAE,KACAmM,KACAjM,OAfW,wCCTf,IAAMmO,GAAiBC,eAEjBC,GAAmBC,aACvBC,aAAgBJ,IACkFG,MAGrFE,gBAAYC,GAAad,GAAcU,IAEtDF,GAAeO,IAAIT,ICVnBU,IAASC,OACP,eAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c5b2d1e2.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport translationEn from './en/translationEn.json';\nimport translationRu from './ru/translationRu.json';\nimport { initReactI18next } from 'react-i18next';\n\nexport enum Language {\n  En = 'en',\n  Ru = 'ru',\n}\n\nexport const resources = {\n  [Language.En]: {\n    translation: translationEn,\n  },\n  [Language.Ru]: {\n    translation: translationRu,\n  },\n} as const;\n\ni18n.use(initReactI18next).init({\n  lng: Language.En,\n  resources,\n});\n","import { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport { Container } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\n\nexport const StyledAppBar = styled(AppBar)({\n  width: '75%',\n  margin: 'auto',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledTab = styled(Tab)({\n  fontSize: '20px',\n  fontWeight: 'bold',\n  color: 'black',\n  whiteSpace: 'nowrap',\n});\n\nexport const StyledButton = styled(Button)({\n  width: '40px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\nexport const StyledLogInButton = styled(Button)({\n  width: '80px',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'white',\n  background: 'rgb(20, 19, 19)',\n  '&:hover': {\n    color: 'black',\n    background: 'rgb(227, 218, 218)',\n  },\n});\n\nexport const StyledPersonIcon = styled(PersonIcon)({\n  margin: 'auto 8px',\n  color: 'rgb(20, 19, 19)',\n});\n","import {\n  GET_REQUEST_TOKEN_ERROR,\n  GET_REQUEST_TOKEN_REQUESTED,\n  GET_REQUEST_TOKEN_SUCCESS,\n  GET_SESSION_ID_ERROR,\n  GET_SESSION_ID_REQUESTED,\n  GET_SESSION_ID_SUCCESS,\n} from './actions';\n\nexport const initialLogInState = {\n  requestToken: {\n    tokenDetails: {},\n    status: null,\n    error: null,\n  },\n  sessionID: {\n    tokenDetails: {\n      session_id: localStorage.getItem('session_id'),\n    },\n    status: null,\n    error: null,\n  },\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const logIn = (state = initialLogInState, action: any) => {\n  switch (action.type) {\n    case GET_REQUEST_TOKEN_REQUESTED:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_REQUEST_TOKEN_SUCCESS:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_REQUEST_TOKEN_ERROR:\n      return {\n        ...state,\n        requestToken: {\n          tokenDetails: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_SESSION_ID_REQUESTED:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_SESSION_ID_SUCCESS:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_SESSION_ID_ERROR:\n      return {\n        ...state,\n        sessionID: {\n          tokenDetails: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","export const GET_REQUEST_TOKEN_SUCCESS = 'GET_REQUEST_TOKEN_SUCCESS';\nexport const GET_REQUEST_TOKEN_ERROR = 'GET_REQUEST_TOKEN_ERROR';\nexport const GET_REQUEST_TOKEN_REQUESTED = 'GET_REQUEST_TOKEN_REQUESTED';\nexport const GET_SESSION_ID_SUCCESS = 'GET_SESSION_ID_SUCCESS';\nexport const GET_SESSION_ID_ERROR = 'GET_SESSION_ID_ERROR';\nexport const GET_SESSION_ID_REQUESTED = 'GET_SESSION_ID_REQUESTED';\n\nexport const getRequestTokenSuccess = (tokenDetails: {}) => {\n  return {\n    type: GET_REQUEST_TOKEN_SUCCESS,\n    payload: tokenDetails,\n  };\n};\n\nexport const getRequestTokenError = (error: Error) => {\n  return {\n    type: GET_REQUEST_TOKEN_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRequestTokenRequested = (url: string) => {\n  return {\n    type: GET_REQUEST_TOKEN_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getSessionIDSuccess = (tokenDetails: {}) => {\n  return {\n    type: GET_SESSION_ID_SUCCESS,\n    payload: tokenDetails,\n  };\n};\n\nexport const getSessionIDError = (error: Error) => {\n  return {\n    type: GET_SESSION_ID_ERROR,\n    payload: error,\n  };\n};\n\nexport const getSessionIDRequested = (url: string, body: {}) => {\n  return {\n    type: GET_SESSION_ID_REQUESTED,\n    payload: { url, body },\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getRequestTokenError,\n  getRequestTokenSuccess,\n  GET_REQUEST_TOKEN_REQUESTED,\n  getSessionIDError,\n  getSessionIDSuccess,\n  GET_SESSION_ID_REQUESTED,\n} from './actions';\n\nexport function* getRequestTokenSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRequestTokenSuccess(result));\n  } catch (error) {\n    put(getRequestTokenError(error));\n  }\n}\n\nexport function* watchRequestTokenSaga() {\n  yield takeEvery(GET_REQUEST_TOKEN_REQUESTED, getRequestTokenSaga);\n}\n\nexport function* getSessionIDSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      body: payload.body,\n    });\n    const result = yield data.json();\n    yield put(getSessionIDSuccess(result));\n  } catch (error) {\n    put(getSessionIDError(error));\n  }\n}\n\nexport function* watchSessionIDSaga() {\n  yield takeEvery(GET_SESSION_ID_REQUESTED, getSessionIDSaga);\n}\n","export const requestToken = ({ logIn }: any) => logIn.requestToken.tokenDetails.request_token;\nexport const sessionID = ({ logIn }: any) => logIn.sessionID.tokenDetails.session_id;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\n//lists\nexport const getListUrl = (language: string, list: ListNames): string =>\n  `${BASE_URL}movie/${list}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\nexport enum ListNames {\n  NOW_PLAYING_REQUEST_PATH = 'now_playing',\n  UPCOMING_REQUEST_PATH = 'upcoming',\n  POPULAR_REQUEST_PATH = 'popular',\n}\n\n//genres\nexport const getGenresUrl = (language: string): string =>\n  `${BASE_URL}genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//movies\nexport const getMoviesUrl = (\n  language: string,\n  genre: string,\n  startDate: string,\n  endDate: string,\n  page: number\n): string =>\n  `${BASE_URL}discover/movie?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genre}&primary_release_date.gte=${startDate}&primary_release_date.lte=${endDate}&page=${page}&with_watch_monetization_types=flatrate`;\n\n//details\nexport const getMovieDetailsUrl = (language: string, id: number): string =>\n  `${BASE_URL}movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//poster\nexport const getPosterUrl = (path: string): string => `https://image.tmdb.org/t/p/w500/${path}`;\n\n//recomendations\nexport const getRecomendationsUrl = (language: string, id: number): string =>\n  `${BASE_URL}/movie/${id}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&page=1`;\n\n//request token\nexport const getRequestTokenUrl = (): string =>\n  `${BASE_URL}/authentication/token/new?api_key=${process.env.REACT_APP_API_KEY}`;\n\n//permission\nexport const getPermissionUrl = (requestToken: string): string =>\n  `https://www.themoviedb.org/authenticate/${requestToken}?redirect_to=http://peskarski.github.io/Movies/login/${requestToken}`;\n\n//session token\nexport const getSessionIDUrl = (request_token: string): string =>\n  `${BASE_URL}authentication/session/new?api_key=${process.env.REACT_APP_API_KEY}&request_token=${request_token}`;\n\n//account lists\nexport const getCreatedListsUrl = (language: string, sessionID: string): string =>\n  `${BASE_URL}account/${process.env.REACT_ACCOUNT_ID}/lists?api_key=${process.env.REACT_APP_API_KEY}&language=${language}&session_id=${sessionID}&page=1`;\n\n//create list\nexport const getCreateListUrl = (sessionID: string): string =>\n  `${BASE_URL}list?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n\n//delete list\nexport const deleteListUrl = (sessionID: string, listID: string): string =>\n  `${BASE_URL}list/${listID}?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n\n//add movie to the list\nexport const getAddMovieToListUrl = (sessionID: string, listID: string): string =>\n  `${BASE_URL}list/${listID}/add_item?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n\n// list details\nexport const getListDetailsUrl = (listID: string, language: string): string =>\n  `${BASE_URL}list/${listID}?api_key=${process.env.REACT_APP_API_KEY}&language=${language}`;\n\n//remove movie from the list\n\nexport const getRemoveMovieFromListUrl = (sessionID: string, listID: string): string =>\n  `${BASE_URL}list/${listID}/remove_item?api_key=${process.env.REACT_APP_API_KEY}&session_id=${sessionID}`;\n","import React, { useState, useEffect } from 'react';\nimport { StyledAppBar, StyledTab, StyledButton, StyledContainer, StyledLogInButton, StyledPersonIcon } from './styles';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Tabs from '@material-ui/core/Tabs';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { Language } from '../../i18n/config';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { sessionID } from '../LogIn/store';\n\nconst navTabs: string[] = ['navBar.dashboard', 'navBar.movies', 'navBar.randomMovie'];\n\nexport const NavBar: React.FC = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [value, setValue] = useState(0);\n  const isUserLoggedIn: boolean = useSelector(sessionID);\n\n  const handleChange = (e: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return (\n    <StyledContainer>\n      <StyledLogInButton onClick={() => history.push(`/login`)}>{t('navBar.logIn')}</StyledLogInButton>\n      <StyledAppBar position=\"static\">\n        <Tabs\n          aria-label=\"simple tabs example\"\n          centered\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          TabIndicatorProps={{\n            style: { background: 'black' },\n          }}\n        >\n          {navTabs.map((tab) => (\n            <StyledTab\n              label={t(tab)}\n              key={String(Math.random())}\n              onClick={() => history.push(`/${t(tab, { lng: 'en' })}/`)}\n            />\n          ))}\n          {isUserLoggedIn && <StyledTab label={t('navBar.lists')} onClick={() => history.push(`/lists/`)} />}\n        </Tabs>\n      </StyledAppBar>\n      <ButtonGroup variant=\"contained\" aria-label=\"contained primary button group\">\n        {Object.values(Language).map((lng) => (\n          <StyledButton key={String(Math.random())} onClick={() => i18n.changeLanguage(lng)}>\n            {lng}\n          </StyledButton>\n        ))}\n      </ButtonGroup>\n      {isUserLoggedIn && <StyledPersonIcon fontSize=\"large\" />}\n    </StyledContainer>\n  );\n};\n","import Button from '@material-ui/core/Button';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledButton = styled(Button)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n  margin: '8px',\n  '&:hover': {\n    background: 'white',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '40%',\n  display: 'flex',\n  flexWrap: 'nowrap',\n});\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import { GET_MOVIES_SUCCESS, GET_MOVIES_REQUESTED, GET_MOVIES_ERROR, SET_INITIAL_MOVIES_STATE } from './actions';\n\nconst moviesList = {\n  movies: [],\n  status: null,\n  error: null,\n};\n\nexport const initialListsState = {\n  nowPlaying: moviesList,\n  upcoming: moviesList,\n  popular: moviesList,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const lists = (state = initialListsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIES_REQUESTED:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        [action.name]: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_MOVIES_ERROR:\n      return {\n        ...state,\n        [action.name]: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case SET_INITIAL_MOVIES_STATE:\n      return {\n        ...initialListsState,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport { StyledButton, StyledContainer } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { ListNames } from '../../API';\nimport { useHistory } from 'react-router';\n\nconst dashBoardButtons: { name: string; redirectPath: string }[] = [\n  { name: 'dashboard.nowPlaying', redirectPath: ListNames.NOW_PLAYING_REQUEST_PATH },\n  { name: 'dashboard.upcoming', redirectPath: ListNames.UPCOMING_REQUEST_PATH },\n  { name: 'dashboard.popular', redirectPath: ListNames.POPULAR_REQUEST_PATH },\n];\n\nexport const Dashboard: React.FC = () => {\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <StyledContainer>\n        {dashBoardButtons.map(({ name, redirectPath }) => (\n          <StyledButton key={name} onClick={() => history.push(redirectPath)}>\n            {t(name)}\n          </StyledButton>\n        ))}\n      </StyledContainer>\n    </>\n  );\n};\n","export const GET_MOVIES_SUCCESS = 'GET_MOVIES_SUCCESS';\nexport const GET_MOVIES_ERROR = 'GET_MOVIES_ERROR';\nexport const GET_MOVIES_REQUESTED = 'GET_MOVIES_REQUESTED';\nexport const SET_INITIAL_MOVIES_STATE = 'SET_INITIAL_MOVIES_STATE';\n\nexport const NOW_PLAYING = 'nowPlaying';\nexport const UPCOMING = 'upcoming';\nexport const POPULAR = 'popular';\n\nexport const getNowPlayingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: NOW_PLAYING,\n    payload: movies,\n  };\n};\n\nexport const getNowPlayingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: NOW_PLAYING,\n    payload: error,\n  };\n};\n\nexport const getNowPlayingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: NOW_PLAYING,\n    payload: url,\n  };\n};\n\nexport const getUpcomingSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: UPCOMING,\n    payload: movies,\n  };\n};\n\nexport const getUpcomingError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: UPCOMING,\n    payload: error,\n  };\n};\n\nexport const getUpcomingRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: UPCOMING,\n    payload: url,\n  };\n};\n\nexport const getPopularSuccess = (movies: []) => {\n  return {\n    type: GET_MOVIES_SUCCESS,\n    name: POPULAR,\n    payload: movies,\n  };\n};\n\nexport const getPopularError = (error: Error) => {\n  return {\n    type: GET_MOVIES_ERROR,\n    name: POPULAR,\n    payload: error,\n  };\n};\n\nexport const getPopularRequested = (url: string) => {\n  return {\n    type: GET_MOVIES_REQUESTED,\n    name: POPULAR,\n    payload: url,\n  };\n};\n\nexport const setInitialMoviesState = () => {\n  return {\n    type: SET_INITIAL_MOVIES_STATE,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getNowPlayingSuccess,\n  getNowPlayingError,\n  getPopularSuccess,\n  getPopularError,\n  getUpcomingSuccess,\n  getUpcomingError,\n  GET_MOVIES_REQUESTED,\n  NOW_PLAYING,\n  POPULAR,\n  UPCOMING,\n} from './actions';\n\nconst actionsByNames = {\n  [NOW_PLAYING]: {\n    success: getNowPlayingSuccess,\n    error: getNowPlayingError,\n  },\n  [POPULAR]: {\n    success: getPopularSuccess,\n    error: getPopularError,\n  },\n  [UPCOMING]: {\n    success: getUpcomingSuccess,\n    error: getUpcomingError,\n  },\n};\n\nconst maxListLength = 5;\n\nexport function* getMoviesSaga({ payload, name }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(actionsByNames[name as keyof typeof actionsByNames].success(result.results.slice(0, maxListLength)));\n  } catch (error) {\n    put(actionsByNames[name as keyof typeof actionsByNames].error(error));\n  }\n}\n\nexport function* watchMoviesSaga() {\n  yield takeEvery(GET_MOVIES_REQUESTED, getMoviesSaga);\n}\n","export const nowPlaying = ({ lists }: any) => lists.nowPlaying.movies;\nexport const upcoming = ({ lists }: any) => lists.upcoming.movies;\nexport const popular = ({ lists }: any) => lists.popular.movies;\n","import {\n  GET_CREATED_LISTS_ERROR,\n  GET_CREATED_LISTS_SUCCESS,\n  GET_CREATED_LISTS_REQUESTED,\n  GET_CREATED_LIST_STATUS,\n  GET_DELETED_LIST_STATUS,\n  GET_ADDED_MOVIE_STATUS,\n  GET_REMOVED_MOVIE_STATUS,\n} from './actions';\n\nexport const initialCreatedListsState = {\n  lists: [],\n  status: null,\n  error: null,\n  lastCreatedList: {},\n  lastDeletedList: {},\n  lastAddedMovie: {},\n  lastRemovedMovie: {},\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const createdLists = (state = initialCreatedListsState, action: any) => {\n  switch (action.type) {\n    case GET_CREATED_LISTS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_CREATED_LISTS_SUCCESS:\n      return {\n        ...state,\n        lists: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_CREATED_LISTS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    case GET_CREATED_LIST_STATUS:\n      return {\n        ...state,\n        lastCreatedList: action.payload,\n      };\n\n    case GET_DELETED_LIST_STATUS:\n      return {\n        ...state,\n        lastDeletedList: action.payload,\n      };\n\n    case GET_ADDED_MOVIE_STATUS:\n      return {\n        ...state,\n        lastAddedMovie: action.payload,\n      };\n\n    case GET_REMOVED_MOVIE_STATUS:\n      return {\n        ...state,\n        lastRemovedMovie: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { Card, Container, Popper } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledCard = styled(Card)({\n  width: '200px',\n  maxHeight: '380px',\n  margin: ' 20px 40px',\n  '& :hover': {\n    backgroundColor: 'rgb(107, 100, 100)',\n    color: 'white',\n  },\n  '& img': {\n    maxHeight: '300px',\n  },\n});\n\nexport const StyledPopperContainer = styled(Container)({\n  width: '200px',\n  height: '30px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  background: 'rgba(10, 10, 10, 0.2)',\n  borderRadius: '4px',\n});\n\nexport const StyledPopper = styled(Popper)({\n  position: 'relative',\n  top: '30px !important',\n});\n","export const GET_CREATED_LISTS_SUCCESS = 'GET_CREATED_LISTS_SUCCESS';\nexport const GET_CREATED_LISTS_ERROR = 'GET_CREATED_LISTS_ERROR';\nexport const GET_CREATED_LISTS_REQUESTED = 'GET_CREATED_LISTS_REQUESTED';\nexport const CREATE_LIST = 'CREATE_LIST';\nexport const GET_CREATED_LIST_STATUS = 'GET_CREATED_LIST_STATUS';\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const GET_DELETED_LIST_STATUS = 'GET_DELETED_LIST_STATUS';\nexport const ADD_MOVIE_TO_LIST = 'ADD_MOVIE_TO_LIST';\nexport const GET_ADDED_MOVIE_STATUS = 'GET_ADDED_MOVIE_STATUS';\nexport const REMOVE_MOVIE_FROM_LIST = 'REMOVE_MOVIE_FROM_LIST';\nexport const GET_REMOVED_MOVIE_STATUS = 'GET_REMOVED_MOVIE_STATUS';\n\nexport const getCreatedListsSuccess = (createdLists: []) => {\n  return {\n    type: GET_CREATED_LISTS_SUCCESS,\n    payload: createdLists,\n  };\n};\n\nexport const getCreatedListsError = (error: Error) => {\n  return {\n    type: GET_CREATED_LISTS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getCreatedListsRequested = (url: string) => {\n  return {\n    type: GET_CREATED_LISTS_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const createList = (postData: {}) => {\n  return {\n    type: CREATE_LIST,\n    payload: postData,\n  };\n};\n\nexport const getCreatedListStatus = (createdList: {}) => {\n  return {\n    type: GET_CREATED_LIST_STATUS,\n    payload: createdList,\n  };\n};\n\nexport const deleteList = (url: string) => {\n  return {\n    type: DELETE_LIST,\n    payload: url,\n  };\n};\n\nexport const getDeletedListStatus = (deletedList: {}) => {\n  return {\n    type: GET_DELETED_LIST_STATUS,\n    payload: deletedList,\n  };\n};\n\nexport const addMovieToList = (addMovieData: {}) => {\n  return {\n    type: ADD_MOVIE_TO_LIST,\n    payload: addMovieData,\n  };\n};\n\nexport const getAddedMovieStatus = (addedMovie: {}) => {\n  return {\n    type: GET_ADDED_MOVIE_STATUS,\n    payload: addedMovie,\n  };\n};\n\nexport const removeMovieFromList = (removedMovieData: {}) => {\n  return {\n    type: REMOVE_MOVIE_FROM_LIST,\n    payload: removedMovieData,\n  };\n};\n\nexport const getRemovedMovieStatus = (removedMovie: {}) => {\n  return {\n    type: GET_REMOVED_MOVIE_STATUS,\n    payload: removedMovie,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getCreatedListsError,\n  getCreatedListsSuccess,\n  GET_CREATED_LISTS_REQUESTED,\n  CREATE_LIST,\n  DELETE_LIST,\n  getCreatedListStatus,\n  getDeletedListStatus,\n  ADD_MOVIE_TO_LIST,\n  getAddedMovieStatus,\n  REMOVE_MOVIE_FROM_LIST,\n  getRemovedMovieStatus,\n} from './actions';\n\nexport function* getCreatedListsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getCreatedListsSuccess(result.results));\n  } catch (error) {\n    put(getCreatedListsError(error));\n  }\n}\n\nexport function* watchCreatedListsSaga() {\n  yield takeEvery(GET_CREATED_LISTS_REQUESTED, getCreatedListsSaga);\n}\n\nexport function* createListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify(payload.listData),\n    });\n    const response = yield data.json();\n    yield put(getCreatedListStatus(response));\n  } catch (error) {\n    yield put(getCreatedListStatus(error));\n  }\n}\n\nexport function* watchCreateListSaga() {\n  yield takeEvery(CREATE_LIST, createListSaga);\n}\n\nexport function* deleteListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload, {\n      method: 'DELETE',\n    });\n    const response = yield data.json();\n    yield put(getDeletedListStatus(response));\n  } catch (error) {\n    yield put(getDeletedListStatus(error));\n  }\n}\n\nexport function* watchDeleteListSaga() {\n  yield takeEvery(DELETE_LIST, deleteListSaga);\n}\n\nexport function* addMovieToListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ media_id: payload.movieID }),\n    });\n    const response = yield data.json();\n    yield put(getAddedMovieStatus(response));\n  } catch (error) {\n    yield put(getAddedMovieStatus(error));\n  }\n}\n\nexport function* watchAddMovieToListSaga() {\n  yield takeEvery(ADD_MOVIE_TO_LIST, addMovieToListSaga);\n}\n\nexport function* removeMovieFromListSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload.url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ media_id: payload.movieID }),\n    });\n    const response = yield data.json();\n    yield put(getRemovedMovieStatus(response));\n  } catch (error) {\n    yield put(getRemovedMovieStatus(error));\n  }\n}\n\nexport function* watchRemoveMovieFromListSaga() {\n  yield takeEvery(REMOVE_MOVIE_FROM_LIST, removeMovieFromListSaga);\n}\n","export const userLists = ({ createdLists }: any) => createdLists.lists;\nexport const lastCreatedList = ({ createdLists }: any) => createdLists.lastCreatedList;\nexport const lastDeletedList = ({ createdLists }: any) => createdLists.lastDeletedList;\nexport const lastRemovedMovie = ({ createdLists }: any) => createdLists.lastRemovedMovie;\n","import {\n  GET_MOVIE_DETAILS_SUCCESS,\n  GET_MOVIE_DETAILS_REQUESTED,\n  GET_MOVIE_DETAILS_ERROR,\n  GET_RECOMENDATIONS_REQUESTED,\n  GET_RECOMENDATIONS_SUCCESS,\n  GET_RECOMENDATIONS_ERROR,\n} from './actions';\n\nexport const initialMovieDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n  recomendations: {\n    movies: [],\n    status: null,\n    error: null,\n  },\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movieDetails = (state = initialMovieDetailsState, action: any) => {\n  switch (action.type) {\n    case GET_MOVIE_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_MOVIE_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_MOVIE_DETAILS_ERROR:\n      return {\n        ...state,\n        status: Status.Error,\n        error: action.payload,\n      };\n\n    case GET_RECOMENDATIONS_REQUESTED:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_SUCCESS:\n      return {\n        ...state,\n        recomendations: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RECOMENDATIONS_ERROR:\n      return {\n        ...state,\n        recomendations: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React from 'react';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { CardContent, CardMedia, CardActionArea, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { getPosterUrl, getCreatedListsUrl, getAddMovieToListUrl, getRemoveMovieFromListUrl } from '../../API';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { StyledCard, StyledPopperContainer, StyledPopper } from './styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sessionID } from '../LogIn/store';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { userLists, getCreatedListsRequested, addMovieToList, removeMovieFromList } from '../CreatedLists/store';\nimport { MenuItemData, MovieCardData } from './types';\n\nexport const MovieCard: React.FC<MovieCardData> = ({ title, movieID, poster_path, isRenderedInUserList }) => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const posterSrc = getPosterUrl(poster_path);\n  const history = useHistory();\n  const session_id = useSelector(sessionID);\n  const lists = useSelector(userLists);\n  const language = i18n.language;\n  const { list_id } = useParams<{ list_id: string }>();\n  const createdListsPath = getCreatedListsUrl(language, session_id);\n\n  const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n  const isPopperOpened = Boolean(anchorEl);\n\n  const [menuAnchorEl, setMenuAnchorEl] = React.useState<HTMLElement | null>(null);\n  const isMenuOpened = Boolean(menuAnchorEl);\n\n  const openPopper = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const closePopper = () => {\n    setAnchorEl(null);\n  };\n\n  const openLists = (e: React.MouseEvent<HTMLElement>) => {\n    if (!lists.length) {\n      dispatch(getCreatedListsRequested(createdListsPath));\n    }\n    setMenuAnchorEl(e.currentTarget);\n  };\n\n  const closeLists = (e: React.MouseEvent<HTMLElement>) => {\n    e.stopPropagation();\n    setMenuAnchorEl(null);\n  };\n\n  const handleAddMovieToListClick = (listID: string) => {\n    const path = getAddMovieToListUrl(session_id, listID);\n    const addMovieData = {\n      url: path,\n      movieID,\n    };\n    dispatch(addMovieToList(addMovieData));\n  };\n\n  const handleRemoveMovieFromListClick = () => {\n    const path = getRemoveMovieFromListUrl(session_id, list_id);\n    const removedMovie = {\n      url: path,\n      movieID,\n    };\n    dispatch(removeMovieFromList(removedMovie));\n  };\n\n  return (\n    <>\n      <StyledCard onMouseEnter={openPopper} onMouseLeave={closePopper}>\n        <CardActionArea\n          onClick={(e) => {\n            history.push(`/movie-details/${movieID}`);\n          }}\n        >\n          {session_id && (\n            <StyledPopper open={isPopperOpened} anchorEl={anchorEl} placement=\"top\">\n              <StyledPopperContainer\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                <IconButton color=\"secondary\" onClick={openLists}>\n                  <AddIcon />\n                  <Menu open={isMenuOpened} anchorEl={menuAnchorEl} onClose={closeLists}>\n                    <MenuItem\n                      onClick={() => {\n                        history.push(`/lists/`);\n                      }}\n                    >\n                      {t('lists.createList')}\n                    </MenuItem>\n                    {lists.map(({ name, id }: MenuItemData) => (\n                      <MenuItem\n                        key={id}\n                        onClick={(e) => {\n                          handleAddMovieToListClick(id);\n                          closeLists(e);\n                        }}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </IconButton>\n                {isRenderedInUserList && (\n                  <IconButton color=\"secondary\" onClick={handleRemoveMovieFromListClick}>\n                    <RemoveIcon />\n                  </IconButton>\n                )}\n              </StyledPopperContainer>\n            </StyledPopper>\n          )}\n          <CardMedia component=\"img\" alt=\"Poster\" image={posterSrc} />\n          <CardContent>\n            <h4>{title}</h4>\n          </CardContent>\n        </CardActionArea>\n      </StyledCard>\n    </>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  nowPlaying,\n  popular,\n  upcoming,\n  getNowPlayingRequested,\n  getPopularRequested,\n  getUpcomingRequested,\n  setInitialMoviesState,\n} from '../store';\nimport { getListUrl, ListNames } from '../../../API';\nimport i18n from 'i18next';\nimport { ListItemData } from '../';\nimport { MovieCard } from '../../MovieCard';\nimport { StyledList } from '../styles';\n\nconst listsStoreData = {\n  [ListNames.NOW_PLAYING_REQUEST_PATH]: {\n    selector: nowPlaying,\n    action: getNowPlayingRequested,\n  },\n  [ListNames.UPCOMING_REQUEST_PATH]: {\n    selector: upcoming,\n    action: getUpcomingRequested,\n  },\n  [ListNames.POPULAR_REQUEST_PATH]: {\n    selector: popular,\n    action: getPopularRequested,\n  },\n};\n\nexport const MoviesList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { list } = useParams<{ list: keyof typeof listsStoreData }>();\n  const movies = useSelector(listsStoreData[list].selector);\n  const language = i18n.language;\n  const path = getListUrl(language, list);\n\n  useEffect(() => {\n    if (movies.length === 0) {\n      dispatch(listsStoreData[list].action(path));\n    }\n  }, [list, dispatch, movies.length, path]);\n\n  useEffect(() => {\n    dispatch(setInitialMoviesState());\n  }, [language, dispatch]);\n\n  return (\n    <StyledList>\n      {movies.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} movieID={id} poster_path={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import { Box } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledBox = styled(Box)({\n  width: '420px',\n  fontSize: '14px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  '& .name': {\n    color: 'grey',\n    width: '120px',\n    textAlign: 'left',\n    marginLeft: '20px',\n  },\n  '& .value': {\n    width: '300px',\n    textAlign: 'left',\n  },\n});\n","export const arrayToString = (arr: any[]) => arr.map((item) => item.name).join(', ');\nexport const numberToMoney = (number: number) => (number ? `${Number(number).toLocaleString()} $` : 0);\n","import React from 'react';\nimport { MovieInfoProps } from '../types';\nimport { StyledBox } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport { arrayToString, numberToMoney } from './utils';\n\nexport const MovieInfo: React.FC<MovieInfoProps> = ({\n  budget,\n  genres,\n  production_countries,\n  release_date,\n  revenue,\n  tagline,\n}) => {\n  const { t } = useTranslation();\n  const genresLine = arrayToString(genres);\n  const countriesLine = arrayToString(production_countries);\n  const renderData = [\n    {\n      name: t('details.releaseDate'),\n      value: release_date,\n    },\n    {\n      name: t('details.tagline'),\n      value: tagline,\n    },\n    {\n      name: t('details.genre'),\n      value: genresLine,\n    },\n    {\n      name: t('details.country'),\n      value: countriesLine,\n    },\n    {\n      name: t('details.budget'),\n      value: numberToMoney(budget),\n    },\n    {\n      name: t('details.revenue'),\n      value: numberToMoney(revenue),\n    },\n  ];\n\n  return (\n    <div>\n      {renderData.map(({ name, value }) =>\n        value ? (\n          <StyledBox key={name}>\n            <p className=\"name\">{name}</p>\n            <p className=\"value\">{value}</p>\n          </StyledBox>\n        ) : null\n      )}\n    </div>\n  );\n};\n","export const GET_MOVIE_DETAILS_SUCCESS = 'GET_MOVIE_DETAILS_SUCCESS';\nexport const GET_MOVIE_DETAILS_ERROR = 'GET_MOVIE_DETAILS_ERROR';\nexport const GET_MOVIE_DETAILS_REQUESTED = 'GET_MOVIE_DETAILS_REQUESTED';\nexport const GET_RECOMENDATIONS_REQUESTED = 'GET_RECOMENDATIONS_REQUESTED';\nexport const GET_RECOMENDATIONS_SUCCESS = 'GET_RECOMENDATIONS_SUCCESS';\nexport const GET_RECOMENDATIONS_ERROR = 'GET_RECOMENDATIONS_ERROR';\n\nexport const getMovieDetailsSuccess = (details: {}) => {\n  return {\n    type: GET_MOVIE_DETAILS_SUCCESS,\n    payload: details,\n  };\n};\n\nexport const getMovieDetailsError = (error: Error) => {\n  return {\n    type: GET_MOVIE_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getMovieDetailsRequested = (url: string) => {\n  return {\n    type: GET_MOVIE_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getRecomendationsSuccess = (recomendations: []) => {\n  return {\n    type: GET_RECOMENDATIONS_SUCCESS,\n    payload: recomendations,\n  };\n};\n\nexport const getRecomendationsError = (error: Error) => {\n  return {\n    type: GET_RECOMENDATIONS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRecomendationsRequested = (url: string) => {\n  return {\n    type: GET_RECOMENDATIONS_REQUESTED,\n    payload: url,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport {\n  getMovieDetailsError,\n  getMovieDetailsSuccess,\n  GET_MOVIE_DETAILS_REQUESTED,\n  getRecomendationsError,\n  getRecomendationsSuccess,\n  GET_RECOMENDATIONS_REQUESTED,\n} from './actions';\n\nexport function* getMovieDetailsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getMovieDetailsSuccess(result));\n  } catch (error) {\n    put(getMovieDetailsError(error));\n  }\n}\n\nexport function* watchMovieDetailsSaga() {\n  yield takeEvery(GET_MOVIE_DETAILS_REQUESTED, getMovieDetailsSaga);\n}\n\nconst recomendationsListLength = 6;\n\nexport function* getRecomendationsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getRecomendationsSuccess(result.results.slice(0, recomendationsListLength)));\n  } catch (error) {\n    put(getRecomendationsError(error));\n  }\n}\n\nexport function* watchRecomendationsSaga() {\n  yield takeEvery(GET_RECOMENDATIONS_REQUESTED, getRecomendationsSaga);\n}\n","export const details = ({ movieDetails }: any) => movieDetails.details;\nexport const recomendations = ({ movieDetails }: any) => movieDetails.recomendations.movies;\n","import {\n  GET_GENRES_ERROR,\n  GET_GENRES_SUCCESS,\n  GET_GENRES_REQUESTED,\n  GET_FILTERED_MOVIES_REQUESTED,\n  GET_FILTERED_MOVIES_ERROR,\n  GET_FILTERED_MOVIES_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialMoviesState = {\n  genres: {\n    genresList: [],\n    status: null,\n    error: null,\n  },\n  filteredMovies: {\n    movies: [],\n    status: null,\n    error: null,\n    totalPages: 0,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const movies = (state = initialMoviesState, action: any) => {\n  switch (action.type) {\n    case GET_GENRES_REQUESTED:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_SUCCESS:\n      return {\n        ...state,\n        genres: {\n          genresList: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_GENRES_ERROR:\n      return {\n        ...state,\n        genres: {\n          genresList: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_REQUESTED:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_SUCCESS:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_FILTERED_MOVIES_ERROR:\n      return {\n        ...state,\n        filteredMovies: {\n          movies: [],\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { recomendations } from '../store';\nimport { ListItemData } from '../../Dashboard';\nimport { MovieCard } from '../../MovieCard';\nimport { StyledList } from './styles';\n\nexport const RecomendationsList: React.FC = () => {\n  const list = useSelector(recomendations);\n  return (\n    <StyledList>\n      {list.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} movieID={id} poster_path={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  width: '70%',\n  '& img': {\n    width: '300px',\n    height: '420px',\n  },\n  '& .overview': {\n    textAlign: 'justify',\n    fontWeight: 'lighter',\n  },\n  '& .recomendations': {\n    marginTop: '60px',\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\nimport { details, getMovieDetailsRequested, getRecomendationsRequested } from './store';\nimport { getMovieDetailsUrl, getPosterUrl, getRecomendationsUrl } from '../../API';\nimport { StyledContainer } from './styles';\nimport { Box } from '@material-ui/core';\nimport { MovieInfo, RecomendationsList } from './';\n\nexport const MovieDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const { title, poster_path, budget, genres, overview, production_countries, release_date, revenue, tagline } =\n    useSelector(details);\n\n  const language = i18n.language;\n  const { t } = useTranslation();\n  const { id } = useParams<{ id: string }>();\n  const detailsPath = getMovieDetailsUrl(language, Number(id));\n  const posterSrc = getPosterUrl(poster_path);\n  const recomendationsPath = getRecomendationsUrl(language, Number(id));\n\n  useEffect(() => {\n    dispatch(getMovieDetailsRequested(detailsPath));\n    dispatch(getRecomendationsRequested(recomendationsPath));\n  }, [dispatch, detailsPath, recomendationsPath]);\n\n  return (\n    <StyledContainer>\n      <h2>{title}</h2>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <img src={posterSrc} alt=\"Alt text\" />\n        {overview && (\n          <MovieInfo\n            budget={budget}\n            genres={genres}\n            production_countries={production_countries}\n            release_date={release_date}\n            revenue={revenue}\n            tagline={tagline}\n          />\n        )}\n      </Box>\n      <div>\n        <h3>{t('details.overview')}</h3>\n        <p className=\"overview\">{overview}</p>\n      </div>\n      <div className=\"recomendations\">\n        <h3>{t('details.recomendations')}</h3>\n        <RecomendationsList />\n      </div>\n    </StyledContainer>\n  );\n};\n","import { Container, Select } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledSelect = styled(Select)({\n  width: '140px',\n  fontSize: '14px',\n  color: 'black',\n  margin: '8px',\n});\n\nexport const StyledContainer = styled(Container)({\n  width: '75%',\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","export const GET_GENRES_SUCCESS = 'GET_GENRES_SUCCESS';\nexport const GET_GENRES_ERROR = 'GET_GENRES_ERROR';\nexport const GET_GENRES_REQUESTED = 'GET_GENRES_REQUESTED';\nexport const GET_FILTERED_MOVIES_SUCCESS = 'GET_FILTERED_MOVIES_SUCCESS';\nexport const GET_FILTERED_MOVIES_ERROR = 'GET_FILTERED_MOVIES_ERROR';\nexport const GET_FILTERED_MOVIES_REQUESTED = 'GET_FILTERED_MOVIES_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getGenresSuccess = (genres: []) => {\n  return {\n    type: GET_GENRES_SUCCESS,\n    payload: genres,\n  };\n};\n\nexport const getGenresError = (error: Error) => {\n  return {\n    type: GET_GENRES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getGenresRequested = (url: string) => {\n  return {\n    type: GET_GENRES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getFilteredMoviesSuccess = (movies: []) => {\n  return {\n    type: GET_FILTERED_MOVIES_SUCCESS,\n    payload: movies,\n  };\n};\n\nexport const getFilteredMoviesError = (error: Error) => {\n  return {\n    type: GET_FILTERED_MOVIES_ERROR,\n    payload: error,\n  };\n};\n\nexport const getFilteredMoviesRequested = (url: string) => {\n  return {\n    type: GET_FILTERED_MOVIES_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport {\n  getGenresError,\n  getGenresSuccess,\n  GET_GENRES_REQUESTED,\n  getFilteredMoviesError,\n  getFilteredMoviesSuccess,\n  GET_FILTERED_MOVIES_REQUESTED,\n  getTotalPages,\n} from './actions';\n\nexport function* getGenresSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getGenresSuccess(result.genres));\n  } catch (error) {\n    put(getGenresError(error));\n  }\n}\n\nexport function* watchGenresSaga() {\n  yield takeEvery(GET_GENRES_REQUESTED, getGenresSaga);\n}\n\nexport function* getFilteredMoviesSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getFilteredMoviesSuccess(result.results));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getFilteredMoviesError(error));\n  }\n}\n\nexport function* watchFilteredMoviesSaga() {\n  yield takeEvery(GET_FILTERED_MOVIES_REQUESTED, getFilteredMoviesSaga);\n}\n","export const genres = ({ movies }: any) => movies.genres.genresList;\nexport const filteredMovies = ({ movies }: any) => movies.filteredMovies.movies;\nexport const totalPages = ({ movies }: any) => movies.totalPages;\n","import {\n  GET_RANDOM_MOVIE_REQUESTED,\n  GET_RANDOM_MOVIE_ERROR,\n  GET_RANDOM_MOVIE_SUCCESS,\n  GET_TOTAL_PAGES,\n} from './actions';\n\nexport const initialRandomMovieState = {\n  randomMovie: {\n    movie: {},\n    status: null,\n    error: null,\n  },\n  totalPages: 0,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const random = (state = initialRandomMovieState, action: any) => {\n  switch (action.type) {\n    case GET_RANDOM_MOVIE_REQUESTED:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Requested,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_SUCCESS:\n      return {\n        ...state,\n        randomMovie: {\n          movie: action.payload,\n          status: Status.Success,\n          error: null,\n        },\n      };\n\n    case GET_RANDOM_MOVIE_ERROR:\n      return {\n        ...state,\n        randomMovie: {\n          movie: {},\n          status: Status.Error,\n          error: action.payload,\n        },\n      };\n\n    case GET_TOTAL_PAGES:\n      return {\n        ...state,\n        totalPages: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { InputLabel, MenuItem, FormControl, TextField } from '@material-ui/core';\nimport { StyledSelect, StyledContainer } from './styles';\nimport { StyledButton } from '../../Dashboard/styles';\nimport { getGenresUrl } from '../../../API';\nimport i18n from 'i18next';\nimport { getGenresRequested, genres } from '../store';\nimport { useTranslation } from 'react-i18next';\nimport { FilterItemData } from '../';\nimport { FiltersProps } from '../types';\n\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Filters: React.FC<FiltersProps> = ({ onAplied }) => {\n  const language = i18n.language;\n  const path = getGenresUrl(language);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const genresList = useSelector(genres);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = e.target as HTMLSelectElement;\n    setGenre(target.value);\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setStartDate(e.target.value);\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setEndDate(e.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(getGenresRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <StyledContainer>\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\">{t('filters.genre')}</InputLabel>\n        <StyledSelect\n          labelId=\"demo-simple-select-label\"\n          value={genre}\n          onChange={(e) => handleGenreChange(e as React.ChangeEvent<HTMLSelectElement>)}\n        >\n          {genresList.map(({ name, id }: FilterItemData) => (\n            <MenuItem key={id} value={id}>\n              {name}\n            </MenuItem>\n          ))}\n        </StyledSelect>\n      </FormControl>\n      <TextField\n        label={t('filters.startDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleStartDateChange}\n        value={startDate}\n      />\n      <TextField\n        label={t('filters.endDate')}\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={handleEndDateChange}\n        value={endDate}\n      />\n      <StyledButton onClick={() => onAplied(genre, startDate, endDate)}>{t('filters.apply')}</StyledButton>\n    </StyledContainer>\n  );\n};\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { filteredMovies } from '../store';\nimport { StyledList } from './styles';\nimport { MovieCard } from '../../MovieCard';\nimport { ListItemData } from '../../Dashboard';\n\nexport const FilteredMoviesList: React.FC = () => {\n  const movies = useSelector(filteredMovies);\n\n  return (\n    <StyledList>\n      {movies.map(({ title, id, poster_path }: ListItemData) => (\n        <MovieCard title={title} movieID={id} poster_path={poster_path} key={id} />\n      ))}\n    </StyledList>\n  );\n};\n","import Pagination from '@material-ui/lab/Pagination';\nimport { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledPagination = styled(Pagination)({\n  '& button': {\n    background: 'rgb(45, 140, 181)',\n    '&:hover': {\n      background: 'white',\n    },\n  },\n  '& .Mui-selected': {\n    border: '2px solid black',\n    fontWeight: 'bold',\n    background: 'rgb(45, 140, 181)',\n  },\n});\n\nexport const StyledContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-around',\n  marginTop: '8px',\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { totalPages } from '../store';\nimport { StyledPagination, StyledContainer } from './styles';\n\ninterface Pagination {\n  changePage: (page: number) => void;\n  page: number;\n}\n\nexport const MoviesPagination: React.FC<Pagination> = ({ changePage, page }) => {\n  const pages = useSelector(totalPages);\n  return (\n    <StyledContainer>\n      <StyledPagination\n        count={pages}\n        size=\"large\"\n        shape=\"rounded\"\n        onChange={(e, page) => changePage(page)}\n        page={page}\n      />\n    </StyledContainer>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Filters, MoviesPagination, FilteredMoviesList } from './';\nimport { useDispatch } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getFilteredMoviesRequested } from './store';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const Movies: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(DEFAULT_PAGE);\n  };\n\n  useEffect(() => {\n    dispatch(getFilteredMoviesRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MoviesPagination changePage={(page) => setPage(page)} page={page} />\n      <FilteredMoviesList />\n    </div>\n  );\n};\n","export const GET_RANDOM_MOVIE_SUCCESS = 'GET_RANDOM_MOVIE_SUCCESS';\nexport const GET_RANDOM_MOVIE_ERROR = 'GET_RANDOM_MOVIE_ERROR';\nexport const GET_RANDOM_MOVIE_REQUESTED = 'GET_RANDOM_MOVIE_REQUESTED';\nexport const GET_TOTAL_PAGES = 'GET_TOTAL_PAGES';\n\nexport const getRandomMovieSuccess = (movie: {}) => {\n  return {\n    type: GET_RANDOM_MOVIE_SUCCESS,\n    payload: movie,\n  };\n};\n\nexport const getRandomMovieError = (error: Error) => {\n  return {\n    type: GET_RANDOM_MOVIE_ERROR,\n    payload: error,\n  };\n};\n\nexport const getRandomMovieRequested = (url: string) => {\n  return {\n    type: GET_RANDOM_MOVIE_REQUESTED,\n    payload: url,\n  };\n};\n\nexport const getTotalPages = (totalPages: Number) => {\n  return {\n    type: GET_TOTAL_PAGES,\n    payload: totalPages,\n  };\n};\n","export const getRandomNumber = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getRandomPage = (totalPages: number) => {\n  return getRandomNumber(1, totalPages);\n};\n\nexport const getRandomMovie = (array: []) => {\n  return array.length ? array[getRandomNumber(0, array.length - 1)] : array;\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\nimport { getRandomMovieError, getRandomMovieSuccess, GET_RANDOM_MOVIE_REQUESTED, getTotalPages } from './actions';\nimport { getRandomMovie } from '../utils';\n\nexport function* getRandomMovieSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    const movie = yield getRandomMovie(result.results);\n    yield put(getRandomMovieSuccess(movie));\n    yield put(getTotalPages(result.total_pages));\n  } catch (error) {\n    put(getRandomMovieError(error));\n  }\n}\n\nexport function* watchRandomMovieSaga() {\n  yield takeEvery(GET_RANDOM_MOVIE_REQUESTED, getRandomMovieSaga);\n}\n","export const randomMovie = ({ random }: any) => random.randomMovie.movie;\nexport const totalPagesForRandom = ({ random }: any) => random.totalPages;\n","import { GET_LIST_DETAILS_ERROR, GET_LIST_DETAILS_SUCCESS, GET_LIST_DETAILS_REQUESTED } from './actions';\n\nexport const initialListDetailsState = {\n  details: {},\n  status: null,\n  error: null,\n};\n\nenum Status {\n  Requested = 'requested',\n  Success = 'success',\n  Error = 'error',\n}\n\nexport const listDetails = (state = initialListDetailsState, action: any) => {\n  switch (action.type) {\n    case GET_LIST_DETAILS_REQUESTED:\n      return {\n        ...state,\n        status: Status.Requested,\n      };\n\n    case GET_LIST_DETAILS_SUCCESS:\n      return {\n        ...state,\n        details: action.payload,\n        status: Status.Success,\n      };\n\n    case GET_LIST_DETAILS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Filters } from '../Movies';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMoviesUrl } from '../../API';\nimport i18n from 'i18next';\nimport { getRandomMovieRequested, randomMovie, totalPagesForRandom } from './store';\nimport { getRandomPage } from './utils';\nimport { MovieCard } from '../MovieCard';\n\nconst DEFAULT_PAGE = 1;\nconst DEFAULT_FILTERS_VALUE = '';\n\nexport const RandomMovie: React.FC = () => {\n  const language = i18n.language;\n  const [page, setPage] = useState(DEFAULT_PAGE);\n  const dispatch = useDispatch();\n  const totalPages = useSelector(totalPagesForRandom);\n  const { title, id, poster_path } = useSelector(randomMovie);\n\n  const [genre, setGenre] = useState(DEFAULT_FILTERS_VALUE);\n  const [startDate, setStartDate] = useState(DEFAULT_FILTERS_VALUE);\n  const [endDate, setEndDate] = useState(DEFAULT_FILTERS_VALUE);\n\n  const path = getMoviesUrl(language, genre, startDate, endDate, page);\n\n  const applyFilterParams = (genre: string, startDate: string, endDate: string) => {\n    setGenre(genre);\n    setStartDate(startDate);\n    setEndDate(endDate);\n    setPage(getRandomPage(totalPages));\n  };\n\n  useEffect(() => {\n    dispatch(getRandomMovieRequested(path));\n  }, [dispatch, path]);\n\n  return (\n    <div>\n      <Filters onAplied={applyFilterParams} />\n      <MovieCard title={title} movieID={id} poster_path={poster_path} />\n    </div>\n  );\n};\n","import { styled } from '@material-ui/core/styles';\nimport { Container, Button, Input } from '@material-ui/core';\n\nexport const StyledContainer = styled(Container)({\n  width: '64%',\n  margin: '40px auto',\n  display: 'flex',\n  justifyContent: 'space-around',\n});\n\nexport const StyledButton = styled(Button)({\n  fontSize: '16px',\n  fontWeight: 'bold',\n  color: 'black',\n  background: 'rgb(45, 140, 181)',\n});\n\nexport const StyledInput = styled(Input)({\n  width: '30%',\n});\n","import React, { useState } from 'react';\nimport { StyledContainer, StyledButton, StyledInput } from './styles';\nimport { useTranslation } from 'react-i18next';\nimport i18n from 'i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createList } from '../store';\nimport { sessionID } from '../../LogIn/store';\nimport { getCreateListUrl } from '../../../API';\n\nconst DEFAULT_INPUT_VALUE = '';\n\nexport const ListInput: React.FC = () => {\n  const { t } = useTranslation();\n  const language = i18n.language;\n  const dispatch = useDispatch();\n  const id = useSelector(sessionID);\n\n  const [name, setName] = useState<string>(DEFAULT_INPUT_VALUE);\n  const [description, setDescription] = useState<string>(DEFAULT_INPUT_VALUE);\n\n  const path = getCreateListUrl(id);\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  };\n\n  const handleDescriptionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  };\n\n  const listData = {\n    name,\n    description,\n    language,\n  };\n\n  const handleClick = () => {\n    dispatch(createList({ url: path, listData }));\n    setName(DEFAULT_INPUT_VALUE);\n    setDescription(DEFAULT_INPUT_VALUE);\n  };\n\n  return (\n    <StyledContainer>\n      <StyledInput placeholder={t('lists.name')} value={name} onChange={handleNameChange} />\n      <StyledInput placeholder={t('lists.description')} value={description} onChange={handleDescriptionChange} />\n      <StyledButton onClick={handleClick}>{t('lists.createList')}</StyledButton>\n    </StyledContainer>\n  );\n};\n","import { List, Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledList = styled(List)({\n  width: '60%',\n  margin: 'auto',\n});\n\nexport const StyledContainer = styled(Container)({\n  height: '80px',\n  width: '94%',\n  marginTop: '8px',\n  borderRadius: '4px',\n  '& span': {\n    fontSize: '20px',\n  },\n  '&:hover': {\n    background: 'rgb(232, 232, 232)',\n    cursor: 'pointer',\n    '& span': {\n      fontWeight: 'bold',\n    },\n  },\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { userLists, deleteList } from '../store';\nimport { sessionID } from '../../LogIn/store';\nimport { ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core';\nimport { StyledList, StyledContainer } from './styles';\nimport { ListItemType } from '../types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { deleteListUrl } from '../../../API';\n\nexport const Lists: React.FC = () => {\n  const lists = useSelector(userLists);\n  const dispatch = useDispatch();\n  const id = useSelector(sessionID);\n  const history = useHistory();\n\n  const handleDeleteListClick = (listID: string) => {\n    const path = deleteListUrl(id, listID);\n    dispatch(deleteList(path));\n  };\n\n  return (\n    <StyledList>\n      {lists.map(({ name, description, id }: ListItemType) => (\n        <StyledContainer key={id} onClick={() => history.push(`${id}`)}>\n          <ListItem>\n            <ListItemText primary={name} secondary={description} />\n            <ListItemSecondaryAction>\n              <IconButton\n                onClick={(e) => {\n                  e.stopPropagation();\n                  handleDeleteListClick(id);\n                }}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </StyledContainer>\n      ))}\n    </StyledList>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { ListInput } from './Input';\nimport { Lists } from './Lists';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCreatedListsRequested, lastCreatedList, lastDeletedList } from './store';\nimport { getCreatedListsUrl } from '../../API';\nimport i18n from 'i18next';\nimport { sessionID } from '../LogIn/store';\n\nexport const CreatedLists: React.FC = () => {\n  const dispatch = useDispatch();\n  const language = i18n.language;\n  const id = useSelector(sessionID);\n  const createdList = useSelector(lastCreatedList);\n  const deletedList = useSelector(lastDeletedList);\n  const path = getCreatedListsUrl(language, id);\n\n  useEffect(() => {\n    dispatch(getCreatedListsRequested(path));\n  }, [dispatch, path, createdList, deletedList]);\n\n  return (\n    <div>\n      <ListInput />\n      <Lists />\n    </div>\n  );\n};\n","export const GET_LIST_DETAILS_SUCCESS = 'GET_LIST_DETAILS_SUCCESS';\nexport const GET_LIST_DETAILS_ERROR = 'GET_LIST_DETAILS_ERROR';\nexport const GET_LIST_DETAILS_REQUESTED = 'GET_LIST_DETAILS_REQUESTED';\n\nexport const getListDetailsSuccess = (listDetails: {}) => {\n  return {\n    type: GET_LIST_DETAILS_SUCCESS,\n    payload: listDetails,\n  };\n};\n\nexport const getListDetailsError = (error: Error) => {\n  return {\n    type: GET_LIST_DETAILS_ERROR,\n    payload: error,\n  };\n};\n\nexport const getListDetailsRequested = (url: string) => {\n  return {\n    type: GET_LIST_DETAILS_REQUESTED,\n    payload: url,\n  };\n};\n","import { put, takeEvery } from 'redux-saga/effects';\nimport { AnyAction } from 'redux';\n\nimport { GET_LIST_DETAILS_REQUESTED, getListDetailsSuccess, getListDetailsError } from './actions';\n\nexport function* getListDetailsSaga({ payload }: AnyAction): any {\n  try {\n    const data = yield fetch(payload);\n    const result = yield data.json();\n    yield put(getListDetailsSuccess(result));\n  } catch (error) {\n    put(getListDetailsError(error));\n  }\n}\n\nexport function* watchListDetailsSaga() {\n  yield takeEvery(GET_LIST_DETAILS_REQUESTED, getListDetailsSaga);\n}\n","export const moviesFromList = ({ listDetails }: any) => listDetails.details.items;\nexport const listName = ({ listDetails }: any) => listDetails.details.name;\n","import { styled } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\n\nexport const StyledList = styled(List)({\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'space-around',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n});\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport i18n from 'i18next';\nimport { getListDetailsRequested, moviesFromList, listName } from './store';\nimport { getListDetailsUrl } from '../../API';\nimport { ListItemData } from '../Dashboard';\nimport { MovieCard } from '../MovieCard';\nimport { StyledList } from './styles';\nimport { lastRemovedMovie } from '../CreatedLists/store';\n\nexport const CreatedListDetails: React.FC = () => {\n  const dispatch = useDispatch();\n  const language = i18n.language;\n  const { list_id } = useParams<{ list_id: string }>();\n  const path = getListDetailsUrl(list_id, language);\n  const movies = useSelector(moviesFromList);\n  const name = useSelector(listName);\n  const removedMovie = useSelector(lastRemovedMovie);\n\n  useEffect(() => {\n    dispatch(getListDetailsRequested(path));\n  }, [dispatch, path, removedMovie]);\n\n  return (\n    <div>\n      <h1>{name}</h1>\n      {movies && (\n        <StyledList>\n          {movies.map(({ title, id, poster_path }: ListItemData) => (\n            <MovieCard title={title} movieID={id} poster_path={poster_path} key={id} isRenderedInUserList />\n          ))}\n        </StyledList>\n      )}\n    </div>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  margin: '40px auto',\n});\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from '@material-ui/core';\nimport { StyledContainer } from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRequestTokenRequested, requestToken, getSessionIDRequested, sessionID } from './store';\nimport { getRequestTokenUrl, getPermissionUrl, getSessionIDUrl } from '../../API';\nimport { useParams } from 'react-router-dom';\n\nexport const LogIn: React.FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const token = useSelector(requestToken);\n  const requestTokenPath = getRequestTokenUrl();\n  const permissionPath = getPermissionUrl(token);\n  const { request_token } = useParams<{ request_token: string }>();\n  console.log(request_token);\n  const sessionIDPath = getSessionIDUrl(request_token);\n  const session_id = useSelector(sessionID);\n\n  useEffect(() => {\n    dispatch(getRequestTokenRequested(requestTokenPath));\n    return () => {\n      localStorage.setItem('session_id', session_id);\n    };\n  }, [dispatch, session_id, requestTokenPath]);\n\n  useEffect(() => {\n    if (request_token) {\n      dispatch(getSessionIDRequested(sessionIDPath, JSON.stringify({ request_token })));\n    }\n  }, [dispatch, request_token, sessionIDPath]);\n\n  return (\n    <StyledContainer>\n      {session_id ? <p>{t('logIn.isLogged')}</p> : <Link href={permissionPath}>{t('logIn.logInLink')}</Link>}\n    </StyledContainer>\n  );\n};\n","import { Container } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const StyledContainer = styled(Container)({\n  background: 'rgba(240, 240, 240)',\n  color: 'black',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  width: '90%',\n  minWidth: '1000px',\n  minHeight: '100vh',\n  fontFamily: 'fangsong',\n  marginTop: '-20px',\n});\n","import { NavBar } from './components/NavBar';\nimport { Dashboard, MoviesList } from './components/Dashboard';\nimport { MovieDetails } from './components/MovieDetails';\nimport { Movies } from './components/Movies';\nimport { RandomMovie } from './components/RandomMovie';\nimport { CreatedLists } from './components/CreatedLists';\nimport { CreatedListDetails } from './components/CreatedListDetails';\nimport { LogIn } from './components/LogIn';\nimport { StyledContainer } from './styles';\nimport './i18n/config';\nimport { useTranslation } from 'react-i18next';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Router basename={`${process.env.PUBLIC_URL}/`}>\n      <StyledContainer maxWidth={false}>\n        <h1>{t('title')}</h1>\n        <Switch>\n          <Route path=\"/\" component={NavBar} />\n        </Switch>\n        <Switch>\n          <Route path=\"/login\" exact component={LogIn} />\n          <Route path=\"/login/:request_token\" exact component={LogIn} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/movie-details/:id\" component={MovieDetails} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/random movie/\" component={RandomMovie} />\n          <Route path=\"/lists\" exact component={CreatedLists} />\n          <Route path=\"/lists/:list_id\" component={CreatedListDetails} />\n        </Switch>\n        <Switch>\n          <Route path=\"/dashboard/:list\" exact component={MoviesList} />\n        </Switch>\n      </StyledContainer>\n    </Router>\n  );\n};\n\nexport default App;\n","import { initialListsState } from '../components/Dashboard/store';\nimport { initialMoviesState } from '../components/Movies/store';\nimport { initialMovieDetailsState } from '../components/MovieDetails/store';\nimport { initialRandomMovieState } from '../components/RandomMovie/store';\nimport { initialLogInState } from '../components/LogIn/store';\nimport { initialCreatedListsState } from '../components/CreatedLists/store';\nimport { initialListDetailsState } from '../components/CreatedListDetails/store';\n\nexport const initialState = {\n  lists: initialListsState,\n  movies: initialMoviesState,\n  movieDetails: initialMovieDetailsState,\n  random: initialRandomMovieState,\n  logIn: initialLogInState,\n  createdLists: initialCreatedListsState,\n  listDetails: initialListDetailsState,\n} as any;\n","import { combineReducers } from 'redux';\nimport { lists } from '../components/Dashboard/store';\nimport { movies } from '../components/Movies/store';\nimport { movieDetails } from '../components/MovieDetails/store';\nimport { random } from '../components/RandomMovie/store';\nimport { logIn } from '../components/LogIn/store';\nimport { createdLists } from '../components/CreatedLists/store';\nimport { listDetails } from '../components/CreatedListDetails/store';\n\nexport default combineReducers({\n  lists,\n  movies,\n  movieDetails,\n  random,\n  logIn,\n  createdLists,\n  listDetails,\n});\n","import { all } from 'redux-saga/effects';\nimport { watchMoviesSaga } from '../components/Dashboard/store';\nimport { watchGenresSaga, watchFilteredMoviesSaga } from '../components/Movies/store';\nimport { watchMovieDetailsSaga, watchRecomendationsSaga } from '../components/MovieDetails/store';\nimport { watchRandomMovieSaga } from '../components/RandomMovie/store';\nimport { watchRequestTokenSaga, watchSessionIDSaga } from '../components/LogIn/store';\nimport {\n  watchCreatedListsSaga,\n  watchCreateListSaga,\n  watchDeleteListSaga,\n  watchAddMovieToListSaga,\n  watchRemoveMovieFromListSaga,\n} from '../components/CreatedLists/store';\nimport { watchListDetailsSaga } from '../components/CreatedListDetails/store';\n\nexport default function* rootSaga() {\n  yield all([\n    watchMoviesSaga(),\n    watchGenresSaga(),\n    watchFilteredMoviesSaga(),\n    watchMovieDetailsSaga(),\n    watchRecomendationsSaga(),\n    watchRandomMovieSaga(),\n    watchRequestTokenSaga(),\n    watchSessionIDSaga(),\n    watchCreatedListsSaga(),\n    watchCreateListSaga(),\n    watchDeleteListSaga(),\n    watchAddMovieToListSaga(),\n    watchListDetailsSaga(),\n    watchRemoveMovieFromListSaga(),\n  ]);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { initialState } from './initialState';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composedEnhacers = compose(\n  applyMiddleware(sagaMiddleware),\n  process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION__() : null || compose\n);\n\nexport default createStore(rootReducer, initialState, composedEnhacers);\n\nsagaMiddleware.run(rootSaga);\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}